///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$#,##0.00;($#,##0.00)';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';

SET QVDLocation = 'lib://LuUS_DATA:DataFiles';

// LIB CONNECT TO 'LuUS_DATA:MSSQL_LuUS_DW_2.0';
LIB CONNECT TO 'LuUS_DATA:vAZ_MSSQL_LuUS_DW_2.0';


///$tab Control Date
Temp:
SELECT IIF(DATEADD(DAY, 1, EOMONTH(ls.LAST_FULL_MONTH_END_DATE, - 24)) > '2017-01-01',
           DATEADD(DAY, 1, EOMONTH(ls.LAST_FULL_MONTH_END_DATE, - 24)), 
           '2017-01-01') as START_DATE
	, FORMAT(IIF(DATEADD(DAY, 1, EOMONTH(ls.LAST_FULL_MONTH_END_DATE, - 24)) > '2017-01-01',
           DATEADD(DAY, 1, EOMONTH(ls.LAST_FULL_MONTH_END_DATE, - 24)), 
           '2017-01-01'), 'yyyyMMdd') AS START_DATE_KEY
	, ls.LAST_FULL_MONTH_END_DATE AS END_DATE
	, cl.DATE_KEY AS END_DATE_KEY 
	, cl.CALENDAR_YEAR AS CURR_YEAR
	, FORMAT(ls.LAST_FULL_MONTH_END_DATE, 'yyyy-MM') AS CURR_YEAR_MONTH
	, FORMAT(DATEADD(DAY, 1, EOMONTH(ls.LAST_FULL_MONTH_END_DATE, - 2)), 'yyyy-MM') AS PREV_YEAR_MONTH
 	, cl.CALENDAR_YEAR_QUARTER AS CURR_YEAR_QTR
	, (SELECT CALENDAR_YEAR_QUARTER FROM luinc.DIM_CLNDR WHERE DATE_FULL = DateAdd(QUARTER, -1, ls.LAST_FULL_MONTH_END_DATE)) AS PREV_YEAR_QTR
	, cl.SF_TRIMESTER AS CURR_TRIMESTER
	, (SELECT SF_TRIMESTER FROM luinc.DIM_CLNDR WHERE DATE_FULL = DateAdd(MONTH, -4, ls.LAST_FULL_MONTH_END_DATE)) AS PREV_TRIMESTER
FROM luinc.LOAD_SUMMARY ls
JOIN luinc.DIM_CLNDR cl on ls.LAST_FULL_MONTH_END_DATE = cl.DATE_FULL
WHERE ls.COMPONENT_NAME = 'CALL ACTIVITY'
;
LET cStartDate = Peek('START_DATE');
LET cStartDateKey = Peek('START_DATE_KEY');
LET cEndDate = Peek('END_DATE');
LET cEndDateKey = Peek('END_DATE_KEY');
LET cCurrYear = Peek('CURR_YEAR');
LET cCurrYearMonth = Peek('CURR_YEAR_MONTH');
LET cPrevYearMonth = Peek('PREV_YEAR_MONTH');
LET cCurrYearQtr = Peek('CURR_YEAR_QTR');
LET cPrevYearQtr = Peek('PREV_YEAR_QTR');
LET cCurrTrimester = Peek('CURR_TRIMESTER');
LET cPrevTrimester = Peek('PREV_TRIMESTER');

LET cISAMaxDate = Peek('END_DATE');

Drop Table Temp;

// Temp:
// SQL 
// SELECT MAX(cl.DATE_FULL) AS MAX_DATE
// 	FROM luinc.FACT_CLM_CALLS cc
// 	INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON cc.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY 
// 	INNER JOIN luinc.DIM_CLNDR cl ON cc.CALL_DATE_KEY = cl.DATE_KEY
// 	INNER JOIN luinc.DIM_TERRITORY t on cc.TERRITORY_KEY = t.TERRITORY_KEY
// 	INNER JOIN luinc.DIM_PRESENTATION pr on cc.PRESENTATION_KEY = pr.PRESENTATION_KEY
// 	WHERE ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1' AND pr.PRESENTATION_NAME like '%P.A.C.%')
// 		OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3') AND pr.PRESENTATION_NAME like '%P.A.C.%')
// 		OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
// ;
// LET cISAMaxDate = Peek('MAX_DATE');
// Drop Table Temp;

Temp:
SQL 
SELECT IIF(DATEADD(DAY, 1, EOMONTH(LAST_FULL_MONTH_END_DATE, - 24)) > '2017-01-01', 
           DATEADD(DAY, 1, EOMONTH(LAST_FULL_MONTH_END_DATE, - 24)), 
           '2017-01-01') AS MIN_DATE
	,CAST(END_DATE AS DATE) AS MAX_DATE
	,LAST_FULL_MONTH_END_DATE AS MAX_MONTH_END
FROM luinc.LOAD_SUMMARY ls
WHERE ls.COMPONENT_NAME = 'P4V PRINT ON DEMAND'
;
LET cPODMinDate = Peek('MIN_DATE');
LET cPODMaxDate = Peek('MAX_DATE');
LET cPODMaxMonthEnd = Peek('MAX_MONTH_END');
Drop Table Temp;

ControlDate:
LOAD
	'$(cStartDate)'		as StartDate, 
	'$(cEndDate)' 		as EndDate,
	'$(cCurrYear)'		as CurrYear, 
	'$(cCurrYearMonth)'	as CurrYearMonth,
	'$(cPrevYearMonth)'	as PrevYearMonth,
	'$(cCurrYearQtr)'	as CurrYearQtr,
	'$(cPrevYearQtr)'	as PrevYearQtr,
	'$(cCurrTrimester)'	as CurrTrimester,
	'$(cPrevTrimester)'	as PrevTrimester,
	'$(cISAMaxDate)'	as ISAMaxDate,
	'$(cPODMinDate)'	as PODMinDate,
	'$(cPODMaxDate)'	as PODMaxDate,
	'$(cPODMaxMonthEnd)' as PODMaxMonthEnd,
	Now() 				as ExtractDateTime,
    ComputerName()      as ServerName,
    'Production'       as Env 
    //IF((ComputerName()='INCW3213P' OR ComputerName()='INCW3214P'), 'Production', 'Development') as Env
    
	AUTOGENERATE 1; 

LET vEnv = Peek('Env');
SET QVDDimPath = '$(QVDLocation)/$(vEnv)/Dimensions';
SET QVDFactPath = '$(QVDLocation)/$(vEnv)/Facts';
SET QVDIntPath = '$(QVDLocation)/$(vEnv)/Internal';

STORE ControlDate INTO '$(QVDIntPath)/PSY MKT Control Date.qvd' (qvd);

///$tab Calendar
Calendar:
LOAD   DATE_KEY
     , YYYYMMDD
     , YYYY
     , YYYYQQ
     , YYYYMM
     , YYYYTT
     , RECENT_MONTH
     , RECENT_QUARTER
     , RECENT_TRIMESTER
;

SQL 
SELECT DATE_KEY
     , DATE_FULL AS YYYYMMDD
     , CALENDAR_YEAR AS YYYY
	 , CALENDAR_YEAR_QUARTER AS YYYYQQ
     , FORMAT(DATE_FULL, 'yyyy-MM') AS YYYYMM
	 , SF_TRIMESTER AS YYYYTT
	 , DENSE_RANK() OVER (ORDER BY CALENDAR_YEAR_MONTH DESC) RECENT_MONTH
     , DENSE_RANK() OVER (ORDER BY CALENDAR_YEAR_QUARTER DESC) RECENT_QUARTER
     , DENSE_RANK() OVER (ORDER BY SF_TRIMESTER DESC) RECENT_TRIMESTER
FROM LUINC.DIM_CLNDR
WHERE DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
ORDER BY DATE_KEY
;
STORE Calendar INTO '$(QVDDimPath)/PSY MKT Calendar.qvd' (qvd);


///$tab Territory
Territory:
LOAD AutoNumberHash128(BRAND, TERRITORY_KEY) as BRAND_TERRITORY_KEY
	, BRAND
	, TERRITORY_KEY
	, TERRITORY_ID
	, SALESFORCE_GROUP
    , SALESFORCE_NAME
	, REGION_NAME
	, AREA_NAME
	, TERRITORY_NAME
	, CURR_TERRITORY_REP
;
SQL 
SELECT DISTINCT ps.PRODUCT_NAME AS BRAND
	, t.TERRITORY_KEY
	, t.TERRITORY_ID
	, ps.SALESFORCE_GROUP
	, ps.SALESFORCE_GROUP_NAME  AS SALESFORCE_NAME
	, t.REGION_NAME
	, t.AREA_NAME
	, t.TERRITORY_NAME
	, t.ACCT_MGR_AD_ID CURR_TERRITORY_REP
FROM MDS.mdm.VW_LKP_PRODUCT_TO_SALESFORCE ps
JOIN luinc.DIM_TERRITORY t on ps.SALESFORCE_GROUP = t.SALESFORCE_GROUP
JOIN luinc.DIM_PRODUCT_GROUP pg on ps.PRODUCT_NAME = pg.BRAND
WHERE ps.EXP_DATE IS NULL
AND ps.FRANCHISE = 'PSY'
--AND t.TERR_CURRENT_IND = 'Y'
;

STORE Territory INTO '$(QVDDimPath)/PSY MKT Territory.qvd' (qvd);

///$tab POD Message
PODMessage:
Load POD_MESSAGE_KEY
	, POD_MESSAGE_TYPE
	, POD_MESSAGE_HEADER
;
SQL 
SELECT POD_MESSAGE_KEY
	, POD_MESSAGE_TYPE
	, POD_MESSAGE_HEADER
FROM luinc.DIM_POD_MESSAGE
WHERE POD_MESSAGE_KEY <> 0
;
STORE PODMessage INTO '$(QVDDimPath)/PSY MKT POD Message.qvd' (qvd);


///$tab Call Activity
CallActivity:
LOAD AutoNumberHash128(CALL_DATE_KEY, CUSTOMER_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY
	, CALL_DATE_KEY
	, CUSTOMER_KEY
	//, TERRITORY_KEY
    //, BRAND
    , AutoNumberHash128(BRAND, TERRITORY_KEY) as BRAND_TERRITORY_KEY
    , CALL_ID
	, CALLER_ID
	, DETAIL_PRIORITY
	, CALL_TYPE
	, CLM_IND
	, PDE
    , MONTH_DATE_KEY
    //, AutoNumberHash128(MONTH_DATE_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY_2
;
SQL 
SELECT ca.CALL_DATE_KEY
	, ca.CUSTOMER_KEY
	, ca.TERRITORY_KEY
    , pg.BRAND
    , ca.FACT_SOURCE_ID AS CALL_ID
	, ca.USER_ID as CALLER_ID
	, ca.DETAIL_PRIORITY
	, ca.CALL_TYPE
	, ca.CLM_IND
    , cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
	, SUM(ca.PDE) AS PDE
FROM luinc.FACT_CALL_ACTIVITY ca
INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON ca.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
INNER JOIN luinc.DIM_CLNDR cl ON ca.CALL_DATE_KEY = cl.DATE_KEY
INNER JOIN luinc.DIM_TERRITORY t ON ca.TERRITORY_KEY = t.TERRITORY_KEY
WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
  AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
    OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
    OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
GROUP BY ca.CALL_DATE_KEY
	, ca.CUSTOMER_KEY
	, ca.TERRITORY_KEY
    , pg.BRAND
    , ca.FACT_SOURCE_ID
	, ca.USER_ID
	, ca.DETAIL_PRIORITY
	, ca.CALL_TYPE
	, ca.CLM_IND
    , cl.CALENDAR_YEAR_MONTH
;

STORE CallActivity INTO '$(QVDFactPath)/PSY MKT Call Activity.qvd' (qvd);



///$tab ISA Calls
ISACalls:
LOAD  AutoNumberHash128(CALL_DATE_KEY, CUSTOMER_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY
	, CALL_DATE_KEY
	, CUSTOMER_KEY
	//, TERRITORY_KEY
    //, BRAND
    , AutoNumberHash128(BRAND, TERRITORY_KEY) as BRAND_TERRITORY_KEY
	, KEY_MESSAGE_KEY
	, ELEMENT_TYPE
	, TAG_NAME
	, CLM_CALL_ID
	, CLM_CALLER_ID
	, CLM_COUNT
    , MONTH_DATE_KEY
    //, AutoNumberHash128(MONTH_DATE_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY_2
;
SQL
SELECT cc.CALL_DATE_KEY
	, cc.CUSTOMER_KEY
	, cc.TERRITORY_KEY
    , pg.BRAND
	, cc.KEY_MESSAGE_KEY
	, cc.ELEMENT_TYPE
	, cc.TAG_NAME
	, cc.CALL_ID AS CLM_CALL_ID
	, cc.AD_ID AS CLM_CALLER_ID
	, cc.CLM_COUNT
    , cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
FROM luinc.FACT_CLM_CALLS cc
INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON cc.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY 
INNER JOIN luinc.DIM_CLNDR cl ON cc.CALL_DATE_KEY = cl.DATE_KEY
INNER JOIN luinc.DIM_TERRITORY t on cc.TERRITORY_KEY = t.TERRITORY_KEY
INNER JOIN luinc.DIM_PRESENTATION pr on cc.PRESENTATION_KEY = pr.PRESENTATION_KEY
WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
  AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1' AND pr.PRESENTATION_NAME like '%P.A.C.%')
    OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3') AND pr.PRESENTATION_NAME like '%P.A.C.%')
    OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
;

STORE ISACalls INTO '$(QVDFactPath)/PSY MKT Calls.qvd' (qvd);

///$tab POD Utilization
PODUsage:
Load AutoNumberHash128(DATE_KEY, CUSTOMER_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY,
	DATA_TYPE,
	DATE_KEY,
	CUSTOMER_KEY,
	AutoNumberHash128(BRAND, TERRITORY_KEY) as BRAND_TERRITORY_KEY,
    POD_MESSAGE_KEY,
    POD_USAGE,
    TERRITORY_KEY AS POD_USER,
    MONTH_DATE_KEY
    //,AutoNumberHash128(MONTH_DATE_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY_2
;
SQL
SELECT f.PROMOTION_TYPE AS DATA_TYPE
	, f.DATE_KEY
	, f.CUSTOMER_KEY 
	, pg.BRAND
	, f.TERRITORY_KEY
	, f.POD_MESSAGE_KEY
    , cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
	, SUM(f.QUANTITY) AS POD_USAGE
FROM luinc.FACT_PROMOTIONS f
INNER JOIN luinc.DIM_POD_MESSAGE pm on f.POD_MESSAGE_KEY = pm.POD_MESSAGE_KEY
INNER JOIN luinc.DIM_PRODUCT_GROUP pg on f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
INNER JOIN luinc.DIM_CLNDR cl ON f.DATE_KEY = cl.DATE_KEY
INNER JOIN luinc.DIM_TERRITORY t on f.TERRITORY_KEY = t.TERRITORY_KEY
WHERE f.PROMOTION_TYPE = 'PRINT ON DEMAND'
	AND cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
    AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
      OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
      OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
GROUP BY f.PROMOTION_TYPE
	, f.DATE_KEY
	, f.CUSTOMER_KEY 
	, pg.BRAND
	, f.TERRITORY_KEY
	, f.POD_MESSAGE_KEY
    , cl.CALENDAR_YEAR_MONTH*100+1
;

STORE PODUsage INTO '$(QVDFactPath)/PSY MKT POD Usage.qvd' (qvd);

///$tab ISA and POD Usage
// ISAandPOD:
// Load AutoNumberHash128(MONTH_DATE_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY
// 	, MONTH_DATE_KEY
//     , AutoNumberHash128(BRAND, TERRITORY_KEY) as BRAND_TERRITORY_KEY
//     , DATE_RANGE
//     , USE_ISA
// 	, USE_POD
//     , DM_USAGE
// ;
// SQL 
// with ca as (SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
// 	, ca.TERRITORY_KEY
//     , pg.BRAND
// FROM luinc.FACT_CALL_ACTIVITY ca
// INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON ca.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
// INNER JOIN luinc.DIM_CLNDR cl ON ca.CALL_DATE_KEY = cl.DATE_KEY
// INNER JOIN luinc.DIM_TERRITORY t ON ca.TERRITORY_KEY = t.TERRITORY_KEY
// WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
//   AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
//     OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
//     OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
// ),
// isa as (
// SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
// 	, cc.TERRITORY_KEY
//     , pg.BRAND
// FROM luinc.FACT_CLM_CALLS cc
// INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON cc.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY 
// INNER JOIN luinc.DIM_CLNDR cl ON cc.CALL_DATE_KEY = cl.DATE_KEY
// INNER JOIN luinc.DIM_TERRITORY t on cc.TERRITORY_KEY = t.TERRITORY_KEY
// INNER JOIN luinc.DIM_PRESENTATION pr on cc.PRESENTATION_KEY = pr.PRESENTATION_KEY
// WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
//   AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1' AND pr.PRESENTATION_NAME like '%P.A.C.%')
//     OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3') AND pr.PRESENTATION_NAME like '%P.A.C.%')
//     OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
// ),
// pod as (
// SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
// 	, pg.BRAND
// 	, f.TERRITORY_KEY
// FROM luinc.FACT_PROMOTIONS f
// INNER JOIN luinc.DIM_POD_MESSAGE pm on f.POD_MESSAGE_KEY = pm.POD_MESSAGE_KEY
// INNER JOIN luinc.DIM_PRODUCT_GROUP pg on f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
// INNER JOIN luinc.DIM_CLNDR cl ON f.DATE_KEY = cl.DATE_KEY
// INNER JOIN luinc.DIM_TERRITORY t on f.TERRITORY_KEY = t.TERRITORY_KEY
// WHERE f.PROMOTION_TYPE = 'PRINT ON DEMAND'
// 	AND cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
//     AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
//       OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
//       OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
// )
// select ca.BRAND
// 	, MIN(ca.MONTH_DATE_KEY) AS MONTH_DATE_KEY
// 	, ca.TERRITORY_KEY
// 	, cl.SF_TRIMESTER AS DATE_RANGE
// 	, MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) AS [USE_ISA]
// 	, MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N')) AS [USE_POD]
// 	, CASE MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) +
// 	       MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N'))
// 		WHEN 'NN' THEN 'NONE'
// 		WHEN 'YN' THEN 'ISA ONLY'
// 		WHEN 'NY' THEN 'POD ONLY'
// 		WHEN 'YY' THEN 'BOTH'
// 		END AS DM_USAGE
// FROM ca
// JOIN luinc.DIM_TERRITORY t on ca.TERRITORY_KEY = t.TERRITORY_KEY
// JOIN luinc.DIM_CLNDR cl on ca.MONTH_DATE_KEY = cl.DATE_KEY
// LEFT JOIN isa on ca.MONTH_DATE_KEY = isa.MONTH_DATE_KEY and ca.BRAND = isa.BRAND and ca.TERRITORY_KEY = isa.TERRITORY_KEY
// LEFT JOIN pod on ca.MONTH_DATE_KEY = pod.MONTH_DATE_KEY and ca.BRAND = pod.BRAND and ca.TERRITORY_KEY = pod.TERRITORY_KEY
// WHERE ca.MONTH_DATE_KEY BETWEEN '$(cStartDateKey)' AND '$(cEndDateKey)'
// GROUP BY ca.BRAND
// 	, ca.TERRITORY_KEY
// 	, cl.SF_TRIMESTER
// UNION
// select ca.BRAND
// 	, MIN(ca.MONTH_DATE_KEY) AS MONTH_DATE_KEY
// 	, ca.TERRITORY_KEY
// 	, cl.CALENDAR_YEAR_QUARTER AS DATE_RANGE
// 	, MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) AS [USE_ISA]
// 	, MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N')) AS [USE_POD]
// 	, CASE MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) +
// 	       MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N'))
// 		WHEN 'NN' THEN 'NONE'
// 		WHEN 'YN' THEN 'ISA ONLY'
// 		WHEN 'NY' THEN 'POD ONLY'
// 		WHEN 'YY' THEN 'BOTH'
// 		END AS DM_USAGE
// from ca
// join luinc.DIM_TERRITORY t on ca.TERRITORY_KEY = t.TERRITORY_KEY
// join luinc.DIM_CLNDR cl on ca.MONTH_DATE_KEY = cl.DATE_KEY
// left join isa on ca.MONTH_DATE_KEY = isa.MONTH_DATE_KEY and ca.BRAND = isa.BRAND and ca.TERRITORY_KEY = isa.TERRITORY_KEY
// left join pod on ca.MONTH_DATE_KEY = pod.MONTH_DATE_KEY and ca.BRAND = pod.BRAND and ca.TERRITORY_KEY = pod.TERRITORY_KEY
// WHERE ca.MONTH_DATE_KEY BETWEEN '$(cStartDateKey)' AND '$(cEndDateKey)'
// GROUP BY ca.BRAND
// 	, ca.TERRITORY_KEY
// 	, cl.CALENDAR_YEAR_QUARTER
// UNION
// select ca.BRAND
// 	, MIN(ca.MONTH_DATE_KEY) AS MONTH_DATE_KEY
// 	, ca.TERRITORY_KEY
// 	, FORMAT(cl.DATE_FULL, 'yyyy-MM') AS DATE_RANGE
// 	, MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) AS [USE_ISA]
// 	, MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N')) AS [USE_POD]
// 	, CASE MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) +
// 	       MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N'))
// 		WHEN 'NN' THEN 'NONE'
// 		WHEN 'YN' THEN 'ISA ONLY'
// 		WHEN 'NY' THEN 'POD ONLY'
// 		WHEN 'YY' THEN 'BOTH'
// 		END AS DM_USAGE
// from ca
// join luinc.DIM_TERRITORY t on ca.TERRITORY_KEY = t.TERRITORY_KEY
// join luinc.DIM_CLNDR cl on ca.MONTH_DATE_KEY = cl.DATE_KEY
// left join isa on ca.MONTH_DATE_KEY = isa.MONTH_DATE_KEY and ca.BRAND = isa.BRAND and ca.TERRITORY_KEY = isa.TERRITORY_KEY
// left join pod on ca.MONTH_DATE_KEY = pod.MONTH_DATE_KEY and ca.BRAND = pod.BRAND and ca.TERRITORY_KEY = pod.TERRITORY_KEY
// WHERE ca.MONTH_DATE_KEY BETWEEN '$(cStartDateKey)' AND '$(cEndDateKey)'
// GROUP BY ca.BRAND
// 	, ca.TERRITORY_KEY
// 	, FORMAT(cl.DATE_FULL, 'yyyy-MM')
// ORDER BY BRAND
// 	, TERRITORY_KEY
// 	, DATE_RANGE
// ;
// STORE ISAandPOD INTO '$(QVDFactPath)\PSY MKT ISA and POD Usage.qvd' (qvd);
///$tab ISA and POD Usage - Qlik Cloud
ISAandPOD:
Load AutoNumberHash128(MONTH_DATE_KEY, AutoNumberHash128(BRAND, TERRITORY_KEY)) as BRIDGE_KEY
	, MONTH_DATE_KEY
    , AutoNumberHash128(BRAND, TERRITORY_KEY) as BRAND_TERRITORY_KEY
    , DATE_RANGE
    , USE_ISA
	, USE_POD
    , DM_USAGE
;
SQL 
SELECT ca.BRAND
    , MIN(ca.MONTH_DATE_KEY) AS MONTH_DATE_KEY
    , ca.TERRITORY_KEY
    , cl.SF_TRIMESTER AS DATE_RANGE
    , MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) AS [USE_ISA]
    , MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N')) AS [USE_POD]
    , CASE MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) +
           MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N'))
        WHEN 'NN' THEN 'NONE'
        WHEN 'YN' THEN 'ISA ONLY'
        WHEN 'NY' THEN 'POD ONLY'
        WHEN 'YY' THEN 'BOTH'
        END AS DM_USAGE
FROM (
    SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
        , ca.TERRITORY_KEY
        , pg.BRAND
    FROM luinc.FACT_CALL_ACTIVITY ca
    INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON ca.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
    INNER JOIN luinc.DIM_CLNDR cl ON ca.CALL_DATE_KEY = cl.DATE_KEY
    INNER JOIN luinc.DIM_TERRITORY t ON ca.TERRITORY_KEY = t.TERRITORY_KEY
    WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
      AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
        OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
        OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
) ca
JOIN luinc.DIM_TERRITORY t on ca.TERRITORY_KEY = t.TERRITORY_KEY
JOIN luinc.DIM_CLNDR cl on ca.MONTH_DATE_KEY = cl.DATE_KEY
LEFT JOIN (
    SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
        , cc.TERRITORY_KEY
        , pg.BRAND
    FROM luinc.FACT_CLM_CALLS cc
    INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON cc.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY 
    INNER JOIN luinc.DIM_CLNDR cl ON cc.CALL_DATE_KEY = cl.DATE_KEY
    INNER JOIN luinc.DIM_TERRITORY t on cc.TERRITORY_KEY = t.TERRITORY_KEY
    INNER JOIN luinc.DIM_PRESENTATION pr on cc.PRESENTATION_KEY = pr.PRESENTATION_KEY
    WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
      AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1' AND pr.PRESENTATION_NAME like '%P.A.C.%')
        OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3') AND pr.PRESENTATION_NAME like '%P.A.C.%')
        OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
	) isa on ca.MONTH_DATE_KEY = isa.MONTH_DATE_KEY and ca.BRAND = isa.BRAND and ca.TERRITORY_KEY = isa.TERRITORY_KEY
    
    LEFT JOIN (
        SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
            , pg.BRAND
            , f.TERRITORY_KEY
        FROM 
        	luinc.FACT_PROMOTIONS f
            INNER JOIN luinc.DIM_POD_MESSAGE pm on f.POD_MESSAGE_KEY = pm.POD_MESSAGE_KEY
            INNER JOIN luinc.DIM_PRODUCT_GROUP pg on f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
            INNER JOIN luinc.DIM_CLNDR cl ON f.DATE_KEY = cl.DATE_KEY
            INNER JOIN luinc.DIM_TERRITORY t on f.TERRITORY_KEY = t.TERRITORY_KEY
            
		WHERE f.PROMOTION_TYPE = 'PRINT ON DEMAND'
			AND cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
   		 	AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
      		OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
      		OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
	) pod on ca.MONTH_DATE_KEY = pod.MONTH_DATE_KEY and ca.BRAND = pod.BRAND and ca.TERRITORY_KEY = pod.TERRITORY_KEY
    WHERE ca.MONTH_DATE_KEY BETWEEN '$(cStartDateKey)' AND '$(cEndDateKey)'
    GROUP BY ca.BRAND
        , ca.TERRITORY_KEY
        , cl.SF_TRIMESTER
    UNION
    
    SELECT
    ca.BRAND,
    MIN(ca.MONTH_DATE_KEY) AS MONTH_DATE_KEY,
    ca.TERRITORY_KEY,
    cl.CALENDAR_YEAR_QUARTER AS DATE_RANGE,
    MAX(IIF(isa.TERRITORY_KEY IS NOT NULL AND pod.TERRITORY_KEY IS NULL, 'Y', 'N')) AS [USE_ISA],
    MAX(IIF(isa.TERRITORY_KEY IS NULL AND pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N')) AS [USE_POD],
    CASE
        MAX(IIF(isa.TERRITORY_KEY IS NOT NULL AND pod.TERRITORY_KEY IS NULL, 'Y', 'N')) +
        MAX(IIF(isa.TERRITORY_KEY IS NULL AND pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N'))
        WHEN 'NN' THEN 'NONE'
        WHEN 'YN' THEN 'ISA ONLY'
        WHEN 'NY' THEN 'POD ONLY'
        WHEN 'YY' THEN 'BOTH'
    END AS DM_USAGE
FROM
    (
        SELECT
            DISTINCT cl.CALENDAR_YEAR_MONTH * 100 + 1 AS MONTH_DATE_KEY,
            ca.TERRITORY_KEY,
            pg.BRAND,
            cl.DATE_FULL,
            t.SALESFORCE_GROUP
        FROM
            luinc.FACT_CALL_ACTIVITY ca
            INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON ca.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
            INNER JOIN luinc.DIM_CLNDR cl ON ca.CALL_DATE_KEY = cl.DATE_KEY
            INNER JOIN luinc.DIM_TERRITORY t ON ca.TERRITORY_KEY = t.TERRITORY_KEY
        WHERE
            cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
            AND (
                (pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
                OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
                OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3'))
            )
    ) ca
    JOIN luinc.DIM_TERRITORY t ON ca.TERRITORY_KEY = t.TERRITORY_KEY
    JOIN (
        SELECT
            DISTINCT cl.CALENDAR_YEAR_MONTH * 100 + 1 AS MONTH_DATE_KEY,
            cl.DATE_FULL,
            cl.SF_TRIMESTER,
            cl.CALENDAR_YEAR_QUARTER,
            FORMAT(cl.DATE_FULL, 'yyyy-MM') AS FORMAT_DATE_FULL
        FROM
            luinc.DIM_CLNDR cl
    ) cl ON ca.MONTH_DATE_KEY = cl.MONTH_DATE_KEY
    LEFT JOIN (
        SELECT
            DISTINCT cl.CALENDAR_YEAR_MONTH * 100 + 1 AS MONTH_DATE_KEY,
            cc.TERRITORY_KEY,
            pg.BRAND
        FROM
            luinc.FACT_CLM_CALLS cc
            INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON cc.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
            INNER JOIN luinc.DIM_CLNDR cl ON cc.CALL_DATE_KEY = cl.DATE_KEY
            INNER JOIN luinc.DIM_TERRITORY t ON cc.TERRITORY_KEY = t.TERRITORY_KEY
            INNER JOIN luinc.DIM_PRESENTATION pr ON cc.PRESENTATION_KEY = pr.PRESENTATION_KEY
        WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
        AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1' AND pr.PRESENTATION_NAME like '%P.A.C.%')
        OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3') AND pr.PRESENTATION_NAME like '%P.A.C.%')
        OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
	) isa on ca.MONTH_DATE_KEY = isa.MONTH_DATE_KEY and ca.BRAND = isa.BRAND and ca.TERRITORY_KEY = isa.TERRITORY_KEY
    LEFT JOIN (
        SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
            , pg.BRAND
            , f.TERRITORY_KEY
        FROM 
        	luinc.FACT_PROMOTIONS f
            INNER JOIN luinc.DIM_POD_MESSAGE pm on f.POD_MESSAGE_KEY = pm.POD_MESSAGE_KEY
            INNER JOIN luinc.DIM_PRODUCT_GROUP pg on f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
            INNER JOIN luinc.DIM_CLNDR cl ON f.DATE_KEY = cl.DATE_KEY
            INNER JOIN luinc.DIM_TERRITORY t on f.TERRITORY_KEY = t.TERRITORY_KEY
            
		WHERE f.PROMOTION_TYPE = 'PRINT ON DEMAND'
			AND cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
   		 	AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
      		OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
      		OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
	) pod on ca.MONTH_DATE_KEY = pod.MONTH_DATE_KEY and ca.BRAND = pod.BRAND and ca.TERRITORY_KEY = pod.TERRITORY_KEY
    
    WHERE ca.MONTH_DATE_KEY BETWEEN '$(cStartDateKey)' AND '$(cEndDateKey)'
GROUP BY ca.BRAND
	, ca.TERRITORY_KEY
	, cl.CALENDAR_YEAR_QUARTER
UNION
select ca.BRAND
	, MIN(ca.MONTH_DATE_KEY) AS MONTH_DATE_KEY
	, ca.TERRITORY_KEY
	, FORMAT(cl.DATE_FULL, 'yyyy-MM') AS DATE_RANGE
	, MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) AS [USE_ISA]
	, MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N')) AS [USE_POD]
	, CASE MAX(IIF(isa.TERRITORY_KEY IS NOT NULL and pod.TERRITORY_KEY IS NULL, 'Y', 'N')) +
	       MAX(IIF(isa.TERRITORY_KEY IS NULL and pod.TERRITORY_KEY IS NOT NULL, 'Y', 'N'))
		WHEN 'NN' THEN 'NONE'
		WHEN 'YN' THEN 'ISA ONLY'
		WHEN 'NY' THEN 'POD ONLY'
		WHEN 'YY' THEN 'BOTH'
		END AS DM_USAGE
FROM
    (
        SELECT
            DISTINCT cl.CALENDAR_YEAR_MONTH * 100 + 1 AS MONTH_DATE_KEY,
            ca.TERRITORY_KEY,
            pg.BRAND,
            cl.DATE_FULL,
            t.SALESFORCE_GROUP
        FROM
            luinc.FACT_CALL_ACTIVITY ca
            INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON ca.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
            INNER JOIN luinc.DIM_CLNDR cl ON ca.CALL_DATE_KEY = cl.DATE_KEY
            INNER JOIN luinc.DIM_TERRITORY t ON ca.TERRITORY_KEY = t.TERRITORY_KEY
        WHERE
            cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
            AND (
                (pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
                OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
                OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3'))
            )
    ) ca
    JOIN luinc.DIM_TERRITORY t ON ca.TERRITORY_KEY = t.TERRITORY_KEY
    JOIN (
        SELECT
            DISTINCT cl.CALENDAR_YEAR_MONTH * 100 + 1 AS MONTH_DATE_KEY,
            cl.DATE_FULL,
            cl.SF_TRIMESTER,
            cl.CALENDAR_YEAR_QUARTER,
            FORMAT(cl.DATE_FULL, 'yyyy-MM') AS FORMAT_DATE_FULL
        FROM
            luinc.DIM_CLNDR cl
    ) cl ON ca.MONTH_DATE_KEY = cl.MONTH_DATE_KEY
    LEFT JOIN (
        SELECT
            DISTINCT cl.CALENDAR_YEAR_MONTH * 100 + 1 AS MONTH_DATE_KEY,
            cc.TERRITORY_KEY,
            pg.BRAND
        FROM
            luinc.FACT_CLM_CALLS cc
            INNER JOIN luinc.DIM_PRODUCT_GROUP pg ON cc.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
            INNER JOIN luinc.DIM_CLNDR cl ON cc.CALL_DATE_KEY = cl.DATE_KEY
            INNER JOIN luinc.DIM_TERRITORY t ON cc.TERRITORY_KEY = t.TERRITORY_KEY
            INNER JOIN luinc.DIM_PRESENTATION pr ON cc.PRESENTATION_KEY = pr.PRESENTATION_KEY
        WHERE cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
        AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1' AND pr.PRESENTATION_NAME like '%P.A.C.%')
        OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3') AND pr.PRESENTATION_NAME like '%P.A.C.%')
        OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
	) isa on ca.MONTH_DATE_KEY = isa.MONTH_DATE_KEY and ca.BRAND = isa.BRAND and ca.TERRITORY_KEY = isa.TERRITORY_KEY
    LEFT JOIN (
        SELECT DISTINCT cl.CALENDAR_YEAR_MONTH*100+1 AS MONTH_DATE_KEY
            , pg.BRAND
            , f.TERRITORY_KEY
        FROM 
        	luinc.FACT_PROMOTIONS f
            INNER JOIN luinc.DIM_POD_MESSAGE pm on f.POD_MESSAGE_KEY = pm.POD_MESSAGE_KEY
            INNER JOIN luinc.DIM_PRODUCT_GROUP pg on f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
            INNER JOIN luinc.DIM_CLNDR cl ON f.DATE_KEY = cl.DATE_KEY
            INNER JOIN luinc.DIM_TERRITORY t on f.TERRITORY_KEY = t.TERRITORY_KEY
            
		WHERE f.PROMOTION_TYPE = 'PRINT ON DEMAND'
			AND cl.DATE_FULL BETWEEN '$(cStartDate)' AND '$(cEndDate)'
   		 	AND ((pg.BRAND = 'ABILIFY MAINTENA' AND t.SALESFORCE_GROUP = 'PSY1')
      		OR (pg.BRAND = 'REXULTI' AND t.SALESFORCE_GROUP IN ('PSY1', 'PSY2', 'PSY3'))
      		OR (pg.BRAND = 'TRINTELLIX' AND t.SALESFORCE_GROUP IN ('PSY2', 'PSY3')))
	) pod on ca.MONTH_DATE_KEY = pod.MONTH_DATE_KEY and ca.BRAND = pod.BRAND and ca.TERRITORY_KEY = pod.TERRITORY_KEY       
WHERE ca.MONTH_DATE_KEY BETWEEN '$(cStartDateKey)' AND '$(cEndDateKey)'
GROUP BY ca.BRAND
	, ca.TERRITORY_KEY
	, FORMAT(cl.DATE_FULL, 'yyyy-MM')
ORDER BY BRAND
	, TERRITORY_KEY
	, DATE_RANGE
;
STORE ISAandPOD INTO '$(QVDFactPath)/PSY MKT ISA and POD Usage.qvd' (qvd);
///$tab Bridge
Bridge:
LOAD BRIDGE_KEY,
	CALL_DATE_KEY AS DATE_KEY,
	CUSTOMER_KEY,
	BRAND_TERRITORY_KEY
Resident CallActivity
;

Concatenate (Bridge)
LOAD BRIDGE_KEY,
	CALL_DATE_KEY AS DATE_KEY,
	CUSTOMER_KEY,
	BRAND_TERRITORY_KEY
Resident ISACalls
;

Concatenate (Bridge)
LOAD BRIDGE_KEY,
	DATE_KEY,
	CUSTOMER_KEY,
	BRAND_TERRITORY_KEY
Resident PODUsage
;

// Bridge for ISA_POD_USAGE
Concatenate (Bridge)
LOAD BRIDGE_KEY,
 	MONTH_DATE_KEY AS DATE_KEY,
 	BRAND_TERRITORY_KEY
Resident ISAandPOD
;

// Concatenate (Bridge)
// LOAD BRIDGE_KEY_2 AS BRIDGE_KEY,
// 	MONTH_DATE_KEY AS DATE_KEY,
// 	BRAND_TERRITORY_KEY
// Resident CallActivity
// ;
// Concatenate (Bridge)
// LOAD BRIDGE_KEY_2 AS BRIDGE_KEY,
// 	MONTH_DATE_KEY AS DATE_KEY,
// 	BRAND_TERRITORY_KEY
// Resident ISACalls
// ;
// Concatenate (Bridge)
// LOAD BRIDGE_KEY_2 AS BRIDGE_KEY,
// 	MONTH_DATE_KEY AS DATE_KEY,
// 	BRAND_TERRITORY_KEY
// Resident PODUsage
// ;

STORE Bridge INTO '$(QVDFactPath)/PSY MKT Bridge.qvd' (qvd);

///$tab Key Message
KeyMessage:
LOAD
	KEY_MESSAGE_KEY
	, KEY_MESSAGE_ID
	, KEY_MESSAGE_CATEGORY
    , SubField(KEY_MESSAGE_CATEGORY, '|', 1) as KEY_MESSAGE_DISPLAY_NAME
    , SubField(KEY_MESSAGE_CATEGORY, '|', -1) as KEY_MESSAGE_GROUP_NAME
	, KEY_MESSAGE_DESCRIPTION
	, KEY_MESSAGE_NAME
WHERE Exists(KEY_MESSAGE_KEY, KEY_MESSAGE_KEY)
;
SQL 
SELECT KEY_MESSAGE_KEY
	, KEY_MESSAGE_ID
	, KEY_MESSAGE_CATEGORY
	, KEY_MESSAGE_DESCRIPTION
	, KEY_MESSAGE_NAME
FROM luinc.DIM_KEY_MESSAGE
;
STORE KeyMessage INTO '$(QVDDimPath)/PSY MKT Key Message.qvd' (qvd);

///$tab HCP
HCP:
LOAD CUSTOMER_KEY,  
     LUNDBECK_ID, 
     HCP_NAME,
     HCP_CITY, 
     HCP_STATE, 
     HCP_ZIP, 
     SPECIALTY
WHERE Exists(CUSTOMER_KEY, CUSTOMER_KEY)
;

SQL 
SELECT DISTINCT c.CUSTOMER_KEY
	, c.LUNDBECK_ID
	, c.CUSTOMER_NAME AS HCP_NAME
	, c.CUSTOMER_CITY AS HCP_CITY
	, c.CUSTOMER_STATE_ABBREV AS HCP_STATE
	, c.CUSTOMER_ZIP AS HCP_ZIP
	, c.SPECIALTY
FROM luinc.DIM_CUSTOMER c
;

STORE HCP into '$(QVDDimPath)/PSY MKT HCP.qvd' (qvd);

// SELECT DISTINCT cs.CUSTOMER_KEY
// 	, c.LUNDBECK_ID
// 	, c.CUSTOMER_NAME AS HCP_NAME
// 	, c.CUSTOMER_CITY AS HCP_CITY
// 	, c.CUSTOMER_STATE_ABBREV AS HCP_STATE
// 	, c.CUSTOMER_ZIP AS HCP_ZIP
// 	, c.SPECIALTY
// FROM luinc.FACT_CUSTOMER_SEGMENTATION cs
// JOIN luinc.DIM_PRODUCT_GROUP pg on cs.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
// JOIN luinc.DIM_CUSTOMER c on cs.CUSTOMER_KEY = c.CUSTOMER_KEY
// WHERE cs.CURRENT_IND = 'Y'
//   AND (pg.BRAND = 'ABILIFY MAINTENA'
//     OR pg.BRAND = 'REXULTI'
//     OR pg.BRAND = 'TRINTELLIX')
// ;

///$tab Exit script
Drop Table ControlDate;
Drop Table Calendar;
Drop Table Territory;
Drop Table KeyMessage;
Drop Table PODMessage;
//Drop Table Presentation;
Drop Table HCP;
Drop Table CallActivity;
Drop Table ISACalls;
Drop Table PODUsage;
Drop Table Bridge;