///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$#,##0.00;-$#,##0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';

//SET QVDLocation = 'lib://LuUS_DATA:DataFiles/Development\';
SET QVDLocation = 'lib://LuUS_DATA:DataFiles/Production/';

// LIB CONNECT TO 'LuUS_DATA:MSSQL_LuUS_DW_2.0';



LIB CONNECT TO 'LuUS_DATA:vAZ_MSSQL_LuUS_DW_2.0';

///$tab Control Date
Temp:
SELECT MAX(cl.DATE_FULL) AS MAX_MONTH_END
FROM luinc.DIM_CLNDR cl
WHERE DATE_FULL <= GETDATE()
  AND cl.FLAG_LAST_DAY_IN_MONTH = 'Y';
Let vMaxMonthEnd = Peek('MAX_MONTH_END');
Drop table Temp;

Temp:
SELECT MAX(cl.DATE_WEEK_END) AS MAX_WEEK_END
	, DATEADD(WEEK, -65, MAX(cl.DATE_WEEK_START)) AS MIN_WEEK_START
FROM luinc.DIM_CLNDR cl
WHERE cl.DATE_WEEK_END <= GETDATE()
;
Let vMinWeekStart = Peek('MIN_WEEK_START');
Let vMaxWeekEnd = Peek('MAX_WEEK_END');
Drop table Temp;

//Northera Dates
Temp:
SELECT LAST_FULL_WEEK_END_DATE AS NOR_PAT_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS NOR_PAT_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'THR NOR PATIENT'
;
Let vNorPatWeek = Peek('NOR_PAT_WEEK_END');
Let vNorPatMonth = Peek('NOR_PAT_MONTH_END');
Drop table Temp;

Temp:
SELECT LAST_FULL_WEEK_END_DATE AS NOR_SALES_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS NOR_SALES_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'THR NOR DISPENSE'
;
Let vNorSalesWeek = Peek('NOR_SALES_WEEK_END');
Let vNorSalesMonth = Peek('NOR_SALES_MONTH_END');
Drop table Temp;

//Sabril Dates
Temp:
SELECT LAST_FULL_WEEK_END_DATE AS SAB_PAT_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS SAB_PAT_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'THR SAB PATIENT'
;
Let vSabPatWeek = Peek('SAB_PAT_WEEK_END');
Let vSabPatMonth = Peek('SAB_PAT_MONTH_END');
Drop table Temp;

Temp:
SELECT LAST_FULL_WEEK_END_DATE AS SAB_SALES_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS SAB_SALES_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'THR SAB DISPENSE'
;
Let vSabSalesWeek = Peek('SAB_SALES_WEEK_END');
Let vSabSalesMonth = Peek('SAB_SALES_MONTH_END');
Drop table Temp;

//Xenazine Dates
Temp:
SELECT LAST_FULL_WEEK_END_DATE AS XEN_PAT_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS XEN_PAT_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'THR XEN PATIENT'
;
Let vXenPatWeek = Peek('XEN_PAT_WEEK_END');
Let vXenPatMonth = Peek('XEN_PAT_MONTH_END');
Drop table Temp;

Temp:
SELECT LAST_FULL_WEEK_END_DATE AS XEN_SALES_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS XEN_SALES_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'THR XEN DISPENSE'
;
Let vXenSalesWeek = Peek('XEN_SALES_WEEK_END');
Let vXenSalesMonth = Peek('XEN_SALES_MONTH_END');
Drop table Temp;

//NPA
Temp:
SELECT LAST_FULL_WEEK_END_DATE AS NPA_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS NPA_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'IMS NPA WEEKLY'
;
Let vNPAWeek = Peek('NPA_WEEK_END');
Drop table Temp;

//Curascript Non Retail
Temp:
SELECT LAST_FULL_WEEK_END_DATE AS CS_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS CS_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'CS NRO NON RETAIL'
;
Let vCSWeek = Peek('CS_WEEK_END');
Let vCSMonth = Peek('CS_MONTH_END');
Drop table Temp;

//Kaiser Non Retail
Temp:
SELECT LAST_FULL_WEEK_END_DATE AS KAISER_WEEK_END
	, LAST_FULL_MONTH_END_DATE AS KAISER_MONTH_END
FROM luinc.LOAD_SUMMARY
WHERE COMPONENT_NAME = 'KAISER NRO NON RETAIL'
;
Let vKaiserWeek = Peek('KAISER_WEEK_END');
Let vKaiserMonth = Peek('KAISER_MONTH_END');
Drop table Temp;

Temp:
SELECT MAX(cl.DATE_WEEK_END) as MCK_WEEK_END
FROM DW1_DB.LU_STAGE.LUINC.STG_MCKESSON_NRO_PHARMACY_SALES f
INNER JOIN luinc.DIM_CLNDR cl ON f.DATE_CREATED = cl.DATE_FULL
;
Let vMckessonNonRetailWeek= Peek('MCK_WEEK_END');
Drop Table Temp;

//TheraCom Inventory
Temp:
SELECT MAX(cl.DATE_FULL) AS INV_MONTH_END
FROM DW1_DB.LU_STAGE.LUSEC.STG_THR_NRO_ALL_INV f
JOIN luinc.DIM_CLNDR cl ON f.INV_DATE_END = cl.DATE_FULL
WHERE cl.FLAG_LAST_DAY_IN_MONTH = 'Y'
;
Let vInvMonth = Peek('INV_MONTH_END');
Drop table Temp;

//Cardinal Sales
Temp:
SELECT MAX(cal.date_week_end) as CARDINAL_WEEK_END
FROM DW1_DB.LU_STAGE.LUINC.STG_CARDINAL_NRO_SALES_INVENTORY NSI
INNER JOIN DW1_DB.LU_STAGE.LUINC.STG_CARDINAL_NRO_SALES_PHARMACY NSP ON NSP.PHARMACY_HASHKEY = NSI.PHARMACY_HASHKEY
INNER JOIN MDS.mdm.VW_LKP_PRODUCT p on nsi.PRODUCT_NDC = p.NDC
INNER JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph ON ph.Leaf_Code = p.Code
INNER JOIN  luinc.DIM_CLNDR cal ON cal.DATE_FULL = NSI.SHIPPED_DATE
WHERE NSP.DW_CURRENT_FLAG = 'Y' 
  AND p.PRODUCT_NAME IN ('NORTHERA', 'SABRIL', 'XENAZINE')
  AND nsi.SHIPPED_DATE <= '$(vMaxWeekEnd)'  
;
Let vCardinalWeek = Peek('CARDINAL_WEEK_END');
Drop table Temp;

//ValueTrak
Temp:
SELECT 
	 MAX(cl.DATE_WEEK_END) AS VALUETRACK_WEEK_END
FROM DW1_DB.LU_STAGE.LUINC.STG_VALUETRAK_NRO_SALES_INVENTORY f
JOIN LU_DW.luinc.DIM_CLNDR cl on f.INV_DATE = cl.DATE_FULL
;
Let vValueTrackWeek = Peek('VALUETRACK_WEEK_END');
Drop table Temp;

ControlDate:
LOAD '$(vNorPatWeek)' AS NOR_PAT_WEEK_END
	, '$(vNorPatMonth)' AS NOR_PAT_MONTH_END
	, '$(vNorSalesWeek)' AS NOR_SALES_WEEK_END
	, '$(vNorSalesMonth)' AS NOR_SALES_MONTH_END
	, '$(vSabPatWeek)' AS SAB_PAT_WEEK_END
	, '$(vSabPatMonth)' AS SAB_PAT_MONTH_END
	, '$(vSabSalesWeek)' AS SAB_SALES_WEEK_END
	, '$(vSabSalesMonth)' AS SAB_SALES_MONTH_END
	, '$(vXenPatWeek)' AS XEN_PAT_WEEK_END
	, '$(vXenPatMonth)' AS XEN_PAT_MONTH_END
	, '$(vXenSalesWeek)' AS XEN_SALES_WEEK_END
	, '$(vXenSalesMonth)' AS XEN_SALES_MONTH_END
	, '$(vNPAWeek)' AS NPA_WEEK_END
	, '$(vCSWeek)' AS CS_WEEK_END
	, '$(vCSMonth)' AS CS_MONTH_END
	, '$(vKaiserWeek)' AS KAISER_WEEK_END
	, '$(vKaiserMonth)' AS KAISER_MONTH_END
	, '$(vInvMonth)' AS INV_MONTH_END
	, '$(vMinWeekStart)' AS MIN_WEEK_START
	, '$(vMaxWeekEnd)' AS MAX_WEEK_END
	, '$(vMaxMonthEnd)' AS MAX_MONTH_END
    , '$(vCardinalWeek)' as CARDINAL_WEEK_END
    , '$(vMckessonNonRetailWeek)' as MCKESSON_WEEK_END
    , '$(vValueTrackWeek)' as VALUETRAK_WEEK_END
    
  
    , Now() as ExtractDateTime   
	AUTOGENERATE 1;

STORE ControlDate INTO '$(QVDLocation)Internal/SP_CONTROL_DATES.qvd' (qvd);

///$tab Calendar
Calendar:
Load CALENDAR_DATE
	, CALENDAR_YEAR
    , MONTH_OF_YEAR
    , YEAR_MONTH
    , MONTH_YEAR
    , DATE_WEEK_END
;
SQL
SELECT DISTINCT 
	DATE_FULL AS CALENDAR_DATE
    , CALENDAR_YEAR
    , MONTH_OF_YEAR
    , CALENDAR_YEAR_MONTH AS YEAR_MONTH
    , MONTH_ABBREV_YEAR AS MONTH_YEAR
    , DATE_WEEK_END
FROM luinc.DIM_CLNDR
WHERE DATE_FULL BETWEEN DATEADD(DAY, 1, EOMONTH(GETDATE(), -26)) AND EOMONTH(GETDATE())
ORDER BY 1
;

STORE Calendar INTO '$(QVDLocation)Dimensions/SP_CALENDAR.qvd' (qvd);

///$tab Product
Product:
LOAD BRAND_CODE
	, BRAND
    , PRODUCT_GROUP_CODE
    , PRODUCT_GROUP
    , PRODUCT_NDC
    , PRODUCT_STRENGTH
	, LU_PRODUCT_FLAG
    , LU_PRODUCT
    , LASH_PRODUCT_FLAG
	, PRODUCT_DESC
	, UNIT_OF_MEASURE
	, FORM_DESC
	, STRENGTH_UNITS
	, PACK_SIZE_UNIT
	, PACK_SIZE_VOLUME
;
SQL 
SELECT pg.BRAND_CODE
	, pg.BRAND
	, pg.PRODUCT_GROUP_CODE
	, pg.PRODUCT_GROUP
	, p.NDC AS PRODUCT_NDC
    , pg.PRODUCT_STRENGTH
	, pg.LU_PRODUCT_FLAG
    , CASE
    	WHEN pg.BRAND IN ('ONFI', 'BANZEL') THEN 'ONFI'
	    WHEN pg.BRAND IN ('NORTHERA') THEN 'NORTHERA'
		WHEN pg.BRAND IN ('SABRIL', 'VIGABATRIN') THEN 'SABRIL'
        WHEN pg.BRAND IN ('AUSTEDO', 'INGREZZA', 'TETRABENAZINE', 'XENAZINE') THEN 'XENAZINE'
		ELSE 'OTHER'
		END AS LU_PRODUCT
    , IIF(pg.BRAND IN ('NORTHERA', 'SABRIL', 'XENAZINE'), 'Y', 'N') AS LASH_PRODUCT_FLAG
	, p.PRODUCT_DESC
	, p.UNIT_OF_MEASURE
	, p.FORM_DESC
	, p.STRENGTH_UNITS
	, p.PACK_SIZE_UNIT
	, p.PACK_SIZE_VOLUME
FROM luinc.DIM_PRODUCT_GROUP pg
JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph on pg.PRODUCT_GROUP_CODE = ph.L4_Code
LEFT JOIN MDS.mdm.VW_LKP_PRODUCT p on ph.Leaf_Code = p.Code
WHERE pg.BRAND IN ('ONFI', 'BANZEL', 'NORTHERA', 'SABRIL', 'VIGABATRIN', 'AUSTEDO', 'INGREZZA', 'TETRABENAZINE', 'XENAZINE')
ORDER BY pg.LU_PRODUCT_FLAG DESC, pg.PRODUCT_GROUP
;

Store Product into '$(QVDLocation)Dimensions/SP_PRODUCT.qvd' (qvd);
///$tab Monthly Inventory
Facts:
// Monthly Invertory Snapshot
LOAD 'Inventory' AS DATA_TYPE
    , SPECIALTY_PHARMACY
    , PRODUCT_GROUP_CODE
	, CALENDAR_DATE
    , ENDING_INVENTORY
    ;
SQL 
SELECT EOMONTH(CONVERT(DATE, t2.CALENDAR_YEAR_MONTH+'01')) AS CALENDAR_DATE
	,t2.SPECIALTY_PHARMACY
	,t2.PRODUCT_GROUP_CODE
	,t2.ENDING_INVENTORY
FROM (
	SELECT t.CALENDAR_YEAR_MONTH
		,t.SPECIALTY_PHARMACY
		,t.PRODUCT_GROUP_CODE
		,t.ENDING_INVENTORY
		,DENSE_RANK() OVER (PARTITION BY t.SPECIALTY_PHARMACY, t.PRODUCT_GROUP_CODE,t.CALENDAR_YEAR_MONTH ORDER BY t.INVENTORY_DATE DESC) WEEK_IN_MONTH
	FROM (
		SELECT cl.DATE_WEEK_END AS INVENTORY_DATE
            ,MIN(cl.CALENDAR_YEAR_MONTH) AS CALENDAR_YEAR_MONTH
			,IIF(f.THR_SP_NAME IN ('CAREMARK','CAREMARK2C','PHARMACARE'), 'PHARMACARE/CAREMARK', f.THR_SP_NAME) AS SPECIALTY_PHARMACY
			,ph.L4_Code AS PRODUCT_GROUP_CODE
			,SUM(f.QTY_END) AS ENDING_INVENTORY
		FROM DW1_DB.LU_STAGE.LUSEC.STG_THR_NRO_ALL_INV f
        JOIN luinc.DIM_CLNDR cl ON f.INV_DATE_END = cl.DATE_FULL
		JOIN MDS.mdm.VW_LKP_PRODUCT p ON f.PRODUCT_NDC = p.NDC
		JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph ON ph.Leaf_Code = p.Code
		WHERE cl.DATE_FULL <= '$(vMaxMonthEnd)'
		GROUP BY cl.DATE_WEEK_END
			,ph.L4_Code
			,IIF(f.THR_SP_NAME IN ('CAREMARK','CAREMARK2C','PHARMACARE'), 'PHARMACARE/CAREMARK', f.THR_SP_NAME)
		) t
	) t2
WHERE t2.WEEK_IN_MONTH = 1
;

///$tab Weekly Inventory
Concatenate(Facts)
LOAD 'Weekly Inventory' AS DATA_TYPE
    , SPECIALTY_PHARMACY
    , PRODUCT_GROUP_CODE
	, CALENDAR_DATE
    , ENDING_INVENTORY
    ;
SQL 
SELECT 
	cl.DATE_WEEK_END AS CALENDAR_DATE
			, IIF(f.THR_SP_NAME IN ('CAREMARK','CAREMARK2C','PHARMACARE'), 'PHARMACARE/CAREMARK', f.THR_SP_NAME) AS SPECIALTY_PHARMACY
			,ph.L4_Code AS PRODUCT_GROUP_CODE
			,sum(f.QTY_END) as ENDING_INVENTORY
		FROM DW1_DB.LU_STAGE.LUSEC.STG_THR_NRO_ALL_INV f
        JOIN luinc.DIM_CLNDR cl ON f.INV_DATE_END = cl.DATE_FULL
		JOIN MDS.mdm.VW_LKP_PRODUCT p ON f.PRODUCT_NDC = p.NDC
		JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph ON ph.Leaf_Code = p.Code
		WHERE cl.DATE_FULL <= GETDATE()
		GROUP BY 
        	cl.DATE_WEEK_END
			, ph.L4_Code
			, IIF(f.THR_SP_NAME IN ('CAREMARK','CAREMARK2C','PHARMACARE'), 'PHARMACARE/CAREMARK', f.THR_SP_NAME)
            
            ;
///$tab Demand
Concatenate(Facts)
// Monthly Demand Snapshot
LOAD 'Inventory' AS DATA_TYPE
	, CALENDAR_DATE
	, SPECIALTY_PHARMACY
	, PRODUCT_GROUP_CODE 
    , QTY_DISPENSED
;
SQL 
SELECT pg.PRODUCT_GROUP_CODE
	, cl.DATE_FULL AS CALENDAR_DATE
    , IIF(f.SPECIALTY_PHARMACY IN ('CAREMARK','CAREMARK2C','PHARMACARE'), 'PHARMACARE/CAREMARK', f.SPECIALTY_PHARMACY) AS SPECIALTY_PHARMACY
    , SUM(QTY_DISPENSED) AS QTY_DISPENSED
FROM luinc.FACT_PATIENT_SALES f
JOIN luinc.DIM_PRODUCT_GROUP pg on f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
JOIN luinc.DIM_CLNDR cl on f.SHIPPED_DATE_KEY = cl.DATE_KEY
WHERE RX_TYPE = 'STANDARD'
  AND pg.BRAND IN ('NORTHERA', 'SABRIL', 'XENAZINE')
  AND cl.DATE_FULL BETWEEN '$(vMinWeekStart)' AND '$(vMaxWeekEnd)' 
GROUP BY pg.PRODUCT_GROUP_CODE
	, cl.DATE_FULL
    , IIF(f.SPECIALTY_PHARMACY IN ('CAREMARK','CAREMARK2C','PHARMACARE'), 'PHARMACARE/CAREMARK', f.SPECIALTY_PHARMACY)
;

///$tab National Sales
Concatenate(Facts)
//National Sales:
Load 'NPA' AS DATA_TYPE
	, PRODUCT_GROUP_CODE
    , CALENDAR_DATE
	, TRX
	, NORMALIZED_TRX
	, T_QTY
;
SQL 
select pg.PRODUCT_GROUP_CODE
	, cl.DATE_FULL AS CALENDAR_DATE
	, SUM(f.TRX) AS TRX
	, SUM(f.NORMALIZED_TRX) AS NORMALIZED_TRX
	, SUM(f.T_QTY) AS T_QTY
FROM luinc.FACT_NATIONAL_SALES_WEEKLY f
JOIN luinc.DIM_PRODUCT_GROUP pg on f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
JOIN luinc.DIM_CLNDR cl on f.DATE_KEY = cl.DATE_KEY
WHERE cl.DATE_FULL BETWEEN DATEADD(DAY, 1, EOMONTH('$(vMaxWeekEnd)', -26)) AND '$(vMaxWeekEnd)'
  AND pg.BRAND IN ('ONFI', 'BANZEL', 'NORTHERA', 'SABRIL', 'VIGABATRIN', 'XENAZINE', 'AUSTEDO', 'INGREZZA', 'TETRABENAZINE')
GROUP BY pg.PRODUCT_GROUP_CODE, cl.DATE_FULL
;


///$tab Patient Sales
Concatenate(Facts)
//NROSales:
Load 'NRO Sales' AS DATA_TYPE
	, PRODUCT_GROUP_CODE
	, SPECIALTY_PHARMACY
    , CALENDAR_DATE
	, RX_TYPE
//	, DIAGNOSIS_TYPE
	, ORDER_TRANSACTION_NUMBER
	, TRX
	, QTY_DISPENSED
	, MG_DISPENSED
	, DAYS_SUPPLIED
;
SQL 
SELECT pg.PRODUCT_GROUP_CODE
	, f.SPECIALTY_PHARMACY
    , cl.DATE_FULL AS CALENDAR_DATE
	, f.RX_TYPE
-- 	, CASE 
-- 		WHEN pg.BRAND = 'XENAZINE' AND f.ICD9_CODE = '333.4' THEN 'HD'
-- 		WHEN pg.BRAND = 'XENAZINE' AND ISNULL(f.ICD9_CODE, '') <> '333.4' THEN 'NON-HD'
-- 		WHEN pg.BRAND = 'SABRIL' AND DATEDIFF(YY, p.PATIENT_DATE_OF_BIRTH, GETDATE()) > 4 THEN 'RCPS'
-- 		WHEN pg.BRAND = 'SABRIL' AND DATEDIFF(YY, p.PATIENT_DATE_OF_BIRTH, GETDATE()) <= 4 THEN 'IS'
-- 		WHEN pg.BRAND = 'NORTHERA' AND f.ICD10_CODE IS NULL AND f.ICD9_CODE IN ('332', '332.0') THEN 'PARKINSONS' 
-- 		WHEN pg.BRAND = 'NORTHERA' AND f.ICD10_CODE IS NULL AND f.ICD9_CODE IN ('333', '333.0') THEN 'MSA' 
-- 		WHEN pg.BRAND = 'NORTHERA' AND f.ICD10_CODE IS NULL AND f.ICD9_CODE IN ('337', '337.0') THEN 'AUTO FAILURE' 
-- 		ELSE 'OTHER' 
-- 		END AS DIAGNOSIS_TYPE
	, f.ORDER_TRANSACTION_NUMBER
	, SUM(f.TRX) AS TRX
	, SUM(f.QTY_DISPENSED) AS QTY_DISPENSED
	, SUM(f.MG_DISPENSED) AS MG_DISPENSED
	, SUM(f.DAYS_SUPPLIED) AS DAYS_SUPPLIED
FROM luinc.FACT_PATIENT_SALES AS f
INNER JOIN luinc.DIM_PRODUCT_GROUP AS pg ON f.PRODUCT_GROUP_KEY = pg.PRODUCT_GROUP_KEY
INNER JOIN luinc.DIM_CLNDR cl on f.SHIPPED_DATE_KEY = cl.DATE_KEY
LEFT OUTER JOIN luinc.DIM_PATIENT AS p ON f.PATIENT_KEY = p.PATIENT_KEY
WHERE cl.DATE_FULL BETWEEN '$(vMinWeekStart)' AND '$(vMaxWeekEnd)' 
  AND f.RX_TYPE='STANDARD'
  AND pg.BRAND IN ('NORTHERA', 'SABRIL', 'XENAZINE')
GROUP BY pg.PRODUCT_GROUP_CODE
	, f.SPECIALTY_PHARMACY
    , cl.DATE_FULL
	, f.RX_TYPE
--	, CASE 
--		WHEN pg.BRAND = 'XENAZINE' AND f.ICD9_CODE = '333.4' THEN 'HD'
--		WHEN pg.BRAND = 'XENAZINE' AND ISNULL(f.ICD9_CODE, '') <> '333.4' THEN 'NON-HD'
--		WHEN pg.BRAND = 'SABRIL' AND DATEDIFF(YY, p.PATIENT_DATE_OF_BIRTH, GETDATE()) > 4 THEN 'RCPS'
--		WHEN pg.BRAND = 'SABRIL' AND DATEDIFF(YY, p.PATIENT_DATE_OF_BIRTH, GETDATE()) <= 4 THEN 'IS'
--		WHEN pg.BRAND = 'NORTHERA' AND f.ICD10_CODE IS NULL AND f.ICD9_CODE IN ('332', '332.0') THEN 'PARKINSONS' 
--		WHEN pg.BRAND = 'NORTHERA' AND f.ICD10_CODE IS NULL AND f.ICD9_CODE IN ('333', '333.0') THEN 'MSA' 
--		WHEN pg.BRAND = 'NORTHERA' AND f.ICD10_CODE IS NULL AND f.ICD9_CODE IN ('337', '337.0') THEN 'AUTO FAILURE' 
--		ELSE 'OTHER' END
    , f.ORDER_TRANSACTION_NUMBER
HAVING SUM(f.TRX) > 0
;

///$tab Non Retail Sales
Concatenate(Facts)
//Pharmacy Sales:
Load 'NonRetail Sales' AS DATA_TYPE
    , PRODUCT_GROUP_CODE
    , SPECIALTY_PHARMACY
    , CUSTOMER_NAME
    , CALENDAR_DATE
	, QUANTITY_SHIPPED
;
SQL 
//-- Curascript
SELECT cl.DATE_FULL AS CALENDAR_DATE
	, ph.L4_Code AS PRODUCT_GROUP_CODE
	, 'CURASCRIPT' as SPECIALTY_PHARMACY
    , mph.SHIP_TO_NAME AS CUSTOMER_NAME
    , SUM(IIF(ISNUMERIC(f.QUANTITY_SHIPPED)=1, CONVERT(decimal, f.QUANTITY_SHIPPED), 1) * 
	      IIF(ISNUMERIC(p.PACK_SIZE_VOLUME)=1, CONVERT(decimal, p.PACK_SIZE_VOLUME), 1)) as QUANTITY_SHIPPED
FROM DW1_DB.LU_STAGE.LUINC.STG_CURASCRIPT_CSD_OVATION_NRO_SALES f
JOIN luinc.DIM_CLNDR cl ON f.SHIP_DATE = cl.DATE_FULL
JOIN MDS.mdm.VW_LKP_PRODUCT p ON f.NDC_NUMBER = p.NDC
JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph ON ph.Leaf_Code = p.Code
JOIN DW1_DB.LU_STAGE.LUINC.STG_CURASCRIPT_CSD_OVATION_NRO_PHARMACY mph on f.[CUSTOMER#] = mph.[CUSTOMER#] AND mph.DW_CURRENT_FLAG = 'Y'
WHERE cl.DATE_FULL BETWEEN '$(vMinWeekStart)' AND '$(vMaxWeekEnd)' 
GROUP BY cl.DATE_FULL, ph.L4_Code, mph.SHIP_TO_NAME
UNION ALL
//-- Kaiser
SELECT f.TRANSACTION_DATE AS CALENDAR_DATE
	, ph.L4_Code AS PRODUCT_GROUP_CODE
	, 'KAISER' as SPECIALTY_PHARMACY
    , kp.SHIP_TO_NAME AS CUSTOMER_NAME
	, SUM(iif(isnumeric(f.SHIPPED_QTY)=1, CONVERT(decimal, f.SHIPPED_QTY), 1) *
	   IIF(ISNUMERIC(p.PACK_SIZE_VOLUME)=1, CONVERT(decimal, p.PACK_SIZE_VOLUME), 1)) as QUANTITY_SHIPPED
FROM DW1_DB.LU_STAGE.LUINC.STG_KAISER_NRO_PHARMACY_SALES f
JOIN MDS.mdm.VW_LKP_PRODUCT p ON SUBSTRING(ITEM_NUMBER, 1,5) + '0' + SUBSTRING(ITEM_NUMBER, 6,5) = p.NDC
JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph ON ph.Leaf_Code = p.Code
JOIN DW1_DB.LU_STAGE.LUINC.STG_KAISER_NRO_PHARMACY kp on f.PHY_HASHBYTES = kp.[HASHBYTES] AND kp.DW_CURRENT_FLAG = 'Y'
WHERE f.TRANSACTION_DATE BETWEEN '$(vMinWeekStart)' AND '$(vMaxWeekEnd)' 
GROUP BY f.TRANSACTION_DATE, ph.L4_Code, kp.SHIP_TO_NAME
UNION ALL
//-- McKesson
SELECT cl.DATE_FULL AS CALENDAR_DATE
	, ph.L4_Code AS PRODUCT_GROUP_CODE
	, 'MCKESSON' as SPECIALTY_PHARMACY
	, mph.PARENT_CUSTOMER_NAME AS CUSTOMER_NAME
    , SUM(iif(isnumeric(f.UNITS)=1, CONVERT(decimal,f.UNITS), 1) * 
	    IIF(ISNUMERIC(p.PACK_SIZE_VOLUME)=1, CONVERT(decimal, p.PACK_SIZE_VOLUME), 1)) as QUANTITY_SHIPPED  --Bottle Size is 90 tabs/bottle
FROM DW1_DB.LU_STAGE.LUINC.STG_MCKESSON_NRO_PHARMACY_SALES f
JOIN luinc.DIM_CLNDR cl ON f.DATE_CREATED = cl.DATE_FULL
JOIN MDS.mdm.VW_LKP_PRODUCT p ON f.PRODUCT_NDC_NUMBER = p.NDC
JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph ON ph.Leaf_Code = p.Code
JOIN DW1_DB.LU_STAGE.LUINC.STG_MCKESSON_NRO_PHARMACY mph on f.SHIP_TO_HASHKEY = mph.SHIP_TO_HASHKEY AND mph.DW_CURRENT_FLAG = 'Y'
WHERE cl.DATE_FULL BETWEEN '$(vMinWeekStart)' AND '$(vMaxWeekEnd)' 
GROUP BY cl.DATE_FULL, ph.L4_Code, mph.PARENT_CUSTOMER_NAME
;

///$tab Cardinal Sales
Concatenate(Facts)
//CardinalSales:
Load 'Cardinal' AS DATA_TYPE
	, PRODUCT_GROUP_CODE
	, BILL_TO_NAME AS SPECIALTY_PHARMACY
	, SHIPPED_DATE
	, CALENDAR_DATE
	, ORDER_NUMBER
	, LINE_NUMBER
	, ORDER_DATE
	, PRODUCT_DESCRIPTION
	, SHIPPED_QTY
    , SHIPPED_UNITS
	, BILL_TO_NAME
    , CUSTOMER_GROUP
	, SHIP_TO_NAME
;
SQL 
SELECT ph.L4_Code AS PRODUCT_GROUP_CODE
	, nsi.SHIPPED_DATE
    , nsi.SHIPPED_DATE AS CALENDAR_DATE
	, nsi.ORDER_NUMBER
	, nsi.LINE_NUMBER
	, nsi.ORDER_DATE
	, nsi.PRODUCT_DESCRIPTION
	, nsi.SHIPPED_QTY
   	, nsi.SHIPPED_QTY * CONVERT(numeric, p.PACK_SIZE_VOLUME) AS SHIPPED_UNITS
	, CASE 
    	WHEN nsp.BILL_TO_NAME LIKE '%ACCREDO%' THEN 'ACCREDO'
    	WHEN nsp.BILL_TO_NAME =    'EXPRESS-SCRIPTS' THEN 'ACCREDO'
		WHEN nsp.BILL_TO_NAME LIKE '%ADVANCED CARE SCRIPTS%' THEN 'ACS'
		WHEN nsp.BILL_TO_NAME LIKE '%CAREMARK%' THEN 'PHARMACARE/CAREMARK'
		WHEN nsp.BILL_TO_NAME LIKE '%PHARMACARE%' THEN 'PHARMACARE/CAREMARK'
		WHEN nsp.BILL_TO_NAME LIKE '%WALGREENS%' THEN 'WALGREENS'
		WHEN nsp.BILL_TO_NAME LIKE '%VANDERBILT%' THEN 'VANDERBILT'
		ELSE 'OTHER'
        END BILL_TO_NAME
    , nsp.CUSTOMER_GROUP
    , nsp.SHIP_TO_NAME
FROM DW1_DB.LU_STAGE.LUINC.STG_CARDINAL_NRO_SALES_INVENTORY NSI
INNER JOIN DW1_DB.LU_STAGE.LUINC.STG_CARDINAL_NRO_SALES_PHARMACY NSP ON NSP.PHARMACY_HASHKEY = NSI.PHARMACY_HASHKEY
INNER JOIN MDS.mdm.VW_LKP_PRODUCT p on nsi.PRODUCT_NDC = p.NDC
INNER JOIN MDS.mdm.VW_LKP_PRODUCT_HIERARCHY ph ON ph.Leaf_Code = p.Code
WHERE NSP.DW_CURRENT_FLAG = 'Y' 
  AND p.PRODUCT_NAME IN ('NORTHERA', 'SABRIL', 'XENAZINE')
  AND nsi.SHIPPED_DATE BETWEEN '$(vMinWeekStart)' AND '$(vMaxWeekEnd)' 
  --AND nsp.CUSTOMER_GROUP <> 'DIST'
ORDER BY ph.L4_Code, nsi.SHIPPED_DATE, nsp.BILL_TO_NAME
;

///$tab ValueTrak
ValueTrak:
Load  DC_LOCATION
	, WHOLESALER
    , Pick(WildMatch(Replace(PRODUCT_DESC, '-', ''), '*67386*31321*', '*67386*31001*', '*67386*31401*', '*67386*31101*', '*67386*31501*', '*67386*31201*'),
	       '67386031321', '67386031001', '67386031401', '67386031101', '67386031501', '67386031201') AS PRODUCT_NDC
    , PRODUCT_DESC
    , CALENDAR_DATE
    , SALES_UNITS
    , ENDING_INVENTORY_UNITS
;
SQL
SELECT DISTINCT f.DC_LOCATION
	, CASE
		WHEN f.DC_LOCATION like 'ABC %' THEN 'AMERISOURCE'
		WHEN f.DC_LOCATION like 'AMERISOURCE%' THEN 'AMERISOURCE'
		WHEN f.DC_LOCATION like 'ASD %' THEN 'AMERISOURCE'
		WHEN f.DC_LOCATION = 'ATLANTA' THEN 'AMERISOURCE'
		WHEN f.DC_LOCATION = 'NY' THEN 'AMERISOURCE'
		WHEN f.DC_LOCATION like 'CARDINAL%' THEN 'CARDINAL'
		WHEN f.DC_LOCATION = 'DC' THEN 'MCKESSON'
		WHEN f.DC_LOCATION like 'MCKESSON%' THEN 'MCKESSON'
		WHEN f.DC_LOCATION = 'MEMPHIS STRATEGIC CENTER (MSC)' THEN 'MCKESSON'
		WHEN f.DC_LOCATION = 'OLIVE BRANCH, MS' THEN 'MCKESSON'
		ELSE 'UNIDENTIFIED'
		END AS WHOLESALER
	, f.PRODUCT_DESC
	, cl.DATE_WEEK_END AS CALENDAR_DATE
	, SUM(IIF(cl.DAY_OF_WEEK_LONG_NAME = 'FRIDAY', f.END_INV_UNITS, 0)) OVER (PARTITION BY f.DC_LOCATION, f.PRODUCT_DESC, cl.DATE_WEEK_END) AS ENDING_INVENTORY_UNITS
	, SUM(f.SALES_UNITS) OVER (PARTITION BY f.DC_LOCATION, f.PRODUCT_DESC, cl.DATE_WEEK_END) as SALES_UNITS
FROM DW1_DB.LU_STAGE.LUINC.STG_VALUETRAK_NRO_SALES_INVENTORY f
JOIN LU_DW.luinc.DIM_CLNDR cl on f.INV_DATE = cl.DATE_FULL
ORDER BY f.DC_LOCATION, f.PRODUCT_DESC, cl.DATE_WEEK_END
;

BrandMap:
Mapping Load PRODUCT_NDC, PRODUCT_GROUP_CODE 
Resident Product
;

Concatenate(Facts)
Load 'ValueTrak' AS DATA_TYPE
    , ApplyMap('BrandMap', PRODUCT_NDC) AS PRODUCT_GROUP_CODE
    , CALENDAR_DATE
    , DC_LOCATION
    , WHOLESALER
    , SUM(SALES_UNITS) AS SALES_UNITS
    , SUM(ENDING_INVENTORY_UNITS) AS ENDING_INVENTORY_UNITS
Resident ValueTrak
Group By ApplyMap('BrandMap', PRODUCT_NDC)
    , CALENDAR_DATE
    , DC_LOCATION
    , WHOLESALER
;

Drop Table ValueTrak;

Store Facts into '$(QVDLocation)Facts/SP_FACTS.qvd' (qvd);
///$tab Exit
DROP Tables
Calendar, 
Product,
Facts,
ControlDate
;





///$tab Change Log
/*

Name 				Date			Change
Megan OBrien		5/1/2024		Added Weekly Inventory script



*/