///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET NumFormat='';
SET MoneyFormat='#.##0,00 kr.;-#.##0,00 kr.';
SET TimeFormat='hh.mm.ss';
SET DateFormat='MM/DD/YYYY';
SET TimestampFormat='MM/DD/YYYY hh.mm.ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=0;
SET ReferenceDay=4;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December'; 
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';
LET vToday=DATE(TODAY(),'YYYYMMDD');
$(Must_Include='lib://LuUS_DATA:LuUS_SharePoint/Shared Documents/Qlik Sense Data Files/Include/Qlik Cloud/FolderConnections.txt');


//LIB CONNECT TO 'LuUS DW2.0';
// LIB CONNECT TO 'LuUS_DATA:MSSQL_LuUS_DW_2.0';

LIB CONNECT TO 'LuUS_DATA:SNOWFLAKE_LuUS_BI_Reader';

$(Must_Include='lib://LuUS_DATA:LuUS_SharePoint/Shared Documents/Qlik Sense Data Files/Include/Qlik Cloud/FolderConnections.txt'); 

vStorePathFact = 'lib://LuUS_DATA:DataFiles/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/HQ';
vStorePathDim = 'lib://LuUS_DATA:DataFiles/Production/QlikSense BI Evolution/QVDs/Extract/Dimensions/Vyepti/HQ';




///////////////////////////////////////////////////////////////////////////////////////////////////
LET vSpace = if(upper(GetSysAttr('spaceType'))='SHARED' or GetSysAttr('spaceType')='','_DEV');

Trace '$(vSpace)';

LET vSF = '_SF';

Trace '$(vSF)';
///////////////////////////////////////////////////////////////////////////////////////////////

vToday = num(Today());

let vTodayDate = Today();
let vTodayDate_1 = DATE(DATE#(Today(), 'MM/DD/YYYY'), 'YYYYMMDD');

vCompMonthTemp = DATE(MONTHEND(AddMonths(DATE(DATE#('$(vTodayDate_1)', 'YYYYMMDD'), 'MM/DD/YYYY'), -1)), 'YYYYMMDD');
let vMaxCompletedMonth = '$(vCompMonthTemp)';

let vMaxCompletedMonth_1 = '$(vCompMonthTemp)';

trace '$(vMaxCompletedMonth_1)';


///$tab PARAGON PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'PARAGON')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'PARAGON')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;


LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'PARAGON')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)
LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'PARAGON' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

NoConcatenate
FACT:
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;
// EXIT Script;
// NOCONCATENATE
// DIM_PATIENT:
// LOAD *
// WHERE EXISTS(PATIENT_KEY);
// SELECT * FROM LUINC.DIM_PATIENT;

///$tab OPTIONCARE PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'OPTIONCARE')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'OPTIONCARE')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;


LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'OPTIONCARE')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'OPTION CARE' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;
///$tab IVXHEALTH PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'IVXHEALTH')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'IVXHEALTH')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;



LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'IVXHEALTH')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'IVX HEALTH' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;
///$tab VITALCARE PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'VITALCARE')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'VITALCARE')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;



LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'VITALCARE')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;
LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'VITAL CARE' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;


///$tab VIVO PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'VIVOINFUSION')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'VIVOINFUSION')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;


LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'VIVOINFUSION')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'VIVO INFUSION' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;
///$tab SOLEO HEALTH PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'SOLEOHEALTH')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'SOLEOHEALTH')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;


LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'SOLEOHEALTH')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'SOLEO HEALTH' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;
///$tab TWELVESTONE PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'TWELVESTONE')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'TWELVESTONE')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;


LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'TWELVESTONE')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'TWELVESTONE' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;
///$tab INFUSION FOR HEALTH
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'INFUSIONFORHEALTH')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'INFUSIONFORHEALTH')
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;


LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '')= 'INFUSIONFORHEALTH')
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'INFUSION FOR HEALTH' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;
///$tab SIP PERSISTENCY
NoConcatenate
TEMP_FACT:
LOAD *,
((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) AS GRACE,
IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) AS FLAG_1,
IF(IF(((LAG_DAYS_SUPPLIED-LAG_DIFFERENCE)+45) <0 , 0 , 1) =0, 'YES','NO') AS BREAK_IN_THERAPHY
;

SELECT 
A.PATIENT_KEY,
A.CALENDAR_YEAR_MONTH,
// A.SPECIALTY_PHARMACY,
A.FILL_NUMBER AS PREV_FILL_NUMBER,
B.FILL_NUMBER AS NEXT_FILL_NUMBER,
A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
A.DISPENSE_DATE_KEY AS FILL_DATE,
CAST(A.DAYS_SUPPLIED AS INT) AS DAYS_SUPPLY,
CAST(B.DAYS_SUPPLIED AS INTEGER) AS LAG_DAYS_SUPPLIED,
B.DISPENSE_DATE_KEY AS FILL_DATE_LAG,
IFF(B.FILL_NUMBER IS NULL, NULL, 
DATEDIFF(DAY, DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'), DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS LAG_DIFFERENCE

FROM (
SELECT PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON CAST(PG.PRODUCT_GROUP_CODE AS INTEGER)  = CAST(PS.PRODUCT_GROUP_CODE AS INTEGER)
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') IN ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE', 'TWELVESTONE', 'INFUSIONFORHEALTH', 'VIVOINFUSION' ,'SOLEOHEALTH'))
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) A
LEFT JOIN 
(
SELECT  
PS.PATIENT_ID AS PATIENT_KEY, 
PS.REFERRAL_DATE_KEY,
PS.DISPENSE_DATE_KEY,
// PS.SPECIALTY_PHARMACY,
CAL.CALENDAR_YEAR_MONTH,
'90' AS DAYS_SUPPLIED,
// PS.DAYS_SUPPLIED,
FILL_NUMBER
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') IN ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE', 'TWELVESTONE', 'INFUSIONFORHEALTH', 'VIVOINFUSION' ,'SOLEOHEALTH'))
AND PS.PATIENT_ID NOT IN ('UNK')
AND PG.BRAND = 'VYEPTI'
) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER  = B.FILL_NUMBER+1
ORDER BY A.PATIENT_KEY , A.FILL_NUMBER;



LEFT JOIN (TEMP_FACT)
SELECT PS.PATIENT_ID AS PATIENT_KEY , 
MIN(PS.DISPENSE_DATE_KEY) AS FIRST_BRAND_DATE 
FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE PS
INNER JOIN LUNDBECK_DW.COMMON.CALENDAR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = PS.PRODUCT_GROUP_CODE
WHERE PS.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') IN ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE', 'TWELVESTONE', 'INFUSIONFORHEALTH', 'VIVOINFUSION' ,'SOLEOHEALTH'))
AND PG.BRAND = 'VYEPTI'
GROUP BY PS.PATIENT_ID;

LEFT JOIN (TEMP_FACT)

LOAD PATIENT_KEY, MIN(FILL_DATE) AS LAST_DATE
RESIDENT TEMP_FACT WHERE BREAK_IN_THERAPHY='YES'
GROUP BY PATIENT_KEY;

NoConcatenate
TEMP_FACT_2:
LOAD *,
IF(FILL_DATE>=LAST_DATE , LAST_DATE,NULL()) AS FINAL_LAST_DATE,
IF(FILL_DATE>=LAST_DATE , 'YES','NO') AS FINAL_BREAK_IN_THERAPHY
RESIDENT TEMP_FACT ;

DROP TABLE TEMP_FACT;

NoConcatenate
FINAL_FACT:
LOAD *,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,1) AS FLAG_2,
IF(FILL_DATE>=FINAL_LAST_DATE AND FINAL_LAST_DATE <> NULL(),0,NUM(DATE#(FILL_DATE,'YYYYMMDD'))-NUM(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'))+DAYS_SUPPLY) AS NEW_DOT
RESIDENT TEMP_FACT_2;

DROP TABLE TEMP_FACT_2;

NOCONCATENATE
FINAL_FACT_1:
LOAD PATIENT_KEY,
FIRST_BRAND_DATE,
'SIP' AS SPECIALTY_PHARMACY,
DATE(DATE#(FIRST_BRAND_DATE,'YYYYMMDD'),'YYYYMMDD') AS DATE_KEY,
ROUND(MAX(NEW_DOT/30.0,0)) AS MONTH
RESIDENT FINAL_FACT
GROUP BY PATIENT_KEY, FIRST_BRAND_DATE;

DROP TABLE FINAL_FACT;

Concatenate(FACT)
LOAD 'PERSISTENT' AS GRAIN_FLAG, *
RESIDENT FINAL_FACT_1;

DROP TABLE FINAL_FACT_1;



Store FACT into [$(vStorePathFact)/VYEPTI_FACT_ASOC_PERSISTENCY_HQ$(vSpace)$(vSF).qvd](qvd);

drop table FACT;


///$tab EXIT
EXIT SCRIPT;
///$tab ADHERENCE
// NoConcatenate
// ADHERENCE_FACT:
// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'SIP' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL, NULL, DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY,'YYYYMMDD')), 
// 					(DATE(B.DISPENSE_DATE_KEY,'YYYYMMDD')))) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY,'YYYYMMDD')), (DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120, 'NOT_ADHERENT','ADHERENT'
// 			)) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'), '$(vToday)') AS DAYS_SINCE_SHIPMENT

// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;


// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'PARAGON' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE(B.DISPENSE_DATE_KEY,'YYYYMMDD')))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT

// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'PARAGON'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;

// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'OPTIONCARE' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE(B.DISPENSE_DATE_KEY, 'YYYYMMDD')))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT
// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'OPTIONCARE'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;


// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'VITALCARE' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY,'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD')))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT


// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'VITALCARE'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;



// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'IVXHEALTH' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// iff(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// iff(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'),DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) AS DAYS_BETWEEN_SHIPMENT,
// iff(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// iff(DATEDIFF(day, DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD'),DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD')) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT

// FROM (
// SELECT  
// F.PATIENT_ID AS PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'IVXHEALTH'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;





// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'TWELVESTONE' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY,'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD')))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT


// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'TWELVESTONE'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;


// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'SOLEOHEALTH' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY,'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD')))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT


// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'SOLEOHEALTH'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;


// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'INFUSIONFORHEALTH' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY,'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD')))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT


// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'INFUSIONFORHEALTH'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;


// CONCATENATE(ADHERENCE_FACT)


// SELECT 
// 'ADHERENCE' as "GrainFlag",
// A.PATIENT_KEY as "PATIENT KEY",
// A.DISPENSE_DATE_KEY AS DATE_KEY,
// 'VIVOINFUSION' AS SPECIALTY_PHARMACY,
// A.FILL_NUMBER,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IFF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IFF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (DATE(A.DISPENSE_DATE_KEY,'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD')))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IFF(B.FILL_NUMBER IS NULL,'NOT_ADHERENT',
// IFF(DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')),(DATE( B.DISPENSE_DATE_KEY, 'YYYYMMDD'))) > 120,'NOT_ADHERENT','ADHERENT'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (DATE( A.DISPENSE_DATE_KEY, 'YYYYMMDD')), '$(vToday)') AS DAYS_SINCE_SHIPMENT


// FROM (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND REPLACE(PATIENT_SOURCE, ' ', '') = 'VIVOINFUSION'
// AND FILL_NUMBER = '1'
// // AND DISPENSE_DATE_KEY >= '20230401'
// // AND DISPENSE_DATE_KEY <= '20230631'
// ) A
// LEFT JOIN
// (
// SELECT  
// F.PATIENT_ID as PATIENT_KEY, 
// F.REFERRAL_DATE_KEY,
// F.DISPENSE_DATE_KEY,
// F.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// FILL_NUMBER
// FROM LUNDBECK_DW.ANALYTICS.ASOC_DISPENSE F
// INNER JOIN LUNDBECK_DW.COMMON.PRODUCTS PG ON PG.PRODUCT_GROUP_CODE = F.PRODUCT_GROUP_CODE
// WHERE
// BRAND = 'VYEPTI'
// AND FILL_NUMBER = '2'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ;




// /////////////////////////////////
// STORE ADHERENCE_FACT INTO [$(vStorePathFact)/VYEPTI_FACT_ASOC_ADHERENCE$(vSpace)$(vSF).qvd](qvd);

// DROP TABLE ADHERENCE_FACT;




///$tab //PARAGON ADHERENCE
// LET vStartDate='20200401';

// WEEK:
// LOAD *;
// SELECT DISTINCT A.DATE_WEEK_END_KEY , RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NUMBER FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '') 
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A;


// NoConcatenate
// MAX_WEEK:
// LOAD MAX(WEEK_NUMBER) AS MAX_WEEK_NO
// RESIDENT WEEK;

// let vNoOfWeeks = PEEK('MAX_WEEK_NO');


// drop table MAX_WEEK;


// TEMP2:
// LOAD * Inline
// [JUNK];

// FOR i = 1 to $(vNoOfWeeks)

// MAX_DATE_WEEK_END_KEY:
// LOAD DATE_WEEK_END_KEY AS MAX_DATE_WEEK_END_KEY
// RESIDENT WEEK
// WHERE WEEK_NUMBER = $(i);

// let vmaxDateWeekEnd = peek('MAX_DATE_WEEK_END_KEY');
// Trace '$(vmaxDateWeekEnd)';
// NoConcatenate
// TEMP:
// LOAD *,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, '2_NA_Pending_next_infusion_late_to_fill',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , '3_A_Early_Fill',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '4_A_On_time',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '5_NA_Late_filled_not_adherent',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '6_A_Pending_next_infusion',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '7_NA_Pending_next_infusion'
                        
// ))))))) AS GRANULAR_BUCKET_80_110,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, 'NOT_ADHERENT',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , 'ADHERENT',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT'
                        
// ))))))) AS ADHERENT_NON_ADHERENT_FLAG
// ;
// LOAD 
// num#(DATE_KEY) as DATE_KEY,
// PATIENT_KEY,
// $(i) AS WEEK_NUMBER_DUMMY,
// PATIENT_KEY & PREV_FILL_NUMBER AS FACT_KEY,
// IF(PREV_FILL_NUMBER = 1, 0, PREVIOUS(DAYS_BETWEEN_SHIPMENT)) AS DAYS_BETWEEN_SHIPMENT_LAG,
// SPECIALTY_PHARMACY,
// WEEK_NO,
// PREV_FILL_NUMBER,
// NEXT_FILL_NUMBER,
// PREV_REFERRAL_DATE_KEY,
// NEXT_REFERRAL_DATE_KEY,
// PREV_DISPENSE_DATE_KEY,
// NEXT_DISPENSE_DATE_KEY,
// DAYS_BETWEEN_SHIPMENT,
// ADHERENT_NON_ADHERENT,
// DAYS_SINCE_SHIPMENT
// ;

// SELECT 
// A.PATIENT_KEY,
// '$(vmaxDateWeekEnd)' AS DATE_KEY,
// 'PARAGON' AS SPECIALTY_PHARMACY,
// A.WEEK_NO,
// A.FILL_NUMBER AS PREV_FILL_NUMBER,
// B.FILL_NUMBER AS NEXT_FILL_NUMBER,
// A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
// B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IIF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112)))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// IIF(DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112))) > 110,'NA','A'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)), '$(vmaxDateWeekEnd)') AS DAYS_SINCE_SHIPMENT
// FROM (
// SELECT 
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE PATIENT_SOURCE = 'PARAGON')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) A
// LEFT JOIN 
// (
// SELECT   
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE PATIENT_SOURCE = 'PARAGON')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ORDER BY A.PATIENT_KEY, A.FILL_NUMBER;

// INNER JOIN
// LOAD PATIENT_KEY&PREV_FILL_NUMBER AS FACT_KEY;
// LOAD PATIENT_KEY, MAX(PREV_FILL_NUMBER) AS PREV_FILL_NUMBER
// RESIDENT TEMP
// GROUP BY PATIENT_KEY;

// DROP TABLE MAX_DATE_WEEK_END_KEY;

// Concatenate(TEMP2)
// LOAD * Resident TEMP;

// DROP Table TEMP;

// next 

// DROP FIELD JUNK FROM TEMP2;

///$tab //OPTIONCARE ADHERENCE
// FOR i = 1 to $(vNoOfWeeks)

// MAX_DATE_WEEK_END_KEY:
// LOAD DATE_WEEK_END_KEY AS MAX_DATE_WEEK_END_KEY
// RESIDENT WEEK
// WHERE WEEK_NUMBER = $(i);

// let vmaxDateWeekEnd = peek('MAX_DATE_WEEK_END_KEY');
// Trace '$(vmaxDateWeekEnd)';
// NoConcatenate
// TEMP:
// LOAD *,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, '2_NA_Pending_next_infusion_late_to_fill',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , '3_A_Early_Fill',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '4_A_On_time',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '5_NA_Late_filled_not_adherent',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '6_A_Pending_next_infusion',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '7_NA_Pending_next_infusion'
                        
// ))))))) AS GRANULAR_BUCKET_80_110,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, 'NOT_ADHERENT',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , 'ADHERENT',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT'
                        
// ))))))) AS ADHERENT_NON_ADHERENT_FLAG
// ;
// LOAD 
// num#(DATE_KEY) as DATE_KEY,
// PATIENT_KEY,
// $(i) AS WEEK_NUMBER_DUMMY,
// PATIENT_KEY & PREV_FILL_NUMBER AS FACT_KEY,
// IF(PREV_FILL_NUMBER = 1, 0, PREVIOUS(DAYS_BETWEEN_SHIPMENT)) AS DAYS_BETWEEN_SHIPMENT_LAG,
// SPECIALTY_PHARMACY,
// WEEK_NO,
// PREV_FILL_NUMBER,
// NEXT_FILL_NUMBER,
// PREV_REFERRAL_DATE_KEY,
// NEXT_REFERRAL_DATE_KEY,
// PREV_DISPENSE_DATE_KEY,
// NEXT_DISPENSE_DATE_KEY,
// DAYS_BETWEEN_SHIPMENT,
// ADHERENT_NON_ADHERENT,
// DAYS_SINCE_SHIPMENT
// ;

// SELECT 
// A.PATIENT_KEY,
// '$(vmaxDateWeekEnd)' AS DATE_KEY,
// 'OPTIONCARE' AS SPECIALTY_PHARMACY,
// A.WEEK_NO,
// A.FILL_NUMBER AS PREV_FILL_NUMBER,
// B.FILL_NUMBER AS NEXT_FILL_NUMBER,
// A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
// B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IIF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112)))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// IIF(DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112))) > 110,'NA','A'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)), '$(vmaxDateWeekEnd)') AS DAYS_SINCE_SHIPMENT
// FROM (
// SELECT 
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') = 'OPTIONCARE')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) A
// LEFT JOIN 
// (
// SELECT   
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') = 'OPTIONCARE')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ORDER BY A.PATIENT_KEY, A.FILL_NUMBER;

// INNER JOIN
// LOAD PATIENT_KEY&PREV_FILL_NUMBER AS FACT_KEY;
// LOAD PATIENT_KEY, MAX(PREV_FILL_NUMBER) AS PREV_FILL_NUMBER
// RESIDENT TEMP
// GROUP BY PATIENT_KEY;

// DROP TABLE MAX_DATE_WEEK_END_KEY;

// Concatenate(TEMP2)
// LOAD * Resident TEMP;

// DROP Table TEMP;

// next 

///$tab //IVXHEALTH ADHERENCE
// FOR i = 1 to $(vNoOfWeeks)

// MAX_DATE_WEEK_END_KEY:
// LOAD DATE_WEEK_END_KEY AS MAX_DATE_WEEK_END_KEY
// RESIDENT WEEK
// WHERE WEEK_NUMBER = $(i);

// let vmaxDateWeekEnd = peek('MAX_DATE_WEEK_END_KEY');
// Trace '$(vmaxDateWeekEnd)';
// NoConcatenate
// TEMP:
// LOAD *,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, '2_NA_Pending_next_infusion_late_to_fill',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , '3_A_Early_Fill',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '4_A_On_time',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '5_NA_Late_filled_not_adherent',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '6_A_Pending_next_infusion',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '7_NA_Pending_next_infusion'
                        
// ))))))) AS GRANULAR_BUCKET_80_110,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, 'NOT_ADHERENT',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , 'ADHERENT',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT'
                        
// ))))))) AS ADHERENT_NON_ADHERENT_FLAG
// ;
// LOAD 
// num#(DATE_KEY) as DATE_KEY,
// PATIENT_KEY,
// $(i) AS WEEK_NUMBER_DUMMY,
// PATIENT_KEY & PREV_FILL_NUMBER AS FACT_KEY,
// IF(PREV_FILL_NUMBER = 1, 0, PREVIOUS(DAYS_BETWEEN_SHIPMENT)) AS DAYS_BETWEEN_SHIPMENT_LAG,
// SPECIALTY_PHARMACY,
// WEEK_NO,
// PREV_FILL_NUMBER,
// NEXT_FILL_NUMBER,
// PREV_REFERRAL_DATE_KEY,
// NEXT_REFERRAL_DATE_KEY,
// PREV_DISPENSE_DATE_KEY,
// NEXT_DISPENSE_DATE_KEY,
// DAYS_BETWEEN_SHIPMENT,
// ADHERENT_NON_ADHERENT,
// DAYS_SINCE_SHIPMENT
// ;

// SELECT 
// A.PATIENT_KEY,
// '$(vmaxDateWeekEnd)' AS DATE_KEY,
// 'IVXHEALTH' AS SPECIALTY_PHARMACY,
// A.WEEK_NO,
// A.FILL_NUMBER AS PREV_FILL_NUMBER,
// B.FILL_NUMBER AS NEXT_FILL_NUMBER,
// A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
// B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IIF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112)))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// IIF(DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112))) > 110,'NA','A'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)), '$(vmaxDateWeekEnd)') AS DAYS_SINCE_SHIPMENT
// FROM (
// SELECT 
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') = 'IVXHEALTH')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) A
// LEFT JOIN 
// (
// SELECT   
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') = 'IVXHEALTH')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ORDER BY A.PATIENT_KEY, A.FILL_NUMBER;

// INNER JOIN
// LOAD PATIENT_KEY&PREV_FILL_NUMBER AS FACT_KEY;
// LOAD PATIENT_KEY, MAX(PREV_FILL_NUMBER) AS PREV_FILL_NUMBER
// RESIDENT TEMP
// GROUP BY PATIENT_KEY;

// DROP TABLE MAX_DATE_WEEK_END_KEY;

// Concatenate(TEMP2)
// LOAD * Resident TEMP;

// DROP Table TEMP;

// next 

///$tab //VITALCARE ADHERENCE
// FOR i = 1 to $(vNoOfWeeks)

// MAX_DATE_WEEK_END_KEY:
// LOAD DATE_WEEK_END_KEY AS MAX_DATE_WEEK_END_KEY
// RESIDENT WEEK
// WHERE WEEK_NUMBER = $(i);

// let vmaxDateWeekEnd = peek('MAX_DATE_WEEK_END_KEY');
// Trace '$(vmaxDateWeekEnd)';
// NoConcatenate
// TEMP:
// LOAD *,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, '2_NA_Pending_next_infusion_late_to_fill',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , '3_A_Early_Fill',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '4_A_On_time',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '5_NA_Late_filled_not_adherent',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '6_A_Pending_next_infusion',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '7_NA_Pending_next_infusion'
                        
// ))))))) AS GRANULAR_BUCKET_80_110,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, 'NOT_ADHERENT',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , 'ADHERENT',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT'
                        
// ))))))) AS ADHERENT_NON_ADHERENT_FLAG
// ;
// LOAD 
// num#(DATE_KEY) as DATE_KEY,
// PATIENT_KEY,
// $(i) AS WEEK_NUMBER_DUMMY,
// PATIENT_KEY & PREV_FILL_NUMBER AS FACT_KEY,
// IF(PREV_FILL_NUMBER = 1, 0, PREVIOUS(DAYS_BETWEEN_SHIPMENT)) AS DAYS_BETWEEN_SHIPMENT_LAG,
// SPECIALTY_PHARMACY,
// WEEK_NO,
// PREV_FILL_NUMBER,
// NEXT_FILL_NUMBER,
// PREV_REFERRAL_DATE_KEY,
// NEXT_REFERRAL_DATE_KEY,
// PREV_DISPENSE_DATE_KEY,
// NEXT_DISPENSE_DATE_KEY,
// DAYS_BETWEEN_SHIPMENT,
// ADHERENT_NON_ADHERENT,
// DAYS_SINCE_SHIPMENT
// ;

// SELECT 
// A.PATIENT_KEY,
// '$(vmaxDateWeekEnd)' AS DATE_KEY,
// 'VITALCARE' AS SPECIALTY_PHARMACY,
// A.WEEK_NO,
// A.FILL_NUMBER AS PREV_FILL_NUMBER,
// B.FILL_NUMBER AS NEXT_FILL_NUMBER,
// A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
// B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IIF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112)))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// IIF(DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112))) > 110,'NA','A'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)), '$(vmaxDateWeekEnd)') AS DAYS_SINCE_SHIPMENT
// FROM (
// SELECT 
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') = 'VITALCARE')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) A
// LEFT JOIN 
// (
// SELECT   
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') = 'VITALCARE')
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ORDER BY A.PATIENT_KEY, A.FILL_NUMBER;

// INNER JOIN
// LOAD PATIENT_KEY&PREV_FILL_NUMBER AS FACT_KEY;
// LOAD PATIENT_KEY, MAX(PREV_FILL_NUMBER) AS PREV_FILL_NUMBER
// RESIDENT TEMP
// GROUP BY PATIENT_KEY;

// DROP TABLE MAX_DATE_WEEK_END_KEY;

// Concatenate(TEMP2)
// LOAD * Resident TEMP;

// DROP Table TEMP;

// next 

///$tab //SIP ADHERENCE
// FOR i = 1 to $(vNoOfWeeks)

// MAX_DATE_WEEK_END_KEY:
// LOAD DATE_WEEK_END_KEY AS MAX_DATE_WEEK_END_KEY
// RESIDENT WEEK
// WHERE WEEK_NUMBER = $(i);

// let vmaxDateWeekEnd = peek('MAX_DATE_WEEK_END_KEY');
// Trace '$(vmaxDateWeekEnd)';
// NoConcatenate
// TEMP:
// LOAD *,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, '2_NA_Pending_next_infusion_late_to_fill',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , '3_A_Early_Fill',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '4_A_On_time',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '5_NA_Late_filled_not_adherent',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, '6_A_Pending_next_infusion',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, '7_NA_Pending_next_infusion'
                        
// ))))))) AS GRANULAR_BUCKET_80_110,
// IF(DAYS_SINCE_SHIPMENT <= 90 AND PREV_FILL_NUMBER = 1,'1_Taken_Not_eligible_for_2nd',
// 	IF(DAYS_SINCE_SHIPMENT >= 110, 'NOT_ADHERENT',
//     	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG <= 80 , 'ADHERENT',
//         	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 80 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//             	IF(DAYS_SINCE_SHIPMENT <= 90 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT',
//                 	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG <= 110, 'ADHERENT',
//                     	IF(DAYS_SINCE_SHIPMENT >  90 AND DAYS_SINCE_SHIPMENT <= 110 AND DAYS_BETWEEN_SHIPMENT_LAG > 110, 'NOT_ADHERENT'
                        
// ))))))) AS ADHERENT_NON_ADHERENT_FLAG
// ;
// LOAD 
// num#(DATE_KEY) as DATE_KEY,
// PATIENT_KEY,
// $(i) AS WEEK_NUMBER_DUMMY,
// PATIENT_KEY & PREV_FILL_NUMBER AS FACT_KEY,
// IF(PREV_FILL_NUMBER = 1, 0, PREVIOUS(DAYS_BETWEEN_SHIPMENT)) AS DAYS_BETWEEN_SHIPMENT_LAG,
// SPECIALTY_PHARMACY,
// WEEK_NO,
// PREV_FILL_NUMBER,
// NEXT_FILL_NUMBER,
// PREV_REFERRAL_DATE_KEY,
// NEXT_REFERRAL_DATE_KEY,
// PREV_DISPENSE_DATE_KEY,
// NEXT_DISPENSE_DATE_KEY,
// DAYS_BETWEEN_SHIPMENT,
// ADHERENT_NON_ADHERENT,
// DAYS_SINCE_SHIPMENT
// ;

// SELECT 
// A.PATIENT_KEY,
// '$(vmaxDateWeekEnd)' AS DATE_KEY,
// 'SIP' AS SPECIALTY_PHARMACY,
// A.WEEK_NO,
// A.FILL_NUMBER AS PREV_FILL_NUMBER,
// B.FILL_NUMBER AS NEXT_FILL_NUMBER,
// A.REFERRAL_DATE_KEY AS PREV_REFERRAL_DATE_KEY,
// B.REFERRAL_DATE_KEY AS NEXT_REFERRAL_DATE_KEY,
// A.DISPENSE_DATE_KEY AS PREV_DISPENSE_DATE_KEY,
// IIF(B.DISPENSE_DATE_KEY IS NULL, '$(vToday)', B.DISPENSE_DATE_KEY) AS NEXT_DISPENSE_DATE_KEY,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112)))
// ) AS DAYS_BETWEEN_SHIPMENT,
// IIF(B.FILL_NUMBER IS NULL,NULL,
// IIF(DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)),(Convert(varchar, B.DISPENSE_DATE_KEY, 112))) > 110,'NA','A'
// )) AS ADHERENT_NON_ADHERENT,
// DATEDIFF(day, (Convert(varchar, A.DISPENSE_DATE_KEY, 112)), '$(vmaxDateWeekEnd)') AS DAYS_SINCE_SHIPMENT
// FROM (
// SELECT 
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') IN ('VITALCARE', 'OPTIONCARE', 'PARAGON', 'IVXHEALTH'))
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) A
// LEFT JOIN 
// (
// SELECT   
// PS.PATIENT_KEY, 
// PS.REFERRAL_DATE_KEY,
// PS.DISPENSE_DATE_KEY,
// PS.PATIENT_SOURCE AS SPECIALTY_PHARMACY,
// CAL.DATE_WEEK_END_KEY, 
// WN.WEEK_NO,
// FILL_NUMBER
// FROM LUINC.FACT_ASOC_DISPENSE PS
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = PS.DISPENSE_DATE_KEY
// LEFT JOIN (
// SELECT DISTINCT A.DATE_WEEK_END_KEY, RANK() OVER(ORDER BY A.DATE_WEEK_END_KEY) WEEK_NO FROM 
// (
// SELECT DISTINCT DATE_WEEK_END_KEY FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DISPENSE_DATE_KEY
// INNER JOIN LUINC.FACT_PATIENT_SNAPSHOT SNAP ON F.PATIENT_KEY = SNAP.PATIENT_KEY  AND replace(SNAP.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE SNAP.PATIENT_STATUS ='ACTIVE'
// AND F.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// )A
// )WN ON WN.DATE_WEEK_END_KEY = CAL.DATE_WEEK_END_KEY
// INNER JOIN (SELECT DISTINCT PATIENT_KEY, PATIENT_STATUS FROM LUINC.FACT_PATIENT_SNAPSHOT SNAP
// 			INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = SNAP.PRODUCT_GROUP_KEY
// 			WHERE PATIENT_STATUS = 'ACTIVE' AND PRODUCT_NAME = 'VYEPTI') SNAP ON PS.PATIENT_KEY = SNAP.PATIENT_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = PS.PRODUCT_GROUP_KEY
// WHERE PS.PATIENT_KEY IN (SELECT DISTINCT PATIENT_KEY FROM LUINC.FACT_ASOC_DISPENSE WHERE REPLACE(PATIENT_SOURCE, ' ', '') IN ('VITALCARE', 'OPTIONCARE', 'PARAGON', 'IVXHEALTH'))
// AND SNAP.PATIENT_STATUS ='ACTIVE'
// AND PS.PATIENT_KEY NOT IN ('0', '1')
// AND PG.PRODUCT_NAME = 'VYEPTI'
// AND cal.DATE_WEEK_END_KEY <='$(vmaxDateWeekEnd)'
// ) B ON A.PATIENT_KEY = B.PATIENT_KEY AND A.FILL_NUMBER + 1 = B.FILL_NUMBER
// ORDER BY A.PATIENT_KEY, A.FILL_NUMBER;

// INNER JOIN
// LOAD PATIENT_KEY&PREV_FILL_NUMBER AS FACT_KEY;
// LOAD PATIENT_KEY, MAX(PREV_FILL_NUMBER) AS PREV_FILL_NUMBER
// RESIDENT TEMP
// GROUP BY PATIENT_KEY;

// DROP TABLE MAX_DATE_WEEK_END_KEY;

// Concatenate(TEMP2)
// LOAD * Resident TEMP;

// DROP Table TEMP;

// next 

// Store TEMP2 into [$(vStorePathFact)/VYEPTI_FACT_ASOC_ADHERENCE_HQ.qvd](qvd);



///$tab EXIT SCRIPT
EXIT SCRIPT;
///$tab SIP
//  //Binary [lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/HQ/2022 - Vyepti SPIFF Report.qvf];


// SET ThousandSep=',';
// SET DecimalSep='.';
// SET MoneyThousandSep=',';
// SET MoneyDecimalSep='.';
// SET NumFormat='';
// SET MoneyFormat='#.##0,00 kr.;-#.##0,00 kr.';
// SET TimeFormat='hh.mm.ss';
// SET DateFormat='MM/DD/YYYY';
// SET TimestampFormat='MM/DD/YYYY hh.mm.ss[.fff]';
// SET FirstWeekDay=0;
// SET BrokenWeeks=0;
// SET ReferenceDay=4;
// SET FirstMonthOfYear=1;
// SET CollationLocale='en-US';
// SET CreateSearchIndexOnReload=1;
// SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
// SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December'; 
// SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
// SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
// SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';

// $(Must_Include='lib://LuUS QVD/Production/QlikSense BI Evolution/Offline Files/Include/FolderConnections.txt');

// // vQVDPathFacT1 = 'lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/HQ';

// vQVDPathFact = 'lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/HQ';

// // STORE FACT into [lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/HQ/Frozen_Fact_SPIFF2.qvd](qvd);
// // STORE Terr into [lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/New/Frozen_Terr_SPIFF2.qvd](qvd);
// // STORE Customer into [lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Dimensions/Vyepti/HQ/Frozen_SPIFF2_DIM_VAP_CUSTOMER.qvd](qvd);
// // vQVDPathFact = 'lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/New';
// vQVDPathDim = 'lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Dimensions/Vyepti/New';
// vQVDPathDim2 = 'lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Dimensions/Vyepti/HQ';
// LIB CONNECT TO 'LuUS DW2.0';
// LET vToday=DATE(TODAY(),'YYYYMMDD');
// vStorePathFact = 'lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Facts/Vyepti/HQ';
// vStorePathDim = 'lib://LuUS QVD/Production/QlikSense BI Evolution/QVDs/Extract/Dimensions/Vyepti/HQ';

// SELECT 
// LUNDBECK_ID,
// CALENDAR_YEAR_MONTH,
// REGION_NAME,
// PRODUCT_NAME,
// AG.REXULTI_INCLUSION_IND,
// C.REXULTI_EXCLUSION_IND,
// C.DATA_STEWARDSHIP_EXCLUSION_FLAG,
// C.LU_NO_CONTACT_FLAG,
// SUM(NORMALIZED_TRX) AS TRX
// FROM LUINC.FACT_RETAIL_SALES F
// INNER JOIN LUINC.DIM_CUSTOMER C ON C.CUSTOMER_KEY = F.CUSTOMER_KEY
// INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DATE_KEY
// INNER JOIN LUINC.DIM_TERRITORY T ON T.TERRITORY_KEY = F.SF2_TERRITORY_KEY
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// Inner join LUINC.DIM_AGE_GROUP ag on F.AGE_GROUP_KEY = ag.AGE_GROUP_KEY
// WHERE LUNDBECK_ID IN ('LU0005904548', 'LU0004107517','LU0000819826', 'LU0005486995')
// AND 
// F.PRODUCT_GROUP_KEY IN (select PRODUCT_GROUP_KEY FROM LUINC.DIM_MB_REXULTI_IC)
// GROUP BY 
// CALENDAR_YEAR_MONTH,
// REGION_NAME,
// PRODUCT_NAME,
// LUNDBECK_ID,
// AG.REXULTI_INCLUSION_IND,
// C.REXULTI_EXCLUSION_IND,
// C.DATA_STEWARDSHIP_EXCLUSION_FLAG,
// C.LU_NO_CONTACT_FLAG;

// EXIT SCRIPT;

// SELECT 
// DATE_KEY,
// SOURCE_OF_BUSINESS,
// BRAND AS PRODUCT_GROUP_KEY,
// SUM(TOTAL_CLAIMS) AS CLAIMS
// FROM "LU_DW"."LUINC"."FACT_CLAIMS" F
// INNER JOIN "LU_DW"."LUINC".DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE 
// PRODUCT_NAME IN ('REXULTI', 'TRINTELLIX')
// AND DATE_KEY >= '20220701'
// GROUP BY DATE_KEY,
// SOURCE_OF_BUSINESS,
// BRAND;

// EXIT SCRIPT;
// SELECT TOP 10 * FROM LUINC.FACT_CLAIMS;



// // SELECT distinct patient_source FROM LUINC.FACT_PATIENT_SNAPSHOT_weekly
// // // WHERE SOURCE_PATIENT_ID = '42116'
// // ;
// EXIT SCRIPT;

// VYEPTI_FACT_SIP_PATIENT_SNAPSHOT_HQ:
// SELECT 
//     snap.*,
// PATIENT_ID,
// HOME_INFUSION_DATE_KEY,
// 	ZT.FRS_TERRITORY_KEY AS FRS_ZIP_TO_TERRITORY_KEY
// FROM LUINC.FACT_PATIENT_SNAPSHOT snap
// inner join luinc.DIM_PATIENT p on p.PATIENT_KEY = snap.PATIENT_KEY
// INNER JOIN LUINC.dim_product_group pg ON pg.product_group_key = snap.product_group_key
// left JOIN (
// SELECT CUSTOMER_KEY,PATIENT_KEY,REPLACE(f.PATIENT_SOURCE,' ','') as PATIENT_SOURCE,MAX(INFUSION_DATE_KEY) AS HOME_INFUSION_DATE_KEY
// from LUINC.FACT_ASOC_DISPENSE f 
// Group BY
// PATIENT_KEY,REPLACE(f.PATIENT_SOURCE,' ',''),CUSTOMER_KEY
// ) f on f.PATIENT_KEY = snap.PATIENT_KEY
// and f.PATIENT_SOURCE= snap.PATIENT_SOURCE
// and f.CUSTOMER_KEY= snap.CUSTOMER_KEY
// LEFT JOIN LUINC.FACT_ZIP_TO_TERRITORY_FRS ZT ON ZT.ZIP=snap.CUSTOMER_ZIP AND CURRENT_IND='Y'
//  WHERE pg.brand = 'VYEPTI'
// and REPLACE(snap.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// ;


// Store VYEPTI_FACT_SIP_PATIENT_SNAPSHOT_HQ into [$(vStorePathFact)/VYEPTI_FACT_PATIENT_SIP_SNAPSHOT_HQ.qvd](qvd);
// Drop Table VYEPTI_FACT_SIP_PATIENT_SNAPSHOT_HQ;


// First_Shipment:
// SELECT  isnull(first_ship2.DISPENSE_DATE_KEY,  ps.FIRST_PAID_SHIPMENT_DATE_KEY) as FIRST_PAID_SHIPMENT_DATE_KEY  
// ,      ISNULL(first_ship2.REFERRAL_DATE_KEY, ps.REFERRAL_DATE_KEY) as REFERRAL_DATE_KEY
// ,      ps.PATIENT_SOURCE as PATIENT_SOURCE
// ,      PATIENT_ID
// ,      PS.PATIENT_STATUS as "Patient Status"
// ,	   HIPAA_CONSENT_IND
// FROM  LUINC.FACT_PATIENT_SNAPSHOT PS
// INNER JOIN LUINC.DIM_PATIENT P on P.PATIENT_KEY=PS.PATIENT_KEY
// left join (
// SELECT DISPENSE_DATE_KEY
// ,      REFERRAL_DATE_KEY
// ,      PATIENT_SOURCE
// ,      PATIENT_KEY
// FROM (
// SELECT  MIN(ps.DISPENSE_DATE_KEY) OVER (PARTITION BY ps.patient_key, ps.PATIENT_SOURCE) as min_shipped_key
// ,      ps.DISPENSE_DATE_KEY
// ,      ps.REFERRAL_DATE_KEY
// ,      ps.PATIENT_SOURCE
// ,      ps.PATIENT_KEY
// FROM   luinc.FACT_ASOC_DISPENSE ps
// INNER JOIN luinc.DIM_PRODUCT_GROUP pg
// On pg.PRODUCT_GROUP_KEY = ps.PRODUCT_GROUP_KEY
// WHERE pg.BRAND = 'VYEPTI'
// ) first_ship
// WHERE min_shipped_key = first_ship.DISPENSE_DATE_KEY
// ) first_ship2
// on  PS.PATIENT_KEY=first_ship2.PATIENT_KEY
// and  REPLACE(PS.PATIENT_SOURCE, ' ', '')=REPLACE(first_ship2.PATIENT_SOURCE, ' ', '')
// WHERE 
// REPLACE(PS.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// ;

// Store First_Shipment into [$(vStorePathFact)/VYEPTI_FACT_PATIENT_SIP_SNAPSHOT_FISRT_SHIPMENT.qvd](qvd);
// Drop Table First_Shipment;

// VYEPTI_FACT_ASOC_DISPENSE_HQ: 
// SQl Select 
// 		p.DISPENSE_DATE_KEY												as DATE_KEY,
//         CONCAT(P.PATIENT_KEY,P.DISPENSE_DATE_KEY) AS F_KEY,
//         P.ASOC_PATIENT_ID,
//         replace(P.PATIENT_SOURCE,' ', '') as PATIENT_SOURCE,
//         p.REFERRAL_DATE_KEY,
// 		p.CUSTOMER_KEY,
//         p.SF3_TERRITORY_KEY,
//         p.PRIMARY_PLAN_KEY AS PLAN_KEY,
//         p.PRODUCT_GROUP_KEY,
// 		p.PATIENT_KEY,
//         PATIENT_ID,
//         RANK() OVER (PARTITION BY P.PATIENT_KEY ORDER BY DISPENSE_DATE_KEY) AS SHIPMENT_OCCOURENCE,
// 		replace(P.PATIENT_SOURCE,' ', '') AS SPECIALTY_PHARMACY,
//         f.PATIENT_STATUS,
//         CASE p.QTY_DISPENSED WHEN 1 THEN '100 mg' WHEN 2 Then '200 mg' WHEN 3 Then '300 mg' ELSE 'Other' END as 'DOSE', 
//         count(distinct p.FACT_KEY)										as SHIPMENTS,
//         Sum(p.QTY_DISPENSED) 												as 'Norm. Units',
//         'PHARMACY' AS BENEFIT_TYPE
// from LUINC.FACT_ASOC_DISPENSE p
// 	inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=p.PRODUCT_GROUP_KEY
//     inner join LUINC.DIM_PATIENT dpt on dpt.PATIENT_KEY=p.PATIENT_KEY
//     LEFT join LUINC.FACT_PATIENT_SNAPSHOT f on f.PATIENT_KEY=p.PATIENT_KEY AND replace(P.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// where dp.PRODUCT_NAME='Vyepti'
// and REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// // AND REPLACE(F.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// group by 
// 	P.DISPENSE_DATE_KEY,
//     p.CUSTOMER_KEY,
//     p.PRODUCT_GROUP_KEY,
//     p.PATIENT_KEY,
//     p.SF3_TERRITORY_KEY,
//     PATIENT_ID,
//         f.PATIENT_STATUS,
//     CASE p.QTY_DISPENSED WHEN 1 THEN '100 mg' WHEN 2 Then '200 mg' WHEN 3 Then '300 mg' ELSE 'Other' END,
//     p.REFERRAL_DATE_KEY,
//     p.PRIMARY_PLAN_KEY,
//     P.ASOC_PATIENT_ID,
//     P.PATIENT_SOURCE;
    
//     Left Join(VYEPTI_FACT_ASOC_DISPENSE_HQ)
// LOAD 
// PATIENT_KEY,
// // PATIENT_KEY&PATIENT_SOURCE AS F_KEY,
// SHIPMENTS_INFUSIONS;
// SQl Select 
// 		p.PATIENT_KEY,
//         count(distinct DISPENSE_DATE_KEY)							SHIPMENTS_INFUSIONS
// from LUINC.FACT_ASOC_DISPENSE p
// inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=p.PRODUCT_GROUP_KEY
// where dp.PRODUCT_NAME='Vyepti'
// AND REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// group by p.PATIENT_KEY;

// Left Join(VYEPTI_FACT_ASOC_DISPENSE_HQ)
// LOAD PATIENT_KEY&DATE_KEY AS F_KEY,
// NEW_UNITS_FLAG;
// SQl Select 
// 		p.PATIENT_KEY,
//         p.DISPENSE_DATE_KEY as DATE_KEY,
//         NEW_UNITS_FLAG
// from LUINC.FACT_ASOC_DISPENSE p
//     inner join (
//     select PATIENT_KEY,
//     min(DISPENSE_DATE_KEY) as MinDATE,
//     'Y' as NEW_UNITS_FLAG
//     from LUINC.FACT_ASOC_DISPENSE f
//     inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=f.PRODUCT_GROUP_KEY
//     where 
// 		dp.PRODUCT_NAME='Vyepti'
//         AND REPLACE(F.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
//     group by
//     PATIENT_KEY
//     ) t on t.PATIENT_KEY=p.PATIENT_KEY and t.MinDATE=p.DISPENSE_DATE_KEY
// where REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// group by 
//  	p.PATIENT_KEY,
//     p.DISPENSE_DATE_KEY,
// 	NEW_UNITS_FLAG
// ;


// Store VYEPTI_FACT_ASOC_DISPENSE_HQ into [$(vStorePathFact)/VYEPTI_FACT_ASOC_DISPENSE_HQ.qvd](qvd); Drop Table VYEPTI_FACT_ASOC_DISPENSE_HQ;
// exit script;

// EXIT SCRIPT;

// SELECT 
// AGE_GROUP,
// CALENDAR_YEAR_MONTH,
// SUM(FRS.NORMALIZED_TRX) AS TRX
// FROM LUINC.FACT_RETAIL_SALES frs
// Inner join LUINC.DIM_CUSTOMER dc on frs.CUSTOMER_KEY = dc.CUSTOMER_KEY
// Inner join LUINC.DIM_AGE_GROUP ag on frs.AGE_GROUP_KEY = ag.AGE_GROUP_KEY
// 	  INNER JOIN LUINC.DIM_CHANNEL cha
//   on cha.CHANNEL_KEY=frs.CHANNEL_KEY and CHANNEL_NAME<>'UNKNOWN'
// INNER JOIN LUINC.DIM_PRODUCT_GROUP pg
//   ON pg.PRODUCT_GROUP_KEY = frs.PRODUCT_GROUP_KEY
// INNER JOIN LUINC.DIM_BRAND b
//   ON b.BRAND_CODE = pg.BRAND_CODE
//   INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = FRS.DATE_KEY
// INNER JOIN LUINC.DIM_PLAN dp
//   ON dp.PLAN_KEY = frs.PLAN_KEY
// INNER JOIN LUINC.DIM_TERRITORY T ON T.TERRITORY_KEY = FRS.SF2_TERRITORY_KEY
// where ISNULL(ag.REXULTI_INCLUSION_IND, 'Y') = 'Y'
//   AND  dc.REXULTI_EXCLUSION_IND = 'N'
//   AND  ISNULL(dc.DATA_STEWARDSHIP_EXCLUSION_FLAG, 'N') = 'N'
//   AND  ISNULL(dc.LU_NO_CONTACT_FLAG, 'N') <> 'Y'
//   AND  ((dc.CUSTOMER_TYPE <> 'HCO' and (dc.PSYCH_SPECIALTY_IND = 'Y' or dc.REXULTI_SALES_BI_VISIBILITY = 'Y' or CUSTOMER_NAME like 'IQVIA%'))
//         OR (dc.CUSTOMER_TYPE = 'HCO' and ISNULL(dc.REXULTI_RETAIL_HCO_EXCL_IND, 'N') <> 'Y'))
// and frs.DATE_KEY > '20220101'
// // and frs.DATE_KEY <= '$(vMaxDate)'
// and frs.PRODUCT_GROUP_KEY in
//   (select PRODUCT_GROUP_KEY FROM LUINC.DIM_MB_REXULTI_IC)
// AND pg.BRAND = 'REXULTI'
// AND SALESFORCE_GROUP_NAME = 'SIERRA'
// GROUP BY AGE_GROUP, CALENDAR_YEAR_MONTH;

// EXIT SCRIPT;


// // SELECT SALESFORCE_GROUP_NAME, 
// // AGE_GROUP, 
// // REXULTI_SALES_BI_VISIBILITY,
// // isnull(c.LU_NO_CONTACT_FLAG,'N')  AS LU_NO_CONTACT_FLAG,
// // isnull(c.DATA_STEWARDSHIP_EXCLUSION_FLAG,'N') AS DATA_STEWARDSHIP_EXCLUSION_FLAG,
// // c.REXULTI_EXCLUSION_IND AS REXULTI_EXCLUSION_IND,
// // isnull(ag.REXULTI_INCLUSION_IND,'Y') AS REXULTI_INCLUSION_IND,
// // isnull(c.REXULTI_RETAIL_HCO_EXCL_IND,'N') AS REXULTI_RETAIL_HCO_EXCL_IND,
// // CALENDAR_YEAR_MONTH ,
// // SUM(NORMALIZED_TRX) AS TRX
// // FROM LUINC.FACT_RETAIL_SALES F
// // INNER JOIN LUINC.DIM_CUSTOMER C ON C.CUSTOMER_KEY = F.CUSTOMER_KEY
// // INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// // INNER JOIN LUINC.DIM_AGE_GROUP AG ON AG.AGE_GROUP_KEY = F.AGE_GROUP_KEY
// // INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DATE_KEY
// // LEFT JOIN LUINC.DIM_TERRITORY T ON T.TERRITORY_KEY = F.SF2_TERRITORY_KEY
// // WHEREÂ 
// // CUSTOMER_TYPE = 'HCP'
// // AND PRODUCT_NAME = 'REXULTI'
// // and F.DATE_KEY > '20220101'
// // // and F.DATE_KEY <= '20221231'
// // AND AG.AGE_GROUP IN ('65-74','75-80','81-90','UNKNOWN')
// // AND SALESFORCE_GROUP_NAME = 'SIERRA'
// // AND TERR_CURRENT_IND = 'Y'
// // GROUP BY 
// // AGE_GROUP, 
// // CALENDAR_YEAR_MONTH, 
// // SALESFORCE_GROUP_NAME,
// // isnull(c.LU_NO_CONTACT_FLAG,'N'),
// // isnull(c.DATA_STEWARDSHIP_EXCLUSION_FLAG,'N'),
// // c.REXULTI_EXCLUSION_IND,
// // isnull(ag.REXULTI_INCLUSION_IND,'Y'),
// // isnull(c.REXULTI_RETAIL_HCO_EXCL_IND,'N'),
// // REXULTI_SALES_BI_VISIBILITY
// // ;

// EXIT SCRIPT;

// VYEPTI_FACT_ASOC_DISPENSE_HQ: 
// SQl Select 
// 		p.INFUSION_DATE_KEY												as DATE_KEY,
//         CONCAT(P.PATIENT_KEY,P.INFUSION_DATE_KEY) AS F_KEY,
//         P.ASOC_PATIENT_ID,
//         replace(P.PATIENT_SOURCE,' ', '') as PATIENT_SOURCE,
//         p.REFERRAL_DATE_KEY,
// 		p.CUSTOMER_KEY,
//         p.SF3_TERRITORY_KEY,
//         p.PRIMARY_PLAN_KEY AS PLAN_KEY,
//         p.PRODUCT_GROUP_KEY,
// 		p.PATIENT_KEY,
//         PATIENT_ID,
// 		replace(P.PATIENT_SOURCE,' ', '') AS SPECIALTY_PHARMACY,
//         f.PATIENT_STATUS,
//         CASE p.QTY_DISPENSED WHEN 1 THEN '100 mg' WHEN 2 Then '200 mg' WHEN 3 Then '300 mg' ELSE 'Other' END as 'DOSE', 
//         count(distinct p.FACT_KEY)										as SHIPMENTS,
//         Sum(p.QTY_DISPENSED) 												as 'Norm. Units',
//         'PHARMACY' AS BENEFIT_TYPE
// from LUINC.FACT_ASOC_DISPENSE p
// 	inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=p.PRODUCT_GROUP_KEY
//     inner join LUINC.DIM_PATIENT dpt on dpt.PATIENT_KEY=p.PATIENT_KEY
//     LEFT join LUINC.FACT_PATIENT_SNAPSHOT f on f.PATIENT_KEY=p.PATIENT_KEY AND replace(P.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
// where dp.PRODUCT_NAME='Vyepti'
// and REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// // AND REPLACE(F.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// group by 
//  	p.INFUSION_DATE_KEY,
//     p.CUSTOMER_KEY,
//     p.PRODUCT_GROUP_KEY,
//     p.PATIENT_KEY,
//     p.SF3_TERRITORY_KEY,
//     PATIENT_ID,
//         f.PATIENT_STATUS,
//     CASE p.QTY_DISPENSED WHEN 1 THEN '100 mg' WHEN 2 Then '200 mg' WHEN 3 Then '300 mg' ELSE 'Other' END,
//     p.REFERRAL_DATE_KEY,
//     p.PRIMARY_PLAN_KEY,
//     P.ASOC_PATIENT_ID,
//     P.PATIENT_SOURCE;
    
//     Left Join(VYEPTI_FACT_ASOC_DISPENSE_HQ)
// LOAD 
// PATIENT_KEY,
// // PATIENT_KEY&PATIENT_SOURCE AS F_KEY,
// SHIPMENTS_INFUSIONS;
// SQl Select 
// 		p.PATIENT_KEY,
//         count(distinct INFUSION_DATE_KEY)							SHIPMENTS_INFUSIONS
// from LUINC.FACT_ASOC_DISPENSE p
// inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=p.PRODUCT_GROUP_KEY
// where dp.PRODUCT_NAME='Vyepti'
// AND REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// group by p.PATIENT_KEY;

// Left Join(VYEPTI_FACT_ASOC_DISPENSE_HQ)
// LOAD PATIENT_KEY&DATE_KEY AS F_KEY,
// NEW_UNITS_FLAG;
// SQl Select 
// 		p.PATIENT_KEY,
//         p.INFUSION_DATE_KEY as DATE_KEY,
//         NEW_UNITS_FLAG
// from LUINC.FACT_ASOC_DISPENSE p
//     inner join (
//     select PATIENT_KEY,
//     min(INFUSION_DATE_KEY) as MinDATE,
//     'Y' as NEW_UNITS_FLAG
//     from LUINC.FACT_ASOC_DISPENSE f
//     inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=f.PRODUCT_GROUP_KEY
//     where 
// 		dp.PRODUCT_NAME='Vyepti'
//         AND REPLACE(F.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
//     group by
//     PATIENT_KEY
//     ) t on t.PATIENT_KEY=p.PATIENT_KEY and t.MinDATE=p.INFUSION_DATE_KEY
// where REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// group by 
//  	p.PATIENT_KEY,
//     p.INFUSION_DATE_KEY,
// 	NEW_UNITS_FLAG
// ;


// Store VYEPTI_FACT_ASOC_DISPENSE_HQ into [$(vStorePathFact)/VYEPTI_FACT_ASOC_DISPENSE_HQ.qvd](qvd); Drop Table VYEPTI_FACT_ASOC_DISPENSE_HQ;
// // exit script;
// SELECT PATIENT_SOURCE, SUM(QTY_DISPENSED) AS UNITS FROM LUINC.FACT_ASOC_DISPENSE F
// INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
// WHERE PRODUCT_NAME = 'VYEPTI'
// GROUP BY PATIENT_SOURCE;

// // SELECT TOP 10 * FROM LUINC.FACT_ASOC_DISPENSE;
// EXIT SCRIPT;



// LIB CONNECT TO 'LuUS DW2.0 UAT';

///$tab ASOC CONVERSION
NoConcatenate
FACT:
select f.*, P.PATIENT_ID
from luinc.fact_patient_snapshot f
INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
INNER JOIN LUINC.DIM_PATIENT P ON P.PATIENT_KEY = F.PATIENT_KEY
INNER JOIN luinc.dim_clndr Cal on Cal.Date_key=f.enrollment_date_key
where 
PRODUCT_NAME = 'VYEPTI'
and REPLACE(f.PATIENT_SOURCE, ' ', '') in ('PARAGON', 'VITALCARE', 'OPTIONCARE', 'IVXHEALTH')
and patient_status_detail not in ('ALREADY ON THERAPY WITH SP' ,'BUY AND BILL','OUT OF NETWORK','REDIRECT TO OTHER SP')
AND PATIENT_STATUS NOT IN ('PENDING')
;

Left Join(FACT) 

select DISTINCT F.PATIENT_KEY, F.PATIENT_SOURCE, 'Y' as SP_CONVERSION_FLAG
from luinc.fact_patient_snapshot f
INNER JOIN LUINC.DIM_PRODUCT_GROUP PG ON PG.PRODUCT_GROUP_KEY = F.PRODUCT_GROUP_KEY
INNER JOIN luinc.FACT_ASOC_DISPENSE P on P.Patient_KEY=f.PATIENT_KEY AND REPLACE(f.PATIENT_SOURCE, ' ', '') = REPLACE(P.PATIENT_SOURCE, ' ', '')
INNER JOIN luinc.dim_clndr Cal on Cal.Date_key=f.enrollment_date_key
where 
PRODUCT_NAME = 'VYEPTI'
and REPLACE(f.PATIENT_SOURCE, ' ', '') in ('PARAGON', 'VITALCARE', 'OPTIONCARE', 'IVXHEALTH')
and patient_status_detail not in ('ALREADY ON THERAPY WITH SP' ,'BUY AND BILL','OUT OF NETWORK','REDIRECT TO OTHER SP')
AND PATIENT_STATUS NOT IN ('PENDING')
;


DROP FIELD SOURCE, PATIENT_KEY;
Store FACT into [$(vStorePathFact)/VYEPTI_FACT_ASOC_DISPENSE_CONVERSION_HQ.qvd](qvd); //Drop Table FACT;
exit script;
///$tab ASOC DISPENSE
VYEPTI_FACT_ASOC_DISPENSE_HQ: 
SQl Select 
		p.INFUSION_DATE_KEY												as DATE_KEY,
        CONCAT(P.PATIENT_KEY,replace(P.PATIENT_SOURCE,' ', '')) AS F_KEY,
        P.ASOC_PATIENT_ID,
        replace(P.PATIENT_SOURCE,' ', '') as PATIENT_SOURCE,
        p.REFERRAL_DATE_KEY,
		p.CUSTOMER_KEY,
        p.SF3_TERRITORY_KEY,
        p.PRIMARY_PLAN_KEY AS PLAN_KEY,
        p.PRODUCT_GROUP_KEY,
		p.PATIENT_KEY,
        PATIENT_ID,
		replace(P.PATIENT_SOURCE,' ', '') AS SPECIALTY_PHARMACY,
        f.PATIENT_STATUS,
        CASE p.QTY_DISPENSED WHEN 1 THEN '100 mg' WHEN 2 Then '200 mg' WHEN 3 Then '300 mg' ELSE 'Other' END as 'DOSE', 
        count(distinct p.FACT_KEY)										as SHIPMENTS,
        Sum(p.QTY_DISPENSED) 												as 'Norm. Units',
        'PHARMACY' AS BENEFIT_TYPE
from LUINC.FACT_ASOC_DISPENSE p
	inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=p.PRODUCT_GROUP_KEY
    inner join LUINC.DIM_PATIENT dpt on dpt.PATIENT_KEY=p.PATIENT_KEY
    inner join LUINC.FACT_PATIENT_SNAPSHOT f on f.PATIENT_KEY=p.PATIENT_KEY AND replace(P.PATIENT_SOURCE,' ', '') = replace(f.PATIENT_SOURCE,' ', '')
where dp.PRODUCT_NAME='Vyepti'
and REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
// AND REPLACE(F.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
group by 
 	p.INFUSION_DATE_KEY,
    p.CUSTOMER_KEY,
    p.PRODUCT_GROUP_KEY,
    p.PATIENT_KEY,
    p.SF3_TERRITORY_KEY,
    PATIENT_ID,
        f.PATIENT_STATUS,
    CASE p.QTY_DISPENSED WHEN 1 THEN '100 mg' WHEN 2 Then '200 mg' WHEN 3 Then '300 mg' ELSE 'Other' END,
    p.REFERRAL_DATE_KEY,
    p.PRIMARY_PLAN_KEY,
    P.ASOC_PATIENT_ID,
    P.PATIENT_SOURCE;
    
    Left Join(VYEPTI_FACT_ASOC_DISPENSE_HQ)
LOAD 
PATIENT_KEY&PATIENT_SOURCE AS F_KEY,
SHIPMENTS_INFUSIONS;
SQl Select 
		p.PATIENT_KEY,
        replace(P.PATIENT_SOURCE,' ', '') as PATIENT_SOURCE,
        count(distinct INFUSION_DATE_KEY)							SHIPMENTS_INFUSIONS
from LUINC.FACT_ASOC_DISPENSE p
inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=p.PRODUCT_GROUP_KEY
where dp.PRODUCT_NAME='Vyepti'
AND REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
group by p.PATIENT_KEY, P.PATIENT_SOURCE;

Left Join(VYEPTI_FACT_ASOC_DISPENSE_HQ)
SQl Select 
		p.PATIENT_KEY,
        p.INFUSION_DATE_KEY as DATE_KEY,
        p.PRODUCT_GROUP_KEY,
        replace(P.PATIENT_SOURCE,' ', '') as PATIENT_SOURCE,
        NEW_UNITS_FLAG
from LUINC.FACT_ASOC_DISPENSE p
    inner join (
    select PATIENT_KEY,
    PATIENT_SOURCE,
    min(INFUSION_DATE_KEY) as MinDATE,
    'Y' as NEW_UNITS_FLAG
    from LUINC.FACT_ASOC_DISPENSE f
    inner join LUINC.DIM_PRODUCT_GROUP dp on dp.PRODUCT_GROUP_KEY=f.PRODUCT_GROUP_KEY
    where 
		dp.PRODUCT_NAME='Vyepti'
        AND REPLACE(F.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
    group by
    PATIENT_KEY,
    PATIENT_SOURCE
    ) t on t.PATIENT_KEY=p.PATIENT_KEY and t.MinDATE=p.INFUSION_DATE_KEY AND T.PATIENT_SOURCE = P.PATIENT_SOURCE
where REPLACE(p.patient_source, ' ', '') in ('PARAGON','IVXHEALTH','VITALCARE', 'OPTIONCARE')
group by 
 	p.PATIENT_KEY,
    p.INFUSION_DATE_KEY,
    p.PRODUCT_GROUP_KEY,NEW_UNITS_FLAG,
    P.PATIENT_SOURCE;


Store VYEPTI_FACT_ASOC_DISPENSE_HQ into [$(vStorePathFact)/VYEPTI_FACT_ASOC_DISPENSE_HQ.qvd](qvd); Drop Table VYEPTI_FACT_ASOC_DISPENSE_HQ;
exit script;
///$tab Section 11
 SELECT cp.DATE_KEY
 ,      cp.DATE_TO_KEY
 ,		cp.TERRITORY_KEY as  TERRITORY_KEY
,      Case when cp.TERRITORY_KEY = cpc.SF2_TERRITORY_KEY then 1 else 0 end as MY_PDE_FLAG
 ,cp.CUSTOMER_KEY as UNIQUE_CUSTOMER_KEY
,      cp.CUSTOMER_KEY
,      cp.PLANNED_CALLS as PDE
,	pg.PRODUCT_GROUP_KEY as PRODUCT_GROUP_KEY
, CP.DETAIL_PRIORITY 
, 'FCPR' as SRC
, 'REXULTI' as [LU Product]
FROM   luinc.fact_call_plan cp
INNER JOIN luinc.DIM_CUSTOMER c
  ON c.CUSTOMER_KEY = cp.CUSTOMER_KEY
 AND ISNULL(c.LU_NO_CONTACT_FLAG, 'N') <> 'Y'
  AND ISNULL(c.DATA_STEWARDSHIP_EXCLUSION_FLAG, 'N') <> 'Y'
  AND c.REXULTI_EXCLUSION_IND = 'N'
  AND (c.PSYCH_SPECIALTY_IND = 'Y' or c.REXULTI_SALES_BI_VISIBILITY = 'Y' or CUSTOMER_NAME like 'IQVIA%')
INNER JOIN luinc.DIM_BRAND b
  ON b.BRAND_KEY = cp.BRAND_KEY
  AND b.BRAND = 'REXULTI'
 INNER JOIN luinc.DIM_PRODUCT_GROUP pg
  On pg.PRODUCT_GROUP_KEY = cp.PRODUCT_GROUP_KEY
LEFT OUTER JOIN luinc.FACT_CALL_PLAN_CUSTOMER cpc
  ON cpc.CUSTOMER_KEY = cp.CUSTOMER_KEY
  AND cpc.PRODUCT_GROUP_KEY = cp.PRODUCT_GROUP_KEY
INNER JOIN luinc.DIM_TERRITORY t
  ON t.TERRITORY_KEY = cp.TERRITORY_KEY
  AND t.FRANCHISE = 'PSY'
INNER JOIN luinc.DIM_CLNDR cal
 ON cal.date_key = cp.DATE_KEY
where cp.DATE_TO_KEY>='$(vToday)'
 and ORGANIZATION='LU'
 and SALESFORCE_GROUP_NAME = 'SIERRA'

UNION

SELECT cp.DATE_KEY
,      cp.DATE_TO_KEY
,		   cp.TERRITORY_KEY as TERRITORY_KEY
,      Case when cp.TERRITORY_KEY = cpc.SF2_TERRITORY_KEY then 1 else 0 end as MY_PDE_FLAG
,      cp.CUSTOMER_KEY as UNIQUE_CUSTOMER_KEY
,      cp.CUSTOMER_KEY
,      cp.PLANNED_CALLS as PDE
,      pg.PRODUCT_GROUP_KEY
, CP.DETAIL_PRIORITY 
, 'FCPT' as SRC
, 'TRINTELLIX' as [LU Product]
FROM   LUINC.FACT_CALL_PLAN cp
INNER JOIN luinc.DIM_CUSTOMER c
  ON c.CUSTOMER_KEY = cp.CUSTOMER_KEY
 AND ISNULL(c.LU_NO_CONTACT_FLAG, 'N') <> 'Y'
  AND ISNULL(c.DATA_STEWARDSHIP_EXCLUSION_FLAG, 'N') <> 'Y'
  AND  c.TRINTELLIX_EXCLUSION_IND = 'N'
  AND  (c.PSYCH_SPECIALTY_IND = 'Y' or c.REXULTI_SALES_BI_VISIBILITY = 'Y' or CUSTOMER_NAME like 'IQVIA%')
INNER JOIN luinc.DIM_BRAND b
  ON b.BRAND_KEY = cp.BRAND_KEY
  AND b.BRAND = 'TRINTELLIX'
LEFT OUTER JOIN luinc.FACT_CALL_PLAN_CUSTOMER cpc
  ON cpc.CUSTOMER_KEY = cp.CUSTOMER_KEY
  AND cpc.PRODUCT_GROUP_KEY = cp.PRODUCT_GROUP_KEY
INNER JOIN luinc.DIM_TERRITORY t
  ON t.TERRITORY_KEY = cp.TERRITORY_KEY
  AND t.FRANCHISE = 'PSY'
INNER JOIN luinc.DIM_PRODUCT_GROUP pg
  On pg.PRODUCT_GROUP_KEY = cp.PRODUCT_GROUP_KEY
INNER JOIN luinc.DIM_CLNDR cal
 ON cal.date_key = cp.DATE_KEY
 WHERE ((b.FRANCHISE_CODE = 'PSY') 
   OR (b.FRANCHISE_CODE = 'UNKNOWN' and t.FRANCHISE = 'PSY')) 
   and ORGANIZATION='LU' and cp.DATE_TO_KEY>='$(vToday)';

;
///$tab exit
exit script;
///$tab Section 10
WEEK:
LOAD *;
SELECT DISTINCT A.DATE_WEEK_END , RANK() OVER(ORDER BY A.DATE_WEEK_END) WEEK_NUMBER FROM 
(
SELECT DISTINCT DATE_WEEK_END 
FROM LUINC.DIM_CLNDR CAL
WHERE CAL.DATE_KEY <= '20230412'
AND CAL.DATE_KEY >= '20200401'
)A;
NoConcatenate
MAX_WEEK:
LOAD MAX(WEEK_NUMBER) AS MAX_WEEK_NO
RESIDENT WEEK;

let vNoOfWeeks = PEEK('MAX_WEEK_NO');
TEMP2:
LOAD * Inline
[JUNK];

FOR i = 1 to $(vNoOfWeeks)

MAX_DATE_WEEK_END:
LOAD DATE_WEEK_END AS MAX_DATE_WEEK_END
RESIDENT WEEK
WHERE WEEK_NUMBER = $(i);
let vmaxDateWeekEnd = peek('MAX_DATE_WEEK_END');
Trace '$(vmaxDateWeekEnd)';

Concatenate(TEMP2)
SELECT DISTINCT '$(vmaxDateWeekEnd)' AS DATE_WEEK_END,
SEGMENT_VALUE, 
COUNT(DISTINCT ACCOUNT_KEY) AS COUNT_ACCOUNT_KEY
FROM LUINC.FACT_ACCOUNT_SALES f
inner join LUINC.DIM_PRODUCT_GROUP p on p.PRODUCT_GROUP_KEY = f.PRODUCT_GROUP_KEY
INNER JOIN LUINC.DIM_MB_VYEPTI_SA SA on SA.PRODUCT_GROUP_KEY=f.PRODUCT_GROUP_KEY
INNER JOIN LUINC.DIM_CLNDR CAL ON CAL.DATE_KEY = F.DATE_KEY
LEFT join LUINC.DIM_CUSTOMER c on c.CUSTOMER_KEY = f.SHIP_FROM_CUSTOMER_KEY
inner join LUINC.DIM_CUSTOMER cust on cust.CUSTOMER_KEY = f.CUSTOMER_KEY
LEFT JOIN LUINC.FACT_ZIP_TO_TERRITORY_FRS ZT on ZT.ZIP=F.CUSTOMER_ZIP and CURRENT_IND='Y'
INNER JOIN LUINC.FACT_CUSTOMER_SEGMENTATION CS ON CS.CUSTOMER_KEY = F.ACCOUNT_KEY
where p.BRAND = 'VYEPTI'
and SEGMENT_TYPE = 'ACCOUNT SEGMENT'
AND SEGMENT_VALUE IN ('1A', '1B', '3A', '3B')
AND CS.CURRENT_IND = 'Y'
AND DATE_WEEK_END <= '$(vmaxDateWeekEnd)'
GROUP BY SEGMENT_VALUE;


next 

DROP FIELD JUNK FROM TEMP2;
EXIT SCRIPT;