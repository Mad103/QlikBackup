///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$ ###0.00;-$ ###0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';


///$tab Variable Declaration
LIB CONNECT TO 'LuUS_DATA:SNOWFLAKE_LuUS_BI_Reader';

$(Must_Include='lib://LuUS_DATA:LuUS_SharePoint/Shared Documents/Qlik Sense Data Files/Include/Qlik Cloud/FolderConnections.txt');

SET vSF = '_SF';

LET vSpace=if(upper(GetSysAttr('spaceType'))='SHARED' or (GetSysAttr('spaceType'))='','_DEV');


///$tab Product Extract
NoConcatenate
DimProd:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    PRODUCT_GROUP_CODE,
    PRODUCT_GROUP_NAME as PRODUCT_GROUP,
   
    BRAND as PRODUCT_NAME,
    BRAND_CODE,
    BRAND,
    MARKET_CODE,
    'Place Holder' as MARKET,
    'Place Holder' as MARKET_GROUP_CODE,
    'Place Holder' as MARKET_GROUP,
    MARKET_NAME,//New in SF
    'Place Holder' as FRANCHISE_CODE,
    'Place Holder' as FRANCHISE,
    STRENGTH_UNITS as PRODUCT_STRENGTH,
    DAYS_OF_THERAPY,
    FACTOR,
    'Place Holder' as PRODUCT_LAUNCH_DATE,
    BRAND_LU_PRODUCT_FLAG as LU_PRODUCT_FLAG,
    BRAND_LU_GENERIC_FLAG as GENERIC_AVAILABILITY_IND,
    PGN_PRODUCT_FLAG
FROM "LUNDBECK_DW"."COMMON".PRODUCTS;
STORE DimProd into [$(vQSBIE_ExtractQVD_Dimension)/DIM_PRODUCT_GROUP$(vSpace)$(vSF).qvd](qvd);
Drop Table DimProd;

NoConcatenate
DimAbM:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_MAINTENA_SA;
STORE DimAbM into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_ABILIFY_MAINTENA_SA$(vSpace)$(vSF).qvd](qvd);
Drop Table DimAbM;

NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_ASIMTUFII_SA;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_ABILIFY_ASIMTUFII_SA$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;



NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_SA;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_REXULTI_SA$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_AAD_SA;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_REXULTI_AAD_SA$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

///////////////////////////////////////MDKU
NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM LUNDBECK_DW.SANDBOX.MB_REXULTI_AAD_SA;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_REXULTI_AAD_SA_DUMMY$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

////////////////////////////////////////////////


NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_TRINTELLIX_SA;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_TRINTELLIX_SA$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_ASIMTUFII_IC;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_ABILIFY_ASIMTUFII_IC$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_MAINTENA_IC;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_ABILIFY_MAINTENA_IC$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;


NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_IC;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_REXULTI_IC$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_AAD_IC;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_REXULTI_AAD_IC$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_TRINTELLIX_IC;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_TRINTELLIX_IC$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;



NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_MAINTENA_MAI;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_ABILIFY_MAINTENA_MAI$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;


NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_MAI;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_REXULTI_MAI$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;


NoConcatenate
Dimension:
Select
    PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
    MARKET_BASKET_NAME,
    MARKET_BASKET_DESC,
    MARKET_BASKET_GROUP
FROM "LUNDBECK_DW"."COMMON".MB_TRINTELLIX_MAI;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MB_TRINTELLIX_MAI$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

MB_REXULTI_MOLECULE_SA:
SELECT
	PRODUCT_GROUP_KEY,
    'REXULTI' as MARKET_BASKET_NAME,
    MARKET_BASKET_DESC
FROM (
      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
          MARKET_BASKET_DESC
      FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_SA

      union

      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
          MARKET_BASKET_DESC
      FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_AAD_SA
      
     );
     
store MB_REXULTI_MOLECULE_SA into [$(vQSBIE_ExtractQVD_Dimension)/MB_REXULTI_MOLECULE_SA$(vSpace)$(vSF).qvd](qvd);
DROP TABLE MB_REXULTI_MOLECULE_SA;


MB_REXULTI_MOLECULE_IC:
SELECT
	PRODUCT_GROUP_KEY,
    'REXULTI' as MARKET_BASKET_NAME,
    'IC' as MARKET_BASKET_DESC
FROM (
      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY
      FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_IC

      union

      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY
      FROM "LUNDBECK_DW"."COMMON".MB_REXULTI_AAD_IC
      
     );
     
store MB_REXULTI_MOLECULE_IC into [$(vQSBIE_ExtractQVD_Dimension)/MB_REXULTI_MOLECULE_IC$(vSpace)$(vSF).qvd](qvd);
DROP TABLE MB_REXULTI_MOLECULE_IC;

MB_ABILIFY_MOLECULE_SA:
SELECT
	PRODUCT_GROUP_KEY,
    'ABILIFY LAI FRANCHISE' as MARKET_BASKET_NAME,
    MARKET_BASKET_DESC
FROM (
      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
          MARKET_BASKET_DESC
      FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_MAINTENA_SA

      union

      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY,
          MARKET_BASKET_DESC
      FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_ASIMTUFII_SA
      
     );
     
store MB_ABILIFY_MOLECULE_SA into [$(vQSBIE_ExtractQVD_Dimension)/MB_ABILIFY_MOLECULE_SA$(vSpace)$(vSF).qvd](qvd);
DROP TABLE MB_ABILIFY_MOLECULE_SA;

MB_ABILIFY_MOLECULE_IC:
SELECT
	PRODUCT_GROUP_KEY,
    'ABILIFY LAI FRANCHISE' as MARKET_BASKET_NAME,
    'IC' as MARKET_BASKET_DESC
FROM (
      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY
      FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_MAINTENA_IC

      union

      Select
          PRODUCT_GROUP_CODE as PRODUCT_GROUP_KEY
      FROM "LUNDBECK_DW"."COMMON".MB_ABILIFY_ASIMTUFII_IC
      
     );
     
store MB_ABILIFY_MOLECULE_IC into [$(vQSBIE_ExtractQVD_Dimension)/MB_ABILIFY_MOLECULE_IC$(vSpace)$(vSF).qvd](qvd);
DROP TABLE MB_ABILIFY_MOLECULE_IC;

NoConcatenate
Dimension:
Select
    BRAND_CODE as BRAND_KEY,
    BRAND_CODE,
    BRAND,
    MARKET_CODE,
    MARKET_NAME as MARKET,
    MARKET_CODE as MARKET_GROUP_CODE,
    'Place Holder' as MARKET_GROUP,
    'Place Holder' as FRANCHISE_CODE,
    'Place Holder' as FRANCHISE,
    BRAND_LU_GENERIC_FLAG as GENERIC_AVAILABILITY_IND,
    BRAND_LU_GENERIC_FLAG
FROM "LUNDBECK_DW"."COMMON".PRODUCTS;
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_BRAND$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;


///$tab Max Call Date
NoConcatenate
[Call Activity]:
SQL SELECT Max(CALL_DATE_KEY) as ENTERD_DATE,
'Call Activity' as "Table_Flag"
FROM "LUNDBECK_DW"."ANALYTICS"."CALL_ACTIVITY_LU_SF";

Store [Call Activity] into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MAX_CALL_ENTERD_DATE$(vSpace)$(vSF).qvd](qvd);

Drop Table [Call Activity];


///$tab Dimension Full Load
NoConcatenate
DimAgeGroup:
select 

    AGE_GROUP as AGE_GROUP_KEY,
    AGE_GROUP,
    ABILIFY_MAINTENA_INCLUSION_IND,
    TRINTELLIX_INCLUSION_IND,
    REXULTI_INCLUSION_IND,
    VYEPTI_INCLUSION_IND,
    REXULTI_SCZ_INCLUSION_IND,
    REXULTI_MDD_INCLUSION_IND,
    REXULTI_AADAD_INCLUSION_IND AS REXULTI_AAD_INCLUSION_IND
FROM LUNDBECK_DW.COMMON.AGE_GROUP_INCLUSIONS; 
STORE DimAgeGroup into [$(vQSBIE_ExtractQVD_Dimension)/DIM_AGE_GROUP$(vSpace)$(vSF).qvd](qvd);
Drop Table DimAgeGroup;


NoConcatenate
DimPlan:
select
    PLAN_ID as PLAN_KEY,
    PLAN_ID,
    PLAN_NAME,
    PLAN_TYPE,
    PAYER_ID,
    PAYER_NAME,
    IFNULL(PAYMENT_TYPE,'UNK') AS PAYMENT_TYPE,
    PAYMENT_SUB_TYPE,
    PBM_ID,
    PBM_NAME,
    'Place Holder' as FORMULARY_MGMT_TYPE,
    FORMULARY_MGMT_DESC,
//     BOOK_OF_BUSINESS_ID,
//     BOOK_OF_BUSINESS,
    'Place Holder' as PRIMARY_STATE,
    'Place Holder' as PRIMARY_STATE_ABBREV
FROM "LUNDBECK_DW"."COMMON"."PLANS_AND_PAYERS"; 
STORE DimPlan into [$(vQSBIE_ExtractQVD_Dimension)/DIM_PLAN$(vSpace)$(vSF).qvd](qvd);
Drop Table DimPlan;

NoConcatenate///check in p&e, remove if not needed
Dimension:
Select
    TERRITORY_ID as MM_NATIONAL_TERRITORY_KEY,
    TERRITORY_ID,
    TERRITORY_NAME,
    NAM_FIRST_NAME,
    NAM_LAST_NAME,
    NAM_FULL_NAME,
    NAM_AD_ID,
    NATIONAL_AREA_ID,
    NATIONAL_AREA_NAME,
    NATIONAL_DIR_FIRST_NAME,
    NATIONAL_DIR_LAST_NAME,
    NATIONAL_DIR_FULL_NAME,
    NATIONAL_DIR_AD_ID,
    NATIONAL_MM_ID,
    NATIONAL_MM_NAME,
    VP_MM_FIRST_NAME,
    VP_MM_LAST_NAME,
    VP_MM_FULL_NAME,
    VP_MM_AD_ID
FROM "LUNDBECK_DW"."COMMON".PAD_TERRITORY;    
STORE Dimension into [$(vQSBIE_ExtractQVD_Dimension)/DIM_MM_NATIONAL_TERRITORY$(vSpace)$(vSF).qvd](qvd);
Drop Table Dimension;

NoConcatenate
DimCustomer:
Select
    LUNDBECK_ID as CUSTOMER_KEY,
    LUNDBECK_ID,
    ORGANIZATION_NAME,
    CUSTOMER_FIRST_NAME,
    CUSTOMER_MIDDLE_NAME,
    CUSTOMER_LAST_NAME,
    CUSTOMER_NAME,
    'Place Holder' as CUSTOMER_ALIAS,
    CUSTOMER_ADDR1,
    CUSTOMER_ADDR2,
    CUSTOMER_CITY,
    CUSTOMER_STATE,
    CUSTOMER_STATE_ABBREV,
    CUSTOMER_ZIP,
    CUSTOMER_ADDR_LATITUDE,
    CUSTOMER_ADDR_LONGITUDE,
    CUSTOMER_PHONE_TYPE,
    CUSTOMER_PHONE,
    CUSTOMER_PHONE_EXT,
    CUSTOMER_STATUS,
    CUSTOMER_STATUS_REASON,
    CUSTOMER_TYPE,
    CUSTOMER_SUB_TYPE_CD,
    CUSTOMER_SUB_TYPE_NAME,
    CUSTOMER_DETAIL_TYPE_CODE,
    CUSTOMER_DETAIL_TYPE_NAME as CUSTOMER_DETAIL_TYPE,
    'Place Holder' as FACILITY_TYPE,
    NPI,
    ME_ID,
    SPECIALTY,
    DATA_STEWARDSHIP_EXCLUSION_FLAG,
    LU_NO_CONTACT_FLAG,
    NO_CONTACT_FLAG,
    PDRP_IND,
    PSYCH_SPECIALTY_IND,
    NEURO_SPECIALTY_IND,
    CARDIO_SPECIALTY_IND,
    PRIMARY_SPECIALTY_IND as PRIMARY_CARE_SPECIALTY_IND,
    MID_LEVEL_PRACTITIONER_IND,
    'Place Holder' as NORTHERA_SPECIALTY_GROUP,
    ABILIFY_MAINTENA_EXCLUSION_IND,
   CARNEXIV_EXCLUSION_IND,
    NORTHERA_EXCLUSION_IND,
    ONFI_EXCLUSION_IND,
    REXULTI_EXCLUSION_IND,
   SABRIL_EXCLUSION_IND,
    TRINTELLIX_EXCLUSION_IND,
   XENAZINE_EXCLUSION_IND,
   VYEPTI_EXCLUSION_IND,
    ABILIFY_MAINTENA_RETAIL_HCO_EXCL_IND,
    REXULTI_RETAIL_HCO_EXCL_IND,
    TRINTELLIX_RETAIL_HCO_EXCL_IND,
   KEY_OPINION_LEADER_FLAG,
    HIN,
   EPILEPSY_CENTER,
   HUNTINGTONS_STUDY_GROUP,
    LIS_TARGET,
    PCT_LIS_CLAIMS,
    'Place Holder' as NORTHERA_DUAL_ELIGIBLE,
    'Place Holder' as PCT_NOR_DUAL_ELIG_CLAIMS,
    'Place Holder' as NOR_DUAL_ELIG_PAT_SAMPLE_COUNT,
    'Place Holder' as NOR_DUAL_ELIG_PAT_SAMPLE_DESC,
   INFUSION_CAPABLE,
   BUY_AND_BILL,
   VYEPTI_PREFERRED_ACCOUNT,
    MSA,
    CBSA,
    VEEVA_CUSTOMER_ID,
    REXULTI_SALES_BI_VISIBILITY,
    ABILITY_TO_DETAIL,
   INFUSION_LOCATION,
    HOME_INFUSION,
    DEMAND_GENERATING_SITE,
    LEAD_GENERATED_DATE,//New in SF
    LEAD_GENERATED,//New in SF
    LEAD_STATUS_DATE,//New in SF
    LEAD_STATUS,//New in SF
   'Place Holder' as PRESCRIPTIVE_AUTHORITY_IND,
    DMA,
   'Place Holder' as VYEPTI_ACCOUNT_TYPE,
    'Place Holder' as ASOC_GROUP,
    REXULTI_SCZ_EXCLUSION_IND,
    REXULTI_MDD_EXCLUSION_IND,
    REXULTI_AAD_EXCLUSION_IND,
    REXULTI_RETAIL_HCO_SCZ_EXCL_IND,
    REXULTI_RETAIL_HCO_AAD_EXCL_IND,
    REXULTI_RETAIL_HCO_MDD_EXCL_IND,
    ASIMTUFII_GREEN_ACCESS,
    ASIMTUFII_YELLOW_ACCESS,
    ASIMTUFII_RED_ACCESS,
    'Place Holder' as VYEPTI_PULL_THROUGH_FLAG,
    'Place Holder' as VYEPTI_UHC_FLAG,
    'Place Holder' as VYEPTI_AETNA_FLAG
FROM "LUNDBECK_DW"."COMMON"."CUSTOMERS";
STORE DimCustomer into [$(vQSBIE_ExtractQVD_Dimension)/DIM_CUSTOMER$(vSpace)$(vSF).qvd](qvd);
Drop Table DimCustomer;



///$tab Call Plan Flag
// We move the select statement to the top, and remove the with clauses, by inserting them directly, and joining together one by one.

Call_Plan_Flag:
SQL SELECT DISTINCT
    U.CUSTOMER_KEY,
    U.TERRITORY_KEY,
    CALL_PLAN_DATE_KEY,
    "Lu_Call_Plan_Target_Abilify_Maintena",
    "Lu_Call_Plan_Target_Rexulti",
    "Lu_P1_Call_Plan_Target_Rexulti",
    "Lu_Call_Plan_Target_Trintellix",
    "Lu_Call_Plan_Target_Northera",
    "Lu_Call_Plan_Target_Vyepti",
    "Lu_Call_Plan_Target_Abilify_LAI_Franchise",
    "Lu_Call_Plan_Target_RexultiAADAD"
FROM (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        START_DATE_KEY as CALL_PLAN_DATE_KEY
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P ON P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND = 'Y' 
    AND CP.PRODUCT_GROUP_NAME IN ('ABILIFY MAINTENA', 'REXULTI','REXULTI MDD','REXULTI AADAD', 'TRINTELLIX', 'NORTHERA', 'VYEPTI','ABILIFY LAI FRANCHISE')
) U
LEFT JOIN (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        'Y' as "Lu_Call_Plan_Target_Abilify_Maintena"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P ON P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND = 'Y' AND CP.PRODUCT_GROUP_NAME IN ('ABILIFY MAINTENA')
) A ON A.CUSTOMER_KEY = U.CUSTOMER_KEY AND A.TERRITORY_KEY = U.TERRITORY_KEY
LEFT JOIN (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        'Y' as "Lu_Call_Plan_Target_Rexulti"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P ON P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND = 'Y' AND CP.PRODUCT_GROUP_NAME IN ('REXULTI','REXULTI MDD')
) B ON B.CUSTOMER_KEY = U.CUSTOMER_KEY AND B.TERRITORY_KEY = U.TERRITORY_KEY
LEFT JOIN (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        'Y' as "Lu_P1_Call_Plan_Target_Rexulti"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P ON P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND = 'Y' AND CP.PRODUCT_GROUP_NAME IN ('REXULTI','REXULTI MDD') AND CP.DETAIL_PRIORITY = 1
) C ON C.CUSTOMER_KEY = U.CUSTOMER_KEY AND C.TERRITORY_KEY = U.TERRITORY_KEY
LEFT JOIN (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        'Y' as "Lu_Call_Plan_Target_Trintellix"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P ON P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND = 'Y' AND CP.PRODUCT_GROUP_NAME IN ('TRINTELLIX')
) D ON D.CUSTOMER_KEY = U.CUSTOMER_KEY AND D.TERRITORY_KEY = U.TERRITORY_KEY
LEFT JOIN (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        'Y' as "Lu_Call_Plan_Target_Northera"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
// 	INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P on P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
	where CP.CURRENT_IND='Y' and CP.PRODUCT_GROUP_NAME IN ('NORTHERA')
) E ON E.CUSTOMER_KEY=U.CUSTOMER_KEY and E.TERRITORY_KEY=U.TERRITORY_KEY
LEFT JOIN (
    SELECT DISTINCT 
    	LUNDBECK_ID AS CUSTOMER_KEY, 
        TERRITORY_ID AS TERRITORY_KEY, 
        'Y' as "Lu_Call_Plan_Target_Vyepti"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P on P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND='Y' AND CP.PRODUCT_GROUP_NAME IN ('VYEPTI')
) F ON F.CUSTOMER_KEY=U.CUSTOMER_KEY and F.TERRITORY_KEY=U.TERRITORY_KEY
LEFT JOIN (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        'Y' as "Lu_Call_Plan_Target_Abilify_LAI_Franchise"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P ON P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND = 'Y' AND CP.PRODUCT_GROUP_NAME IN ('ABILIFY LAI FRANCHISE')
) G ON G.CUSTOMER_KEY = U.CUSTOMER_KEY AND G.TERRITORY_KEY = U.TERRITORY_KEY
LEFT JOIN (
    SELECT DISTINCT
        LUNDBECK_ID AS CUSTOMER_KEY,
        TERRITORY_ID AS TERRITORY_KEY,
        'Y' as "Lu_Call_Plan_Target_RexultiAADAD"
    FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" CP
//     INNER JOIN "LUNDBECK_DW"."COMMON".PRODUCTS P ON P.PRODUCT_GROUP_NAME = CP.PRODUCT_GROUP_NAME
    WHERE CP.CURRENT_IND = 'Y' AND CP.PRODUCT_GROUP_NAME IN ('REXULTI AADAD')
) H ON H.CUSTOMER_KEY = U.CUSTOMER_KEY AND H.TERRITORY_KEY = U.TERRITORY_KEY
;


Store Call_Plan_Flag into [$(vQSBIE_ExtractQVD_Dimension)/DIM_CALL_PLAN_FLAGS$(vSpace)$(vSF).qvd](qvd);

drop Table Call_Plan_Flag;
///$tab Territory
NoConcatenate
DimTerritory:
Select
    TERRITORY_ID as TERRITORY_KEY,
    TERRITORY_ID,
    TERRITORY_NAME,
    AREA_ID,
    AREA_NAME,
    REGION_ID,
    REGION_NAME,
    FIRST_NAME as ACCT_MGR_FIRST_NAME,
    LAST_NAME as ACCT_MGR_LAST_NAME,
    concat(FIRST_NAME,' ',LAST_NAME) as ACCT_MGR_FULL_NAME,
    AD_ID as ACCT_MGR_AD_ID,
    AREA_FIRST_NAME as AREA_MGR_FIRST_NAME,
    AREA_LAST_NAME as AREA_MGR_LAST_NAME,
    concat(AREA_FIRST_NAME,' ',AREA_LAST_NAME) as AREA_MGR_FULL_NAME,
    AREA_AD_ID as AREA_MGR_AD_ID,
    REGION_FIRST_NAME as RGN_MGR_FIRST_NAME,
    REGION_LAST_NAME as RGN_MGR_LAST_NAME,
    concat(REGION_FIRST_NAME,' ',REGION_LAST_NAME) as RGN_MGR_FULL_NAME,
    REGION_AD_ID as RGN_MGR_AD_ID,
    FRANCHISE,
    FRANCHISE as SALESFORCE_GROUP,
    SALESFORCE_NAME as SALESFORCE_GROUP_NAME,
    AREA_SALESFORCE_NAME as AREA_GROUP_NAME,
    'LU' as ORGANIZATION,
    EFF_DATE as TERR_EFF_DATE,
    EXP_DATE as TERR_EXP_DATE,
    CURRENT_IND as TERR_CURRENT_IND
FROM "LUNDBECK_DW"."COMMON"."TERRITORY";
STORE DimTerritory into [$(vQSBIE_ExtractQVD_Dimension)/DIM_TERRITORY$(vSpace)$(vSF).qvd](qvd);
Drop Table DimTerritory;

DimAlliance:
Select
    TERRITORY_ID as TERRITORY_KEY,
    TERRITORY_ID,
    TERRITORY_NAME,
    AREA_ID,
    AREA_NAME,
    REGION_ID,
    REGION_NAME,
    FIRST_NAME as ACCT_MGR_FIRST_NAME,
    LAST_NAME as ACCT_MGR_LAST_NAME,
    concat(FIRST_NAME,' ',LAST_NAME) as ACCT_MGR_FULL_NAME,
    AD_ID as ACCT_MGR_AD_ID,
    AREA_FIRST_NAME as AREA_MGR_FIRST_NAME,
    AREA_LAST_NAME as AREA_MGR_LAST_NAME,
    concat(AREA_FIRST_NAME,' ',AREA_LAST_NAME) as AREA_MGR_FULL_NAME,
    AREA_AD_ID as AREA_MGR_AD_ID,
    REGION_FIRST_NAME as RGN_MGR_FIRST_NAME,
    REGION_LAST_NAME as RGN_MGR_LAST_NAME,
    concat(REGION_FIRST_NAME,' ',REGION_LAST_NAME) as RGN_MGR_FULL_NAME,
    REGION_AD_ID as RGN_MGR_AD_ID,
    FRANCHISE,
    FRANCHISE as SALESFORCE_GROUP,
    SALESFORCE_NAME as SALESFORCE_GROUP_NAME,
    AREA_SALESFORCE_NAME as AREA_GROUP_NAME,
    'LU' as ORGANIZATION,
    EFF_DATE as TERR_EFF_DATE,
    EXP_DATE as TERR_EXP_DATE,
    CURRENT_IND as TERR_CURRENT_IND
FROM "LUNDBECK_DW"."COMMON"."TERRITORY"

union 
Select
    TERRITORY_ID as TERRITORY_KEY,
    TERRITORY_ID,
    TERRITORY_NAME,
    AREA_ID,
    AREA_NAME,
    REGION_ID,
    REGION_NAME,
    FIRST_NAME as ACCT_MGR_FIRST_NAME,
    LAST_NAME as ACCT_MGR_LAST_NAME,
    concat(FIRST_NAME,' ',LAST_NAME) as ACCT_MGR_FULL_NAME,
    '' as ACCT_MGR_AD_ID,
    AREA_FIRST_NAME as AREA_MGR_FIRST_NAME,
    AREA_LAST_NAME as AREA_MGR_LAST_NAME,
    concat(AREA_FIRST_NAME,' ',AREA_LAST_NAME) as AREA_MGR_FULL_NAME,
    '' as AREA_MGR_AD_ID,
    REGION_FIRST_NAME as RGN_MGR_FIRST_NAME,
    REGION_LAST_NAME as RGN_MGR_LAST_NAME,
    concat(REGION_FIRST_NAME,' ',REGION_LAST_NAME) as RGN_MGR_FULL_NAME,
    '' as RGN_MGR_AD_ID,
    '' AS FRANCHISE,
    '' as SALESFORCE_GROUP,
    SALESFORCE_NAME as SALESFORCE_GROUP_NAME,
    '' as AREA_GROUP_NAME,
    'OTSUKA' as ORGANIZATION,
    EFF_DATE as TERR_EFF_DATE,
    EXP_DATE as TERR_EXP_DATE,
    CURRENT_IND as TERR_CURRENT_IND
FROM "LUNDBECK_DW"."COMMON"."OTS_TERRITORY"

union 

Select
    TERRITORY_ID as TERRITORY_KEY,
    TERRITORY_ID,
    TERRITORY_NAME,
    AREA_ID,
    AREA_NAME,
    REGION_ID,
    REGION_NAME,
    FIRST_NAME as ACCT_MGR_FIRST_NAME,
    LAST_NAME as ACCT_MGR_LAST_NAME,
    concat(FIRST_NAME,' ',LAST_NAME) as ACCT_MGR_FULL_NAME,
    '' as ACCT_MGR_AD_ID,
    AREA_FIRST_NAME as AREA_MGR_FIRST_NAME,
    AREA_LAST_NAME as AREA_MGR_LAST_NAME,
    concat(AREA_FIRST_NAME,' ',AREA_LAST_NAME) as AREA_MGR_FULL_NAME,
    '' as AREA_MGR_AD_ID,
    REGION_FIRST_NAME as RGN_MGR_FIRST_NAME,
    REGION_LAST_NAME as RGN_MGR_LAST_NAME,
    concat(REGION_FIRST_NAME,' ',REGION_LAST_NAME) as RGN_MGR_FULL_NAME,
    '' as RGN_MGR_AD_ID,
    '' AS FRANCHISE,
    '' as SALESFORCE_GROUP,
    SALESFORCE_NAME as SALESFORCE_GROUP_NAME,
    '' as AREA_GROUP_NAME,
    'TAKEDA' as ORGANIZATION,
    EFF_DATE as TERR_EFF_DATE,
    EXP_DATE as TERR_EXP_DATE,
    CURRENT_IND as TERR_CURRENT_IND
FROM "LUNDBECK_DW"."COMMON"."TAK_TERRITORY"
;
STORE DimAlliance into [$(vQSBIE_ExtractQVD_Dimension)/DIM_TERRITORY_ALLIANCE$(vSpace)$(vSF).qvd](qvd);
Drop Table DimAlliance;

///$tab Territory Sanpshot
Territory_Snap:
// Load AutoNumberHash256(DATE_KEY,TERRITORY_KEY) as TERR_DATE_KEY,
//     DATE_KEY,
//     TERRITORY_KEY,
// 	If(Match(SALESFORCE_GROUP,'APEX','PINNACLE','APEX CSO','PINNACLE CSO'),'APEX/APEX CSO/PINNACLE/PINNACLE CSO',SALESFORCE_GROUP) as SALESFORCE_GROUP_SNAP,
//     'Total' as SALESFORCE_GROUP_SNAP_TTL,
//     AD_ID,
//     EFF_DATE,
//     EXP_DATE;
// SQL Select Distinct DATE_KEY, 
// 	TERR_NAME, 
//     f.SALESFORCE_GROUP,
//     AD_ID, 
//     TERRITORY_KEY,
//     Convert(Char(8),EFF_DATE,112) as EFF_DATE,
//     Convert(Char(8),TERR_EXP_DATE,112) as EXP_DATE
// from DATA_STAGING.HR.DYNAMIC_ROSTER_REPORT
// INNER JOIN "LUNDBECK_DW"."COMMON"."CALENDAR" c on c.DATE_KEY>=Convert(Char(8),EFF_DATE,112) and c.DATE_KEY<=Convert(Char(8),EXP_DATE,112)  and DATE_KEY>=20200101
// INNER JOIN "LUNDBECK_DW"."COMMON"."TERRITORY" t on t.TERRITORY_ID = f.TERR_ID
// Where f.SALESFORCE_GROUP in ('APEX','PINNACLE','MERIDIAN','SUMMIT','SIERRA','APEX CSO','PINNACLE CSO') 
// and Convert(Char(8),EXP_DATE,112)>=20200101
// and AD_ID in (Select DIstinct ACCT_MGR_AD_ID From "LUNDBECK_DW"."COMMON"."TERRITORY" Where CURRENT_IND='Y');

// Concatenate(Territory_Snap)
Load AutoNumberHash256(DATE_KEY,TERRITORY_KEY) as TERR_DATE_KEY,
	DATE_KEY,
    TERRITORY_KEY,
	If(Match(SALESFORCE_GROUP,'APEX','PINNACLE','APEX CSO','PINNACLE CSO'),'APEX/APEX CSO/PINNACLE/PINNACLE CSO',SALESFORCE_GROUP) as SALESFORCE_GROUP_SNAP,
    'Total' as SALESFORCE_GROUP_SNAP_TTL,
    AD_ID,
    EFF_DATE,
    EXP_DATE;
Select Distinct DATE_KEY, 
	TERRITORY_NAME as TERR_NAME, 
    SALESFORCE_NAME as SALESFORCE_GROUP,
    AD_ID, 
    TERRITORY_ID,
    TO_VARCHAR(EFF_DATE,'YYYYMMDD') as EFF_DATE,
    TO_VARCHAR(EXP_DATE,'YYYYMMDD') as EXP_DATE,
    TERRITORY_ID as TERRITORY_KEY
from  "LUNDBECK_DW"."COMMON"."TERRITORY"
INNER JOIN "LUNDBECK_DW"."COMMON"."CALENDAR"c on c.DATE_KEY>=TO_VARCHAR(EFF_DATE , 'YYYYMMDD') and c.DATE_KEY<=TO_VARCHAR(getDate() , 'YYYYMMDD')  and DATE_KEY>=20200101
Where SALESFORCE_NAME in ('APEX','PINNACLE','MERIDIAN','SUMMIT','SIERRA','APEX CSO','PINNACLE CSO') 
 and  CURRENT_IND='Y';

Left Join(Territory_Snap)
SQL Select Distinct
     AD_ID,
    1 as CURRENT_IND_FLAG
FROM "LUNDBECK_DW"."COMMON"."TERRITORY"
where CURRENT_IND='Y';

Store Territory_Snap into [$(vQSBIE_ExtractQVD_Dimension)/TERRITORY_SNAPSHOT$(vSpace)$(vSF).qvd](qvd);

DROP TABLE Territory_Snap;
///$tab Calendar
NoConcatenate
DimTable:
LOAD
	DATE_KEY as DATE_KEY,
    DATE(DATE_FULL, 'yyyy-MM-dd') AS DATE_FULL,
    DATE_NAME,
    DATE_NAME_LONG,
    DAY_OF_WEEK,
    DAY_OF_WEEK_LONG_NAME,
    DAY_OF_WEEK_SHORT_NAME,
    DAY_OF_MONTH,
    DAY_OF_YEAR,
    FLAG_HOLIDAY,
    FLAG_WEEKDAY,
    FLAG_LAST_DAY_IN_MONTH,
    WEEK_OF_MONTH,
    WEEK_OF_YEAR,
    DATE(DATE_WEEK_START, 'yyyy-MM-dd') AS DATE_WEEK_START,
    DATE_WEEK_START_KEY,
    DATE(DATE_WEEK_END, 'yyyy-MM-dd') AS DATE_WEEK_END,
    DATE_WEEK_END_KEY,
    SPLIT_WEEK_KEY,
    SF_TRIMESTER,
    SF_QUARTER,
    SF_YEAR,
    SF_TRIMESTER_WEEK,
    SF_WEEK_OF_YEAR,
    SF_RELATIVE_TRIMESTER,
    SF_RELATIVE_WEEK,
    MONTH_OF_YEAR,
    MONTH_OF_YEAR_LONG_NAME,
    MONTH_OF_YEAR_SHORT_NAME,
    MONTH_ABBREV_YEAR,
    CALENDAR_QUARTER,
    CALENDAR_TRIMESTER,
    CALENDAR_YEAR,
    NUM#(CALENDAR_YEAR_MONTH) AS CALENDAR_YEAR_MONTH,
    CALENDAR_YEAR_QUARTER,
    SF_TRIMESTER as CALENDAR_YEAR_TRIMESTER,
    FISCAL_MONTH_OF_YEAR,
    FISCAL_QUARTER,
    FISCAL_YEAR,
    FISCAL_YEAR_MONTH,
    FISCAL_YEAR_QUARTER,
    DST_STD_TIME_ZONE,
    DW_DATE_LOADED,
    DW_USER_LOADED,
    DW_DATA_LINEAGE,
    DW_JOB_LOADED,
    DW_DATE_UPDATED;
SQL Select 
    DATE_KEY,
    DATE_FULL,
    DATE_NAME,
    DATE_NAME_LONG,
    DAY_OF_WEEK,
    DAY_OF_WEEK_LONG_NAME,
    DAY_OF_WEEK_SHORT_NAME,
    DAY_OF_MONTH,
    DAY_OF_YEAR,
    FLAG_LU_HOLIDAY as FLAG_HOLIDAY,
    FLAG_WEEKDAY,
    FLAG_LAST_DAY_IN_MONTH,
    WEEK_OF_MONTH,
    WEEK_OF_YEAR,
    DATE_WEEK_START,
    DATE_WEEK_START_KEY,
    DATE_WEEK_END,
    DATE_WEEK_END_KEY,
    SPLIT_WEEK_KEY,
    SF_TRIMESTER,
    SF_QUARTER,
    SF_YEAR,
    SF_TRIMESTER_WEEK,
    SF_WEEK_OF_YEAR,
    SF_RELATIVE_TRIMESTER,
    SF_RELATIVE_WEEK,
    MONTH_OF_YEAR,
    MONTH_OF_YEAR_LONG_NAME,
    MONTH_OF_YEAR_SHORT_NAME,
    MONTH_ABBREV_YEAR,
    CALENDAR_QUARTER,
    CALENDAR_TRIMESTER,
    CALENDAR_YEAR,
    CALENDAR_YEAR_MONTH as CALENDAR_YEAR_MONTH,
    CALENDAR_YEAR_QUARTER,
    SF_TRIMESTER as CALENDAR_YEAR_TRIMESTER,
    FISCAL_MONTH_OF_YEAR,
    FISCAL_QUARTER,
    FISCAL_YEAR,
    FISCAL_YEAR_MONTH,
    FISCAL_YEAR_QUARTER,
    DST_STD_TIME_ZONE,
    DW_DATE_LOADED,
    DW_USER_LOADED,
    DW_DATA_LINEAGE,
    DW_JOB_LOADED,
    DW_DATE_UPDATED
FROM "LUNDBECK_DW"."COMMON"."CALENDAR";


STORE DimTable into [$(vQSBIE_ExtractQVD_Dimension)/DIM_CLNDR$(vSpace)$(vSF).qvd](qvd);

Drop Table DimTable;
///$tab Dynamic Roaster
LIB CONNECT TO 'LuUS_DATA:SNOWFLAKE_LuUS_HR_Reader';


Dynamic_Roster_Report:
select *
from DATA_STAGING.HR.DYNAMIC_ROSTER_REPORT;

store Dynamic_Roster_Report into [$(vQSBIE_ExtractQVD_Fact)/DYNAMIC_ROSTER_REPORT$(vSpace)$(vSF).qvd](qvd);   


DROP table Dynamic_Roster_Report;
///$tab exit;
exit script;
///$tab Master Customer v1
// NoConcatenate
// Segment:
// SQL
//    SELECT 
//      cs.LUNDBECK_ID AS CUSTOMER_KEY
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'VALUE TIER' THEN cs.SEGMENT_DESC else NULL end) as VALUE_TIER
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'VALUE TIER' THEN cs.SEGMENT_DESC else NULL  END) as VALUE_TIER_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE = 'ALAI INITIATOR' AND cs.CURRENT_IND = 'Y' THEN CS.SEGMENT_DESC else NULL end ) as ALAI_INITIATOR//added on 15 July
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE = 'MAINTENA INITIATOR' AND cs.CURRENT_IND = 'Y' THEN CS.SEGMENT_DESC else NULL end ) as MAINTENA_INITIATOR//added on 15 July
//     , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE = 'ALAI NBRX' AND cs.CURRENT_IND = 'Y' THEN CS.SEGMENT_DESC else NULL end ) as ALAI_NBRX//added on 15 July
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE = 'ABIM NBRX' AND cs.CURRENT_IND = 'Y' THEN CS.SEGMENT_DESC else NULL end ) as ABIM_NBRX//added on 15 July
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE = 'BP IND' AND cs.CURRENT_IND = 'Y' THEN CS.SEGMENT_DESC else NULL end) as BPI_IND//Added 16 March
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE = 'LLAI IND' AND cs.CURRENT_IND = 'Y' THEN cs.SEGMENT_DESC else NULL end) as LLAI_IND//Added 25 AUG'23
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE = 'FLAG - BIPOLAR TARGET'  AND cs.CURRENT_IND = 'Y' THEN CS.SEGMENT_DESC else NULL end) as FLAG_BIPOLAR_TARGET //Added 25 AUG'23
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'TARGETED DECILE' THEN CS.SEGMENT_DESC else NULL end) as TARGETED_DECILE
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'TARGETED DECILE' THEN cs.SEGMENT_DESC else NULL  END) as TARGETED_DECILE_SORT
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'PRECISION OPPORTUNITY GROUP' THEN CS.SEGMENT_DESC else NULL end) as POG
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'PRECISION OPPORTUNITY GROUP' THEN cs.SEGMENT_DESC else NULL  END) as POG_SORT
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'ATTITUDINAL' THEN CS.SEGMENT_DESC else NULL end) as ATTITUDINAL
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'ATTITUDINAL' THEN cs.SEGMENT_DESC else NULL  END) as ATTITUDINAL_SORT
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'MULTIDIMENSIONAL SEGMENT' THEN CS.SEGMENT_DESC else NULL end) as SEGMENT
//    , max(CASE WHEN cs.SEGMENT_TYPE = 'MULTIDIMENSIONAL SEGMENT' THEN cs.SEGMENT_DESC  else NULL  END) as SEGMENT_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'TARGETING SEGMENT' AND cs.CURRENT_IND = 'Y' THEN CS.SEGMENT_DESC else NULL end ) as NORTHERA_SEGMENT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'TARGETING SEGMENT' AND cs.CURRENT_IND = 'Y' THEN cs.SELECTION_ORDER  else  NULL END ) as NORTHERA_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'TARGETING SEGMENT' AND cs.CURRENT_IND = 'N' THEN CS.SEGMENT_DESC else NULL end ) as NORTHERA_SEGMENT_NEW
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'TARGETING SEGMENT' AND cs.CURRENT_IND = 'N' THEN cs.SELECTION_ORDER  else  NULL END ) as NORTHERA_SORT_NEW 
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'PRIORITIZATION' THEN cs.SEGMENT_DESC else NULL end ) as NORTHERA_PRIORITY
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'PRIORITIZATION' THEN cs.SELECTION_ORDER else NULL  END)  as NORTHERA_PRIORITY_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'WRITER STATUS' THEN cs.SEGMENT_DESC else NULL end) as NORTHERA_WRITER_STATUS
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'WRITER STATUS' THEN CS.SEGMENT_DESC else NULL end) as NORTHERA_WRITER_STATUS_DESC
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'NORTHERA' AND cs.SEGMENT_TYPE = 'WRITER STATUS' THEN cs.SELECTION_ORDER else NULL  END) as NORTHERA_WRITER_STATUS_SORT

//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'HCP TIER' THEN cs.SEGMENT_DESC else NULL end ) as  REXULTI_HCP_TIER
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'HCP TIER' THEN cs.SELECTION_ORDER else NULL  END) as  REXULTI_HCP_TIER_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'AAD HCO TIER' THEN cs.SEGMENT_DESC else NULL end ) as  REXULTI_AAD_HCO_TIER                                     //ON Prem Change                             
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'AAD HCO TIER' THEN cs.SELECTION_ORDER else NULL  END) as  REXULTI_AAD_HCO_TIER_SORT                             //On Prem Change
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'AAD HCP TIER' THEN cs.SEGMENT_DESC else NULL end ) as  REXULTI_AAD_HCP_TIER                                   //On Prem Change
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'AAD HCP TIER' THEN cs.SELECTION_ORDER else NULL  END) as  REXULTI_AAD_HCP_TIER_SORT                           //On Prem Change
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'MDD TIER' THEN cs.SEGMENT_DESC else NULL end ) as REXULTI_MDD_TIER
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'MDD TIER' THEN cs.SELECTION_ORDER else NULL  END)  as REXULTI_MDD_TIER_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'SCZ TIER' THEN cs.SEGMENT_DESC else NULL end ) as REXULTI_SCZ_TIER
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'SCZ TIER' THEN cs.SELECTION_ORDER else NULL  END)  as REXULTI_SCZ_TIER_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'SCZ PEDIATRIC TARGET' THEN cs.SEGMENT_DESC else NULL end ) as REXULTI_SCZ_PED_TARGET
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'SCZ Pediatric Target' THEN cs.SELECTION_ORDER else NULL  END)  as REXULTI_SCZ_PED_TARGET_SORT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'REXULTI' AND cs.SEGMENT_TYPE = 'DECLINER' THEN cs.SEGMENT_DESC else NULL end ) as REXULTI_DECLINER

//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'VYEPTI' AND cs.SEGMENT_TYPE = 'ACCOUNT SEGMENT' THEN cs.SEGMENT_DESC else NULL end ) as ACCOUNT_SEGMENT
//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'TRINTELLIX' AND cs.SEGMENT_TYPE = 'TRINTELLIX NBRX DECLINER' THEN cs.SEGMENT_DESC else NULL end ) as TRINTELLIX_NBRX_DECLINER

//    , max(CASE WHEN CS.PRODUCT_GROUP_NAME = 'ABILIFY MAINTENA' AND cs.SEGMENT_TYPE ='FLAG - BIPOLAR TARGET' AND cs.SEGMENT_DESC = 'Y' THEN 'Y' else NULL end) as ABILIFY_MAINTENA_BIPOLAR_LEAD
//    , MAX(CASE WHEN CS.PRODUCT_GROUP_NAME = 'VYEPTI' and cs.SEGMENT_TYPE = 'ACGRP BOTOX DECILE' THEN CS.SEGMENT_DESC ELSE NULL END) as "aCGRP BOTOX Decile"
//    FROM LUNDBECK_DW.ANALYTICS.CUSTOMER_SEGMENTATION CS
//    WHERE cs.CURRENT_IND = 'Y' 
//    GROUP BY cs.LUNDBECK_ID
//    ;
   
///$tab Master Customer v2
// NoConcatenate
// DIM_MASTER_CUSTOMER:
// LOAD 
//      CUSTOMER_KEY, 
//      LUNDBECK_ID, 
//      ORGANIZATION_NAME, 
//      CUSTOMER_FIRST_NAME, 
//      CUSTOMER_MIDDLE_NAME, 
//      CUSTOMER_LAST_NAME, 
//      CUSTOMER_NAME, 
//      CUSTOMER_ADDR1, 
//      CUSTOMER_ADDR2, 
//      CUSTOMER_CITY, 
//      CUSTOMER_STATE, 
//      CUSTOMER_STATE_ABBREV, 
//      CUSTOMER_ZIP, 
//      CUSTOMER_ADDR_LATITUDE, 
//      CUSTOMER_ADDR_LONGITUDE, 
//      CUSTOMER_PHONE_TYPE, 
//      CUSTOMER_PHONE, 
//      CUSTOMER_PHONE_EXT, 
//      CUSTOMER_STATUS, 
//      CUSTOMER_STATUS_REASON, 
//      CUSTOMER_TYPE, 
//      CUSTOMER_SUB_TYPE_CD, 
//      CUSTOMER_SUB_TYPE_NAME, 
//      CUSTOMER_DETAIL_TYPE_CODE, 
//      CUSTOMER_DETAIL_TYPE, 
//      FACILITY_TYPE, 
//      NPI, 
//      ME_ID, 
//      SPECIALTY,
//      IF(ISNULL(DATA_STEWARDSHIP_EXCLUSION_FLAG),'N', DATA_STEWARDSHIP_EXCLUSION_FLAG) as DATA_STEWARDSHIP_EXCLUSION_FLAG, 
//      IF(ISNULL(LU_NO_CONTACT_FLAG),'N', LU_NO_CONTACT_FLAG) as LU_NO_CONTACT_FLAG,  
//      IF(ISNULL(NO_CONTACT_FLAG),'N', NO_CONTACT_FLAG) as NO_CONTACT_FLAG, 
//      IF(ISNULL(PDRP_IND),'N', PDRP_IND) as PDRP_IND, 
//      IF(ISNULL(PSYCH_SPECIALTY_IND),'N', PSYCH_SPECIALTY_IND) as PSYCH_SPECIALTY_IND, 
//      IF(ISNULL(NEURO_SPECIALTY_IND),'N', NEURO_SPECIALTY_IND) as NEURO_SPECIALTY_IND, 
//      CARDIO_SPECIALTY_IND, 
//      PRIMARY_CARE_SPECIALTY_IND, //PRIMARY_SPECIALTY_IND
//      MID_LEVEL_PRACTITIONER_IND, 
//      IF(ISNULL(ABILIFY_MAINTENA_EXCLUSION_IND),'N', ABILIFY_MAINTENA_EXCLUSION_IND) as ABILIFY_MAINTENA_EXCLUSION_IND,  
//      IF(ISNULL(REXULTI_EXCLUSION_IND),'N',REXULTI_EXCLUSION_IND) as REXULTI_EXCLUSION_IND, 
//      IF(ISNULL(REXULTI_AAD_EXCLUSION_IND),'N',REXULTI_AAD_EXCLUSION_IND) as REXULTI_AAD_EXCLUSION_IND,   //ON Prem Change
//      IF(ISNULL(REXULTI_SCZ_EXCLUSION_IND),'N',REXULTI_SCZ_EXCLUSION_IND) as REXULTI_SCZ_EXCLUSION_IND,   //ON Prem Change
//      IF(ISNULL(REXULTI_MDD_EXCLUSION_IND),'N',REXULTI_MDD_EXCLUSION_IND) as REXULTI_MDD_EXCLUSION_IND,   //ON Prem Change 
//      IF(ISNULL(TRINTELLIX_EXCLUSION_IND),'N',TRINTELLIX_EXCLUSION_IND) as TRINTELLIX_EXCLUSION_IND, 
//      IF(ISNULL(ABILIFY_MAINTENA_RETAIL_HCO_EXCL_IND),'N',ABILIFY_MAINTENA_RETAIL_HCO_EXCL_IND) as ABILIFY_MAINTENA_RETAIL_HCO_EXCL_IND,  
//      IF(ISNULL(REXULTI_RETAIL_HCO_EXCL_IND),'N',REXULTI_RETAIL_HCO_EXCL_IND) as REXULTI_RETAIL_HCO_EXCL_IND,
//      IF(ISNULL(REXULTI_RETAIL_HCO_AAD_EXCL_IND),'N',REXULTI_RETAIL_HCO_AAD_EXCL_IND) as REXULTI_RETAIL_HCO_AAD_EXCL_IND,     //ON Prem Change
//      IF(ISNULL(REXULTI_RETAIL_HCO_SCZ_EXCL_IND),'N',REXULTI_RETAIL_HCO_SCZ_EXCL_IND) as REXULTI_RETAIL_HCO_SCZ_EXCL_IND,     //ON Prem Change
//      IF(ISNULL(REXULTI_RETAIL_HCO_MDD_EXCL_IND),'N',REXULTI_RETAIL_HCO_MDD_EXCL_IND) as REXULTI_RETAIL_HCO_MDD_EXCL_IND,     //ON Prem Change
//      IF(ISNULL(TRINTELLIX_RETAIL_HCO_EXCL_IND),'N',TRINTELLIX_RETAIL_HCO_EXCL_IND) as TRINTELLIX_RETAIL_HCO_EXCL_IND,   
//      LIS_TARGET, 
//      PCT_LIS_CLAIMS,  
//      MSA, 
//      CBSA,
//      REXULTI_SALES_BI_VISIBILITY,
//      If(PRIMARY_CARE_SPECIALTY_IND='Y' and PSYCH_SPECIALTY_IND='N' and NEURO_SPECIALTY_IND='N' and CARDIO_SPECIALTY_IND='N' and MID_LEVEL_PRACTITIONER_IND='N','PCP',
//         If(PRIMARY_CARE_SPECIALTY_IND='N' and PSYCH_SPECIALTY_IND='Y' and NEURO_SPECIALTY_IND='N' and CARDIO_SPECIALTY_IND='N' and MID_LEVEL_PRACTITIONER_IND='N','PSYCH',
//            If(PRIMARY_CARE_SPECIALTY_IND='N' and PSYCH_SPECIALTY_IND='N' and NEURO_SPECIALTY_IND='Y' and CARDIO_SPECIALTY_IND='N' and MID_LEVEL_PRACTITIONER_IND='N','NEURO',
//                If(PRIMARY_CARE_SPECIALTY_IND='N' and PSYCH_SPECIALTY_IND='N' and NEURO_SPECIALTY_IND='N' and CARDIO_SPECIALTY_IND='N' and MID_LEVEL_PRACTITIONER_IND='Y','NPPA',
//                 If(PRIMARY_CARE_SPECIALTY_IND='N' and PSYCH_SPECIALTY_IND='N' and NEURO_SPECIALTY_IND='N' and CARDIO_SPECIALTY_IND='Y' and MID_LEVEL_PRACTITIONER_IND='N','CARD',
// 				   If(PRIMARY_CARE_SPECIALTY_IND='N' and PSYCH_SPECIALTY_IND='N' and NEURO_SPECIALTY_IND='N' and CARDIO_SPECIALTY_IND='N' 
//                    and MID_LEVEL_PRACTITIONER_IND='N','OTHER'
//         )))))) as [Speciality Group]
// FROM
// [$(vQSBIE_ExtractQVD_Dimension)/DIM_CUSTOMER$(vSpace)$(vSF).qvd]
// (qvd);

// NoConcatenate
// TEMP_CALL_PLAN_TARGET:
// SELECT DISTINCT LUNDBECK_ID AS CUSTOMER_KEY, PRODUCT_GROUP_NAME AS PRODUCT_NAME
// FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" F 
// WHERE  LUNDBECK_ID <> 'UNKNOWN' AND CURRENT_IND='Y';

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'ABILIFY MAINTENA','Y','N') AS Lu_Call_Plan_Target_Abilify_Maintena
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'ABILIFY MAINTENA';


// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'ABILIFY LAI FRANCHISE','Y','N') AS Lu_Call_Plan_Target_Abilify_LAI_Franchise
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'ABILIFY LAI FRANCHISE';

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'REXULTI','Y','N') AS Lu_Call_Plan_Target_Rexulti
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'REXULTI';

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'REXULTI AADAD','N') AS Lu_Call_Plan_Target_Rexulti_AADAD
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'REXULTI AADAD';

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'TRINTELLIX','Y','N') AS Lu_Call_Plan_Target_Trintellix
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'TRINTELLIX';

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'NORTHERA','Y','N') AS Lu_Call_Plan_Target_Northera
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'NORTHERA';

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'VYEPTI','Y','N') AS Lu_Call_Plan_Target_Vyepti
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'VYEPTI';

// Drop Tables TEMP_CALL_PLAN_TARGET;

// TEMP_CALL_PLAN_TARGET:
// SELECT DISTINCT LUNDBECK_ID AS CUSTOMER_KEY, PRODUCT_GROUP_NAME AS PRODUCT_NAME, DETAIL_PRIORITY
// FROM "LUNDBECK_DW"."ANALYTICS"."CALL_PLAN_LU_SF" F 
// WHERE  LUNDBECK_ID <> 'UNKNOWN' AND CURRENT_IND='Y';

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD CUSTOMER_KEY, 
// 	IF(PRODUCT_NAME = 'REXULTI','Y','N') AS Lu_P1_Call_Plan_Target_Rexulti
// Resident TEMP_CALL_PLAN_TARGET
// WHERE PRODUCT_NAME = 'REXULTI' and DETAIL_PRIORITY=1;

// LEFT JOIN (DIM_MASTER_CUSTOMER)
// LOAD *
// Resident Segment;

// Drop Table Segment;

// NoConcatenate
// DIM_CUST:
// LOAD
//     CUSTOMER_KEY,
//     LUNDBECK_ID,
//     ORGANIZATION_NAME,
//     CUSTOMER_FIRST_NAME,
//     CUSTOMER_MIDDLE_NAME,
//     CUSTOMER_LAST_NAME,
//     CUSTOMER_NAME,
//     CUSTOMER_ADDR1,
//     CUSTOMER_ADDR2,
//     CUSTOMER_CITY,
//     CUSTOMER_STATE,
//     CUSTOMER_STATE_ABBREV,
//     CUSTOMER_ZIP,
//     CUSTOMER_ADDR_LATITUDE,
//     CUSTOMER_ADDR_LONGITUDE,
//     CUSTOMER_PHONE_TYPE,
//     CUSTOMER_PHONE,
//     CUSTOMER_PHONE_EXT,
//     CUSTOMER_STATUS,
//     CUSTOMER_STATUS_REASON,
//     CUSTOMER_TYPE,
//     CUSTOMER_SUB_TYPE_CD,
//     CUSTOMER_SUB_TYPE_NAME,
//     CUSTOMER_DETAIL_TYPE_CODE,
//     CUSTOMER_DETAIL_TYPE,
//     FACILITY_TYPE,
//     NPI,
//     ME_ID,
//     SPECIALTY,
//     DATA_STEWARDSHIP_EXCLUSION_FLAG,
//     LU_NO_CONTACT_FLAG,
//     NO_CONTACT_FLAG,
//     PDRP_IND,
//     PSYCH_SPECIALTY_IND,
//     NEURO_SPECIALTY_IND,
//     CARDIO_SPECIALTY_IND,
//     PRIMARY_CARE_SPECIALTY_IND,
//     MID_LEVEL_PRACTITIONER_IND,
//     ABILIFY_MAINTENA_EXCLUSION_IND,
//     REXULTI_EXCLUSION_IND,
//     REXULTI_AAD_EXCLUSION_IND,
//     REXULTI_SCZ_EXCLUSION_IND,
//     REXULTI_MDD_EXCLUSION_IND,
//     REXULTI_RETAIL_HCO_SCZ_EXCL_IND,
//     REXULTI_RETAIL_HCO_MDD_EXCL_IND,
//     TRINTELLIX_EXCLUSION_IND,
//     ABILIFY_MAINTENA_RETAIL_HCO_EXCL_IND,
//     REXULTI_RETAIL_HCO_EXCL_IND,
//     REXULTI_RETAIL_HCO_AAD_EXCL_IND,
//     TRINTELLIX_RETAIL_HCO_EXCL_IND,
//     LIS_TARGET,
//     PCT_LIS_CLAIMS,
//     MSA,
//     CBSA,
//     REXULTI_SALES_BI_VISIBILITY,
//     "Speciality Group",
//     Lu_Call_Plan_Target_Abilify_Maintena,
//     Lu_Call_Plan_Target_Abilify_LAI_Franchise,
//     Lu_Call_Plan_Target_Rexulti,
//     Lu_Call_Plan_Target_Trintellix,
//     Lu_Call_Plan_Target_Northera,
//     Lu_Call_Plan_Target_Vyepti,
//     Lu_P1_Call_Plan_Target_Rexulti,
//     if(IsNULL(VALUE_TIER),'NULL',VALUE_TIER) as VALUE_TIER,
//     VALUE_TIER_SORT,
//     if(IsNULL(LLAI_IND),'NULL',LLAI_IND) as LLAI_IND,
//     if(IsNULL(FLAG_BIPOLAR_TARGET),'NULL',FLAG_BIPOLAR_TARGET) as FLAG_BIPOLAR_TARGET,
//     if(IsNULL(ALAI_INITIATOR),'NULL',ALAI_INITIATOR) as ALAI_INITIATOR,
//     if(IsNULL(MAINTENA_INITIATOR),'NULL',MAINTENA_INITIATOR) as MAINTENA_INITIATOR,
//     if(IsNULL(ALAI_NBRX),'NULL', ALAI_NBRX) as ALAI_NBRX,
//     if(IsNULL(ABIM_NBRX),'NULL',ABIM_NBRX) as ABIM_NBRX,
//     if(IsNULL(BPI_IND),'NULL',BPI_IND) as BPI_IND,
//     if(IsNULL(TARGETED_DECILE),'NULL',TARGETED_DECILE) as TARGETED_DECILE,
//     TARGETED_DECILE_SORT,
//     if(IsNULL(POG),'NULL',POG) as POG,
//     POG_SORT,
//     if(IsNULL(ATTITUDINAL),'NULL',ATTITUDINAL) as ATTITUDINAL,
//     ATTITUDINAL_SORT,
//     if(IsNULL(SEGMENT),'NULL',SEGMENT) as SEGMENT,
//     SEGMENT_SORT,
//     if(IsNULL(NORTHERA_SEGMENT),'NULL',NORTHERA_SEGMENT) as NORTHERA_SEGMENT,
//     NORTHERA_SORT,
//     if(IsNULL(NORTHERA_SEGMENT_NEW),'NULL',NORTHERA_SEGMENT_NEW) as NORTHERA_SEGMENT_NEW,
//     NORTHERA_SORT_NEW,
//     if(IsNULL(NORTHERA_PRIORITY),'NULL',NORTHERA_PRIORITY) as NORTHERA_PRIORITY,
//     NORTHERA_PRIORITY_SORT,
//     if(IsNULL(NORTHERA_WRITER_STATUS),'NULL',NORTHERA_WRITER_STATUS) as NORTHERA_WRITER_STATUS,
//     if(IsNULL(NORTHERA_WRITER_STATUS_DESC),'NULL',NORTHERA_WRITER_STATUS_DESC) as NORTHERA_WRITER_STATUS_DESC,
//     NORTHERA_WRITER_STATUS_SORT,
//     if(IsNULL(REXULTI_HCP_TIER),'NULL',REXULTI_HCP_TIER) as REXULTI_HCP_TIER,
//     REXULTI_HCP_TIER_SORT,
//     if(IsNULL(REXULTI_AAD_HCO_TIER),'NULL',REXULTI_AAD_HCO_TIER) as REXULTI_AAD_HCO_TIER,
//     REXULTI_AAD_HCO_TIER_SORT,
//     if(IsNULL(REXULTI_AAD_HCP_TIER),'NULL',REXULTI_AAD_HCP_TIER) as REXULTI_AAD_HCP_TIER,
//     REXULTI_AAD_HCP_TIER_SORT,
//     if(IsNULL(REXULTI_MDD_TIER),'NULL',REXULTI_MDD_TIER) as REXULTI_MDD_TIER,
//     REXULTI_MDD_TIER_SORT,
//     if(IsNULL(REXULTI_SCZ_TIER),'NULL',REXULTI_SCZ_TIER) as REXULTI_SCZ_TIER,
//     REXULTI_SCZ_TIER_SORT,
//     if(IsNULL(REXULTI_SCZ_PED_TARGET),'NULL',REXULTI_SCZ_PED_TARGET) as REXULTI_SCZ_PED_TARGET,
//     REXULTI_SCZ_PED_TARGET_SORT,
//     if(IsNULL(REXULTI_DECLINER),'NULL',REXULTI_DECLINER) as REXULTI_DECLINER,
//     if(IsNULL(ACCOUNT_SEGMENT),'NULL',ACCOUNT_SEGMENT) as ACCOUNT_SEGMENT,
//     if(IsNULL(TRINTELLIX_NBRX_DECLINER),'NULL',TRINTELLIX_NBRX_DECLINER) as TRINTELLIX_NBRX_DECLINER,
//     if(IsNULL(ABILIFY_MAINTENA_BIPOLAR_LEAD),'NULL',ABILIFY_MAINTENA_BIPOLAR_LEAD) as ABILIFY_MAINTENA_BIPOLAR_LEAD,
//     "aCGRP BOTOX Decile"    
// Resident DIM_MASTER_CUSTOMER;

// STORE DIM_CUST INTO [$(vQSBIE_TransformQVD_Dimension)/DIM_MASTER_CUSTOMER$(vSpace)$(vSF).qvd] (qvd);

// Drop Table DIM_MASTER_CUSTOMER;